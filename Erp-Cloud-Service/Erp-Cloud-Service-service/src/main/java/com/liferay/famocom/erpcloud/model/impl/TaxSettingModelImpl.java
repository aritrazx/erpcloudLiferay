/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.TaxSetting;
import com.liferay.famocom.erpcloud.model.TaxSettingModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the TaxSetting service. Represents a row in the &quot;taxSetting&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TaxSettingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TaxSettingImpl}.
 * </p>
 *
 * @author Samaresh
 * @see TaxSettingImpl
 * @see TaxSetting
 * @see TaxSettingModel
 * @generated
 */
@ProviderType
public class TaxSettingModelImpl extends BaseModelImpl<TaxSetting>
	implements TaxSettingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tax setting model instance should use the {@link TaxSetting} interface instead.
	 */
	public static final String TABLE_NAME = "taxSetting";
	public static final Object[][] TABLE_COLUMNS = {
			{ "taxSettingId", Types.BIGINT },
			{ "componentId", Types.BIGINT },
			{ "componentName", Types.VARCHAR },
			{ "taxFormulla", Types.VARCHAR },
			{ "createdBy", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("taxSettingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("componentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("componentName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("taxFormulla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table taxSetting (taxSettingId LONG not null primary key,componentId LONG,componentName VARCHAR(75) null,taxFormulla VARCHAR(75) null,createdBy LONG,createdDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table taxSetting";
	public static final String ORDER_BY_JPQL = " ORDER BY taxSetting.taxSettingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY taxSetting.taxSettingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.TaxSetting"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.TaxSetting"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.TaxSetting"),
			true);
	public static final long COMPONENTID_COLUMN_BITMASK = 1L;
	public static final long TAXSETTINGID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.TaxSetting"));

	public TaxSettingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _taxSettingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTaxSettingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _taxSettingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TaxSetting.class;
	}

	@Override
	public String getModelClassName() {
		return TaxSetting.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("taxSettingId", getTaxSettingId());
		attributes.put("componentId", getComponentId());
		attributes.put("componentName", getComponentName());
		attributes.put("taxFormulla", getTaxFormulla());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long taxSettingId = (Long)attributes.get("taxSettingId");

		if (taxSettingId != null) {
			setTaxSettingId(taxSettingId);
		}

		Long componentId = (Long)attributes.get("componentId");

		if (componentId != null) {
			setComponentId(componentId);
		}

		String componentName = (String)attributes.get("componentName");

		if (componentName != null) {
			setComponentName(componentName);
		}

		String taxFormulla = (String)attributes.get("taxFormulla");

		if (taxFormulla != null) {
			setTaxFormulla(taxFormulla);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getTaxSettingId() {
		return _taxSettingId;
	}

	@Override
	public void setTaxSettingId(long taxSettingId) {
		_taxSettingId = taxSettingId;
	}

	@Override
	public long getComponentId() {
		return _componentId;
	}

	@Override
	public void setComponentId(long componentId) {
		_columnBitmask |= COMPONENTID_COLUMN_BITMASK;

		if (!_setOriginalComponentId) {
			_setOriginalComponentId = true;

			_originalComponentId = _componentId;
		}

		_componentId = componentId;
	}

	public long getOriginalComponentId() {
		return _originalComponentId;
	}

	@Override
	public String getComponentName() {
		if (_componentName == null) {
			return "";
		}
		else {
			return _componentName;
		}
	}

	@Override
	public void setComponentName(String componentName) {
		_componentName = componentName;
	}

	@Override
	public String getTaxFormulla() {
		if (_taxFormulla == null) {
			return "";
		}
		else {
			return _taxFormulla;
		}
	}

	@Override
	public void setTaxFormulla(String taxFormulla) {
		_taxFormulla = taxFormulla;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TaxSetting.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TaxSetting toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TaxSetting)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TaxSettingImpl taxSettingImpl = new TaxSettingImpl();

		taxSettingImpl.setTaxSettingId(getTaxSettingId());
		taxSettingImpl.setComponentId(getComponentId());
		taxSettingImpl.setComponentName(getComponentName());
		taxSettingImpl.setTaxFormulla(getTaxFormulla());
		taxSettingImpl.setCreatedBy(getCreatedBy());
		taxSettingImpl.setCreatedDate(getCreatedDate());
		taxSettingImpl.setModifiedDate(getModifiedDate());

		taxSettingImpl.resetOriginalValues();

		return taxSettingImpl;
	}

	@Override
	public int compareTo(TaxSetting taxSetting) {
		long primaryKey = taxSetting.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TaxSetting)) {
			return false;
		}

		TaxSetting taxSetting = (TaxSetting)obj;

		long primaryKey = taxSetting.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TaxSettingModelImpl taxSettingModelImpl = this;

		taxSettingModelImpl._originalComponentId = taxSettingModelImpl._componentId;

		taxSettingModelImpl._setOriginalComponentId = false;

		taxSettingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TaxSetting> toCacheModel() {
		TaxSettingCacheModel taxSettingCacheModel = new TaxSettingCacheModel();

		taxSettingCacheModel.taxSettingId = getTaxSettingId();

		taxSettingCacheModel.componentId = getComponentId();

		taxSettingCacheModel.componentName = getComponentName();

		String componentName = taxSettingCacheModel.componentName;

		if ((componentName != null) && (componentName.length() == 0)) {
			taxSettingCacheModel.componentName = null;
		}

		taxSettingCacheModel.taxFormulla = getTaxFormulla();

		String taxFormulla = taxSettingCacheModel.taxFormulla;

		if ((taxFormulla != null) && (taxFormulla.length() == 0)) {
			taxSettingCacheModel.taxFormulla = null;
		}

		taxSettingCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			taxSettingCacheModel.createdDate = createdDate.getTime();
		}
		else {
			taxSettingCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			taxSettingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			taxSettingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return taxSettingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{taxSettingId=");
		sb.append(getTaxSettingId());
		sb.append(", componentId=");
		sb.append(getComponentId());
		sb.append(", componentName=");
		sb.append(getComponentName());
		sb.append(", taxFormulla=");
		sb.append(getTaxFormulla());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.TaxSetting");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>taxSettingId</column-name><column-value><![CDATA[");
		sb.append(getTaxSettingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>componentId</column-name><column-value><![CDATA[");
		sb.append(getComponentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>componentName</column-name><column-value><![CDATA[");
		sb.append(getComponentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taxFormulla</column-name><column-value><![CDATA[");
		sb.append(getTaxFormulla());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = TaxSetting.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			TaxSetting.class, ModelWrapper.class
		};
	private long _taxSettingId;
	private long _componentId;
	private long _originalComponentId;
	private boolean _setOriginalComponentId;
	private String _componentName;
	private String _taxFormulla;
	private long _createdBy;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private TaxSetting _escapedModel;
}