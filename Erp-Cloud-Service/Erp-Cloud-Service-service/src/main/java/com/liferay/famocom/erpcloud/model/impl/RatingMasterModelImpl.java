/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.RatingMaster;
import com.liferay.famocom.erpcloud.model.RatingMasterModel;
import com.liferay.famocom.erpcloud.model.RatingMasterSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the RatingMaster service. Represents a row in the &quot;ratingMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link RatingMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RatingMasterImpl}.
 * </p>
 *
 * @author Samaresh
 * @see RatingMasterImpl
 * @see RatingMaster
 * @see RatingMasterModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class RatingMasterModelImpl extends BaseModelImpl<RatingMaster>
	implements RatingMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rating master model instance should use the {@link RatingMaster} interface instead.
	 */
	public static final String TABLE_NAME = "ratingMaster";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ratingId", Types.BIGINT },
			{ "ratingNum", Types.VARCHAR },
			{ "ratingKey", Types.VARCHAR },
			{ "ratingDescription", Types.VARCHAR },
			{ "salaryPercentage", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "addedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ratingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ratingNum", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ratingKey", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ratingDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("salaryPercentage", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table ratingMaster (ratingId LONG not null primary key,ratingNum VARCHAR(75) null,ratingKey VARCHAR(75) null,ratingDescription VARCHAR(75) null,salaryPercentage LONG,companyId LONG,addedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table ratingMaster";
	public static final String ORDER_BY_JPQL = " ORDER BY ratingMaster.ratingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ratingMaster.ratingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.RatingMaster"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.RatingMaster"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static RatingMaster toModel(RatingMasterSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		RatingMaster model = new RatingMasterImpl();

		model.setRatingId(soapModel.getRatingId());
		model.setRatingNum(soapModel.getRatingNum());
		model.setRatingKey(soapModel.getRatingKey());
		model.setRatingDescription(soapModel.getRatingDescription());
		model.setSalaryPercentage(soapModel.getSalaryPercentage());
		model.setCompanyId(soapModel.getCompanyId());
		model.setAddedDate(soapModel.getAddedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<RatingMaster> toModels(RatingMasterSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<RatingMaster> models = new ArrayList<RatingMaster>(soapModels.length);

		for (RatingMasterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.RatingMaster"));

	public RatingMasterModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ratingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRatingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ratingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RatingMaster.class;
	}

	@Override
	public String getModelClassName() {
		return RatingMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ratingId", getRatingId());
		attributes.put("ratingNum", getRatingNum());
		attributes.put("ratingKey", getRatingKey());
		attributes.put("ratingDescription", getRatingDescription());
		attributes.put("salaryPercentage", getSalaryPercentage());
		attributes.put("companyId", getCompanyId());
		attributes.put("addedDate", getAddedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long ratingId = (Long)attributes.get("ratingId");

		if (ratingId != null) {
			setRatingId(ratingId);
		}

		String ratingNum = (String)attributes.get("ratingNum");

		if (ratingNum != null) {
			setRatingNum(ratingNum);
		}

		String ratingKey = (String)attributes.get("ratingKey");

		if (ratingKey != null) {
			setRatingKey(ratingKey);
		}

		String ratingDescription = (String)attributes.get("ratingDescription");

		if (ratingDescription != null) {
			setRatingDescription(ratingDescription);
		}

		Long salaryPercentage = (Long)attributes.get("salaryPercentage");

		if (salaryPercentage != null) {
			setSalaryPercentage(salaryPercentage);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}
	}

	@JSON
	@Override
	public long getRatingId() {
		return _ratingId;
	}

	@Override
	public void setRatingId(long ratingId) {
		_ratingId = ratingId;
	}

	@JSON
	@Override
	public String getRatingNum() {
		if (_ratingNum == null) {
			return "";
		}
		else {
			return _ratingNum;
		}
	}

	@Override
	public void setRatingNum(String ratingNum) {
		_ratingNum = ratingNum;
	}

	@JSON
	@Override
	public String getRatingKey() {
		if (_ratingKey == null) {
			return "";
		}
		else {
			return _ratingKey;
		}
	}

	@Override
	public void setRatingKey(String ratingKey) {
		_ratingKey = ratingKey;
	}

	@JSON
	@Override
	public String getRatingDescription() {
		if (_ratingDescription == null) {
			return "";
		}
		else {
			return _ratingDescription;
		}
	}

	@Override
	public void setRatingDescription(String ratingDescription) {
		_ratingDescription = ratingDescription;
	}

	@JSON
	@Override
	public long getSalaryPercentage() {
		return _salaryPercentage;
	}

	@Override
	public void setSalaryPercentage(long salaryPercentage) {
		_salaryPercentage = salaryPercentage;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			RatingMaster.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RatingMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RatingMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RatingMasterImpl ratingMasterImpl = new RatingMasterImpl();

		ratingMasterImpl.setRatingId(getRatingId());
		ratingMasterImpl.setRatingNum(getRatingNum());
		ratingMasterImpl.setRatingKey(getRatingKey());
		ratingMasterImpl.setRatingDescription(getRatingDescription());
		ratingMasterImpl.setSalaryPercentage(getSalaryPercentage());
		ratingMasterImpl.setCompanyId(getCompanyId());
		ratingMasterImpl.setAddedDate(getAddedDate());

		ratingMasterImpl.resetOriginalValues();

		return ratingMasterImpl;
	}

	@Override
	public int compareTo(RatingMaster ratingMaster) {
		long primaryKey = ratingMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RatingMaster)) {
			return false;
		}

		RatingMaster ratingMaster = (RatingMaster)obj;

		long primaryKey = ratingMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RatingMaster> toCacheModel() {
		RatingMasterCacheModel ratingMasterCacheModel = new RatingMasterCacheModel();

		ratingMasterCacheModel.ratingId = getRatingId();

		ratingMasterCacheModel.ratingNum = getRatingNum();

		String ratingNum = ratingMasterCacheModel.ratingNum;

		if ((ratingNum != null) && (ratingNum.length() == 0)) {
			ratingMasterCacheModel.ratingNum = null;
		}

		ratingMasterCacheModel.ratingKey = getRatingKey();

		String ratingKey = ratingMasterCacheModel.ratingKey;

		if ((ratingKey != null) && (ratingKey.length() == 0)) {
			ratingMasterCacheModel.ratingKey = null;
		}

		ratingMasterCacheModel.ratingDescription = getRatingDescription();

		String ratingDescription = ratingMasterCacheModel.ratingDescription;

		if ((ratingDescription != null) && (ratingDescription.length() == 0)) {
			ratingMasterCacheModel.ratingDescription = null;
		}

		ratingMasterCacheModel.salaryPercentage = getSalaryPercentage();

		ratingMasterCacheModel.companyId = getCompanyId();

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			ratingMasterCacheModel.addedDate = addedDate.getTime();
		}
		else {
			ratingMasterCacheModel.addedDate = Long.MIN_VALUE;
		}

		return ratingMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{ratingId=");
		sb.append(getRatingId());
		sb.append(", ratingNum=");
		sb.append(getRatingNum());
		sb.append(", ratingKey=");
		sb.append(getRatingKey());
		sb.append(", ratingDescription=");
		sb.append(getRatingDescription());
		sb.append(", salaryPercentage=");
		sb.append(getSalaryPercentage());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.RatingMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ratingId</column-name><column-value><![CDATA[");
		sb.append(getRatingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratingNum</column-name><column-value><![CDATA[");
		sb.append(getRatingNum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratingKey</column-name><column-value><![CDATA[");
		sb.append(getRatingKey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratingDescription</column-name><column-value><![CDATA[");
		sb.append(getRatingDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>salaryPercentage</column-name><column-value><![CDATA[");
		sb.append(getSalaryPercentage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = RatingMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			RatingMaster.class, ModelWrapper.class
		};
	private long _ratingId;
	private String _ratingNum;
	private String _ratingKey;
	private String _ratingDescription;
	private long _salaryPercentage;
	private long _companyId;
	private Date _addedDate;
	private RatingMaster _escapedModel;
}