/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.FinSalary;
import com.liferay.famocom.erpcloud.model.FinSalaryModel;
import com.liferay.famocom.erpcloud.model.FinSalarySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the FinSalary service. Represents a row in the &quot;finalSalary&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link FinSalaryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FinSalaryImpl}.
 * </p>
 *
 * @author Samaresh
 * @see FinSalaryImpl
 * @see FinSalary
 * @see FinSalaryModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class FinSalaryModelImpl extends BaseModelImpl<FinSalary>
	implements FinSalaryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a fin salary model instance should use the {@link FinSalary} interface instead.
	 */
	public static final String TABLE_NAME = "finalSalary";
	public static final Object[][] TABLE_COLUMNS = {
			{ "finSalaryId", Types.BIGINT },
			{ "monthYear", Types.BIGINT },
			{ "totalEarning", Types.DOUBLE },
			{ "totalDeduction", Types.DOUBLE },
			{ "totalAmount", Types.DOUBLE },
			{ "isLock", Types.BIGINT },
			{ "createdBy", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("finSalaryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("monthYear", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("totalEarning", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("totalDeduction", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("totalAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("isLock", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table finalSalary (finSalaryId LONG not null primary key,monthYear LONG,totalEarning DOUBLE,totalDeduction DOUBLE,totalAmount DOUBLE,isLock LONG,createdBy LONG,createdDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table finalSalary";
	public static final String ORDER_BY_JPQL = " ORDER BY finSalary.finSalaryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY finalSalary.finSalaryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.FinSalary"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.FinSalary"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.FinSalary"),
			true);
	public static final long MONTHYEAR_COLUMN_BITMASK = 1L;
	public static final long FINSALARYID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FinSalary toModel(FinSalarySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		FinSalary model = new FinSalaryImpl();

		model.setFinSalaryId(soapModel.getFinSalaryId());
		model.setMonthYear(soapModel.getMonthYear());
		model.setTotalEarning(soapModel.getTotalEarning());
		model.setTotalDeduction(soapModel.getTotalDeduction());
		model.setTotalAmount(soapModel.getTotalAmount());
		model.setIsLock(soapModel.getIsLock());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setCreatedDate(soapModel.getCreatedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FinSalary> toModels(FinSalarySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<FinSalary> models = new ArrayList<FinSalary>(soapModels.length);

		for (FinSalarySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.FinSalary"));

	public FinSalaryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _finSalaryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFinSalaryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _finSalaryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FinSalary.class;
	}

	@Override
	public String getModelClassName() {
		return FinSalary.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("finSalaryId", getFinSalaryId());
		attributes.put("monthYear", getMonthYear());
		attributes.put("totalEarning", getTotalEarning());
		attributes.put("totalDeduction", getTotalDeduction());
		attributes.put("totalAmount", getTotalAmount());
		attributes.put("isLock", getIsLock());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long finSalaryId = (Long)attributes.get("finSalaryId");

		if (finSalaryId != null) {
			setFinSalaryId(finSalaryId);
		}

		Long monthYear = (Long)attributes.get("monthYear");

		if (monthYear != null) {
			setMonthYear(monthYear);
		}

		Double totalEarning = (Double)attributes.get("totalEarning");

		if (totalEarning != null) {
			setTotalEarning(totalEarning);
		}

		Double totalDeduction = (Double)attributes.get("totalDeduction");

		if (totalDeduction != null) {
			setTotalDeduction(totalDeduction);
		}

		Double totalAmount = (Double)attributes.get("totalAmount");

		if (totalAmount != null) {
			setTotalAmount(totalAmount);
		}

		Long isLock = (Long)attributes.get("isLock");

		if (isLock != null) {
			setIsLock(isLock);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}
	}

	@JSON
	@Override
	public long getFinSalaryId() {
		return _finSalaryId;
	}

	@Override
	public void setFinSalaryId(long finSalaryId) {
		_finSalaryId = finSalaryId;
	}

	@JSON
	@Override
	public long getMonthYear() {
		return _monthYear;
	}

	@Override
	public void setMonthYear(long monthYear) {
		_columnBitmask |= MONTHYEAR_COLUMN_BITMASK;

		if (!_setOriginalMonthYear) {
			_setOriginalMonthYear = true;

			_originalMonthYear = _monthYear;
		}

		_monthYear = monthYear;
	}

	public long getOriginalMonthYear() {
		return _originalMonthYear;
	}

	@JSON
	@Override
	public double getTotalEarning() {
		return _totalEarning;
	}

	@Override
	public void setTotalEarning(double totalEarning) {
		_totalEarning = totalEarning;
	}

	@JSON
	@Override
	public double getTotalDeduction() {
		return _totalDeduction;
	}

	@Override
	public void setTotalDeduction(double totalDeduction) {
		_totalDeduction = totalDeduction;
	}

	@JSON
	@Override
	public double getTotalAmount() {
		return _totalAmount;
	}

	@Override
	public void setTotalAmount(double totalAmount) {
		_totalAmount = totalAmount;
	}

	@JSON
	@Override
	public long getIsLock() {
		return _isLock;
	}

	@Override
	public void setIsLock(long isLock) {
		_isLock = isLock;
	}

	@JSON
	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FinSalary.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FinSalary toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FinSalary)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FinSalaryImpl finSalaryImpl = new FinSalaryImpl();

		finSalaryImpl.setFinSalaryId(getFinSalaryId());
		finSalaryImpl.setMonthYear(getMonthYear());
		finSalaryImpl.setTotalEarning(getTotalEarning());
		finSalaryImpl.setTotalDeduction(getTotalDeduction());
		finSalaryImpl.setTotalAmount(getTotalAmount());
		finSalaryImpl.setIsLock(getIsLock());
		finSalaryImpl.setCreatedBy(getCreatedBy());
		finSalaryImpl.setCreatedDate(getCreatedDate());

		finSalaryImpl.resetOriginalValues();

		return finSalaryImpl;
	}

	@Override
	public int compareTo(FinSalary finSalary) {
		long primaryKey = finSalary.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FinSalary)) {
			return false;
		}

		FinSalary finSalary = (FinSalary)obj;

		long primaryKey = finSalary.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		FinSalaryModelImpl finSalaryModelImpl = this;

		finSalaryModelImpl._originalMonthYear = finSalaryModelImpl._monthYear;

		finSalaryModelImpl._setOriginalMonthYear = false;

		finSalaryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FinSalary> toCacheModel() {
		FinSalaryCacheModel finSalaryCacheModel = new FinSalaryCacheModel();

		finSalaryCacheModel.finSalaryId = getFinSalaryId();

		finSalaryCacheModel.monthYear = getMonthYear();

		finSalaryCacheModel.totalEarning = getTotalEarning();

		finSalaryCacheModel.totalDeduction = getTotalDeduction();

		finSalaryCacheModel.totalAmount = getTotalAmount();

		finSalaryCacheModel.isLock = getIsLock();

		finSalaryCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			finSalaryCacheModel.createdDate = createdDate.getTime();
		}
		else {
			finSalaryCacheModel.createdDate = Long.MIN_VALUE;
		}

		return finSalaryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{finSalaryId=");
		sb.append(getFinSalaryId());
		sb.append(", monthYear=");
		sb.append(getMonthYear());
		sb.append(", totalEarning=");
		sb.append(getTotalEarning());
		sb.append(", totalDeduction=");
		sb.append(getTotalDeduction());
		sb.append(", totalAmount=");
		sb.append(getTotalAmount());
		sb.append(", isLock=");
		sb.append(getIsLock());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.FinSalary");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>finSalaryId</column-name><column-value><![CDATA[");
		sb.append(getFinSalaryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>monthYear</column-name><column-value><![CDATA[");
		sb.append(getMonthYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalEarning</column-name><column-value><![CDATA[");
		sb.append(getTotalEarning());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalDeduction</column-name><column-value><![CDATA[");
		sb.append(getTotalDeduction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalAmount</column-name><column-value><![CDATA[");
		sb.append(getTotalAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isLock</column-name><column-value><![CDATA[");
		sb.append(getIsLock());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = FinSalary.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			FinSalary.class, ModelWrapper.class
		};
	private long _finSalaryId;
	private long _monthYear;
	private long _originalMonthYear;
	private boolean _setOriginalMonthYear;
	private double _totalEarning;
	private double _totalDeduction;
	private double _totalAmount;
	private long _isLock;
	private long _createdBy;
	private Date _createdDate;
	private long _columnBitmask;
	private FinSalary _escapedModel;
}