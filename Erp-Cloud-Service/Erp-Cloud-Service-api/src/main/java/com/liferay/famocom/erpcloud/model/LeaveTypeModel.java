/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the LeaveType service. Represents a row in the &quot;leaveType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.famocom.erpcloud.model.impl.LeaveTypeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.famocom.erpcloud.model.impl.LeaveTypeImpl}.
 * </p>
 *
 * @author Samaresh
 * @see LeaveType
 * @see com.liferay.famocom.erpcloud.model.impl.LeaveTypeImpl
 * @see com.liferay.famocom.erpcloud.model.impl.LeaveTypeModelImpl
 * @generated
 */
@ProviderType
public interface LeaveTypeModel extends BaseModel<LeaveType>, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a leave type model instance should use the {@link LeaveType} interface instead.
	 */

	/**
	 * Returns the primary key of this leave type.
	 *
	 * @return the primary key of this leave type
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this leave type.
	 *
	 * @param primaryKey the primary key of this leave type
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the leave type ID of this leave type.
	 *
	 * @return the leave type ID of this leave type
	 */
	public long getLeaveTypeId();

	/**
	 * Sets the leave type ID of this leave type.
	 *
	 * @param leaveTypeId the leave type ID of this leave type
	 */
	public void setLeaveTypeId(long leaveTypeId);

	/**
	 * Returns the leave name of this leave type.
	 *
	 * @return the leave name of this leave type
	 */
	@AutoEscape
	public String getLeaveName();

	/**
	 * Sets the leave name of this leave type.
	 *
	 * @param leaveName the leave name of this leave type
	 */
	public void setLeaveName(String leaveName);

	/**
	 * Returns the abb of this leave type.
	 *
	 * @return the abb of this leave type
	 */
	@AutoEscape
	public String getAbb();

	/**
	 * Sets the abb of this leave type.
	 *
	 * @param abb the abb of this leave type
	 */
	public void setAbb(String abb);

	/**
	 * Returns the encashment day of this leave type.
	 *
	 * @return the encashment day of this leave type
	 */
	public int getEncashmentDay();

	/**
	 * Sets the encashment day of this leave type.
	 *
	 * @param encashmentDay the encashment day of this leave type
	 */
	public void setEncashmentDay(int encashmentDay);

	/**
	 * Returns the forward day of this leave type.
	 *
	 * @return the forward day of this leave type
	 */
	public int getForwardDay();

	/**
	 * Sets the forward day of this leave type.
	 *
	 * @param forwardDay the forward day of this leave type
	 */
	public void setForwardDay(int forwardDay);

	/**
	 * Returns the leave status of this leave type.
	 *
	 * @return the leave status of this leave type
	 */
	public boolean getLeaveStatus();

	/**
	 * Returns <code>true</code> if this leave type is leave status.
	 *
	 * @return <code>true</code> if this leave type is leave status; <code>false</code> otherwise
	 */
	public boolean isLeaveStatus();

	/**
	 * Sets whether this leave type is leave status.
	 *
	 * @param leaveStatus the leave status of this leave type
	 */
	public void setLeaveStatus(boolean leaveStatus);

	/**
	 * Returns the encashment per of this leave type.
	 *
	 * @return the encashment per of this leave type
	 */
	public int getEncashmentPer();

	/**
	 * Sets the encashment per of this leave type.
	 *
	 * @param encashmentPer the encashment per of this leave type
	 */
	public void setEncashmentPer(int encashmentPer);

	/**
	 * Returns the min service day of this leave type.
	 *
	 * @return the min service day of this leave type
	 */
	public int getMinServiceDay();

	/**
	 * Sets the min service day of this leave type.
	 *
	 * @param minServiceDay the min service day of this leave type
	 */
	public void setMinServiceDay(int minServiceDay);

	/**
	 * Returns the notice day of this leave type.
	 *
	 * @return the notice day of this leave type
	 */
	public int getNoticeDay();

	/**
	 * Sets the notice day of this leave type.
	 *
	 * @param noticeDay the notice day of this leave type
	 */
	public void setNoticeDay(int noticeDay);

	/**
	 * Returns the employeetype ID of this leave type.
	 *
	 * @return the employeetype ID of this leave type
	 */
	public long getEmployeetypeId();

	/**
	 * Sets the employeetype ID of this leave type.
	 *
	 * @param employeetypeId the employeetype ID of this leave type
	 */
	public void setEmployeetypeId(long employeetypeId);

	/**
	 * Returns the max credit day of this leave type.
	 *
	 * @return the max credit day of this leave type
	 */
	public int getMaxCreditDay();

	/**
	 * Sets the max credit day of this leave type.
	 *
	 * @param maxCreditDay the max credit day of this leave type
	 */
	public void setMaxCreditDay(int maxCreditDay);

	/**
	 * Returns the gender of this leave type.
	 *
	 * @return the gender of this leave type
	 */
	@AutoEscape
	public String getGender();

	/**
	 * Sets the gender of this leave type.
	 *
	 * @param gender the gender of this leave type
	 */
	public void setGender(String gender);

	/**
	 * Returns the marital status of this leave type.
	 *
	 * @return the marital status of this leave type
	 */
	@AutoEscape
	public String getMaritalStatus();

	/**
	 * Sets the marital status of this leave type.
	 *
	 * @param maritalStatus the marital status of this leave type
	 */
	public void setMaritalStatus(String maritalStatus);

	/**
	 * Returns the impect on salary of this leave type.
	 *
	 * @return the impect on salary of this leave type
	 */
	public int getImpectOnSalary();

	/**
	 * Sets the impect on salary of this leave type.
	 *
	 * @param impectOnSalary the impect on salary of this leave type
	 */
	public void setImpectOnSalary(int impectOnSalary);

	/**
	 * Returns the company ID of this leave type.
	 *
	 * @return the company ID of this leave type
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this leave type.
	 *
	 * @param companyId the company ID of this leave type
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the added date of this leave type.
	 *
	 * @return the added date of this leave type
	 */
	public Date getAddedDate();

	/**
	 * Sets the added date of this leave type.
	 *
	 * @param addedDate the added date of this leave type
	 */
	public void setAddedDate(Date addedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LeaveType leaveType);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LeaveType> toCacheModel();

	@Override
	public LeaveType toEscapedModel();

	@Override
	public LeaveType toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}