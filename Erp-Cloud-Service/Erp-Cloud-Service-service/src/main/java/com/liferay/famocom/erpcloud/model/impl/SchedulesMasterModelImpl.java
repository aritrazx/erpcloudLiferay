/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.SchedulesMaster;
import com.liferay.famocom.erpcloud.model.SchedulesMasterModel;
import com.liferay.famocom.erpcloud.model.SchedulesMasterSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SchedulesMaster service. Represents a row in the &quot;SchedulesMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SchedulesMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SchedulesMasterImpl}.
 * </p>
 *
 * @author Samaresh
 * @see SchedulesMasterImpl
 * @see SchedulesMaster
 * @see SchedulesMasterModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SchedulesMasterModelImpl extends BaseModelImpl<SchedulesMaster>
	implements SchedulesMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a schedules master model instance should use the {@link SchedulesMaster} interface instead.
	 */
	public static final String TABLE_NAME = "SchedulesMaster";
	public static final Object[][] TABLE_COLUMNS = {
			{ "schedulesId", Types.BIGINT },
			{ "schedulesName", Types.VARCHAR },
			{ "schedulesDescription", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "status", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("schedulesId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("schedulesName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("schedulesDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table SchedulesMaster (schedulesId LONG not null primary key,schedulesName VARCHAR(75) null,schedulesDescription VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table SchedulesMaster";
	public static final String ORDER_BY_JPQL = " ORDER BY schedulesMaster.schedulesId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SchedulesMaster.schedulesId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.SchedulesMaster"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.SchedulesMaster"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SchedulesMaster toModel(SchedulesMasterSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SchedulesMaster model = new SchedulesMasterImpl();

		model.setSchedulesId(soapModel.getSchedulesId());
		model.setSchedulesName(soapModel.getSchedulesName());
		model.setSchedulesDescription(soapModel.getSchedulesDescription());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SchedulesMaster> toModels(
		SchedulesMasterSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SchedulesMaster> models = new ArrayList<SchedulesMaster>(soapModels.length);

		for (SchedulesMasterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.SchedulesMaster"));

	public SchedulesMasterModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _schedulesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSchedulesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _schedulesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SchedulesMaster.class;
	}

	@Override
	public String getModelClassName() {
		return SchedulesMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("schedulesId", getSchedulesId());
		attributes.put("schedulesName", getSchedulesName());
		attributes.put("schedulesDescription", getSchedulesDescription());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("status", getStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long schedulesId = (Long)attributes.get("schedulesId");

		if (schedulesId != null) {
			setSchedulesId(schedulesId);
		}

		String schedulesName = (String)attributes.get("schedulesName");

		if (schedulesName != null) {
			setSchedulesName(schedulesName);
		}

		String schedulesDescription = (String)attributes.get(
				"schedulesDescription");

		if (schedulesDescription != null) {
			setSchedulesDescription(schedulesDescription);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@JSON
	@Override
	public long getSchedulesId() {
		return _schedulesId;
	}

	@Override
	public void setSchedulesId(long schedulesId) {
		_schedulesId = schedulesId;
	}

	@JSON
	@Override
	public String getSchedulesName() {
		if (_schedulesName == null) {
			return "";
		}
		else {
			return _schedulesName;
		}
	}

	@Override
	public void setSchedulesName(String schedulesName) {
		_schedulesName = schedulesName;
	}

	@JSON
	@Override
	public String getSchedulesDescription() {
		if (_schedulesDescription == null) {
			return "";
		}
		else {
			return _schedulesDescription;
		}
	}

	@Override
	public void setSchedulesDescription(String schedulesDescription) {
		_schedulesDescription = schedulesDescription;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SchedulesMaster.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SchedulesMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SchedulesMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SchedulesMasterImpl schedulesMasterImpl = new SchedulesMasterImpl();

		schedulesMasterImpl.setSchedulesId(getSchedulesId());
		schedulesMasterImpl.setSchedulesName(getSchedulesName());
		schedulesMasterImpl.setSchedulesDescription(getSchedulesDescription());
		schedulesMasterImpl.setCreateDate(getCreateDate());
		schedulesMasterImpl.setModifiedDate(getModifiedDate());
		schedulesMasterImpl.setStatus(getStatus());

		schedulesMasterImpl.resetOriginalValues();

		return schedulesMasterImpl;
	}

	@Override
	public int compareTo(SchedulesMaster schedulesMaster) {
		long primaryKey = schedulesMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SchedulesMaster)) {
			return false;
		}

		SchedulesMaster schedulesMaster = (SchedulesMaster)obj;

		long primaryKey = schedulesMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SchedulesMasterModelImpl schedulesMasterModelImpl = this;

		schedulesMasterModelImpl._setModifiedDate = false;
	}

	@Override
	public CacheModel<SchedulesMaster> toCacheModel() {
		SchedulesMasterCacheModel schedulesMasterCacheModel = new SchedulesMasterCacheModel();

		schedulesMasterCacheModel.schedulesId = getSchedulesId();

		schedulesMasterCacheModel.schedulesName = getSchedulesName();

		String schedulesName = schedulesMasterCacheModel.schedulesName;

		if ((schedulesName != null) && (schedulesName.length() == 0)) {
			schedulesMasterCacheModel.schedulesName = null;
		}

		schedulesMasterCacheModel.schedulesDescription = getSchedulesDescription();

		String schedulesDescription = schedulesMasterCacheModel.schedulesDescription;

		if ((schedulesDescription != null) &&
				(schedulesDescription.length() == 0)) {
			schedulesMasterCacheModel.schedulesDescription = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			schedulesMasterCacheModel.createDate = createDate.getTime();
		}
		else {
			schedulesMasterCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			schedulesMasterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			schedulesMasterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		schedulesMasterCacheModel.status = getStatus();

		return schedulesMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{schedulesId=");
		sb.append(getSchedulesId());
		sb.append(", schedulesName=");
		sb.append(getSchedulesName());
		sb.append(", schedulesDescription=");
		sb.append(getSchedulesDescription());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.SchedulesMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>schedulesId</column-name><column-value><![CDATA[");
		sb.append(getSchedulesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedulesName</column-name><column-value><![CDATA[");
		sb.append(getSchedulesName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedulesDescription</column-name><column-value><![CDATA[");
		sb.append(getSchedulesDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SchedulesMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SchedulesMaster.class, ModelWrapper.class
		};
	private long _schedulesId;
	private String _schedulesName;
	private String _schedulesDescription;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _status;
	private SchedulesMaster _escapedModel;
}