/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructure;
import com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructureModel;
import com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructureSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SelectedCandidatePayStructure service. Represents a row in the &quot;SelectedCandidatePayStructure&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SelectedCandidatePayStructureModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SelectedCandidatePayStructureImpl}.
 * </p>
 *
 * @author Samaresh
 * @see SelectedCandidatePayStructureImpl
 * @see SelectedCandidatePayStructure
 * @see SelectedCandidatePayStructureModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SelectedCandidatePayStructureModelImpl extends BaseModelImpl<SelectedCandidatePayStructure>
	implements SelectedCandidatePayStructureModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a selected candidate pay structure model instance should use the {@link SelectedCandidatePayStructure} interface instead.
	 */
	public static final String TABLE_NAME = "SelectedCandidatePayStructure";
	public static final Object[][] TABLE_COLUMNS = {
			{ "candidatePayStructureId", Types.BIGINT },
			{ "payComponentId", Types.BIGINT },
			{ "componentValue", Types.DOUBLE },
			{ "recruitmentProcessId", Types.BIGINT },
			{ "payStatus", Types.INTEGER },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("candidatePayStructureId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("payComponentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("componentValue", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("recruitmentProcessId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("payStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table SelectedCandidatePayStructure (candidatePayStructureId LONG not null primary key,payComponentId LONG,componentValue DOUBLE,recruitmentProcessId LONG,payStatus INTEGER,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table SelectedCandidatePayStructure";
	public static final String ORDER_BY_JPQL = " ORDER BY selectedCandidatePayStructure.candidatePayStructureId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SelectedCandidatePayStructure.candidatePayStructureId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructure"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructure"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructure"),
			true);
	public static final long PAYSTATUS_COLUMN_BITMASK = 1L;
	public static final long RECRUITMENTPROCESSID_COLUMN_BITMASK = 2L;
	public static final long CANDIDATEPAYSTRUCTUREID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SelectedCandidatePayStructure toModel(
		SelectedCandidatePayStructureSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SelectedCandidatePayStructure model = new SelectedCandidatePayStructureImpl();

		model.setCandidatePayStructureId(soapModel.getCandidatePayStructureId());
		model.setPayComponentId(soapModel.getPayComponentId());
		model.setComponentValue(soapModel.getComponentValue());
		model.setRecruitmentProcessId(soapModel.getRecruitmentProcessId());
		model.setPayStatus(soapModel.getPayStatus());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SelectedCandidatePayStructure> toModels(
		SelectedCandidatePayStructureSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SelectedCandidatePayStructure> models = new ArrayList<SelectedCandidatePayStructure>(soapModels.length);

		for (SelectedCandidatePayStructureSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructure"));

	public SelectedCandidatePayStructureModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _candidatePayStructureId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCandidatePayStructureId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _candidatePayStructureId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SelectedCandidatePayStructure.class;
	}

	@Override
	public String getModelClassName() {
		return SelectedCandidatePayStructure.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("candidatePayStructureId", getCandidatePayStructureId());
		attributes.put("payComponentId", getPayComponentId());
		attributes.put("componentValue", getComponentValue());
		attributes.put("recruitmentProcessId", getRecruitmentProcessId());
		attributes.put("payStatus", getPayStatus());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long candidatePayStructureId = (Long)attributes.get(
				"candidatePayStructureId");

		if (candidatePayStructureId != null) {
			setCandidatePayStructureId(candidatePayStructureId);
		}

		Long payComponentId = (Long)attributes.get("payComponentId");

		if (payComponentId != null) {
			setPayComponentId(payComponentId);
		}

		Double componentValue = (Double)attributes.get("componentValue");

		if (componentValue != null) {
			setComponentValue(componentValue);
		}

		Long recruitmentProcessId = (Long)attributes.get("recruitmentProcessId");

		if (recruitmentProcessId != null) {
			setRecruitmentProcessId(recruitmentProcessId);
		}

		Integer payStatus = (Integer)attributes.get("payStatus");

		if (payStatus != null) {
			setPayStatus(payStatus);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getCandidatePayStructureId() {
		return _candidatePayStructureId;
	}

	@Override
	public void setCandidatePayStructureId(long candidatePayStructureId) {
		_candidatePayStructureId = candidatePayStructureId;
	}

	@JSON
	@Override
	public long getPayComponentId() {
		return _payComponentId;
	}

	@Override
	public void setPayComponentId(long payComponentId) {
		_payComponentId = payComponentId;
	}

	@JSON
	@Override
	public double getComponentValue() {
		return _componentValue;
	}

	@Override
	public void setComponentValue(double componentValue) {
		_componentValue = componentValue;
	}

	@JSON
	@Override
	public long getRecruitmentProcessId() {
		return _recruitmentProcessId;
	}

	@Override
	public void setRecruitmentProcessId(long recruitmentProcessId) {
		_columnBitmask |= RECRUITMENTPROCESSID_COLUMN_BITMASK;

		if (!_setOriginalRecruitmentProcessId) {
			_setOriginalRecruitmentProcessId = true;

			_originalRecruitmentProcessId = _recruitmentProcessId;
		}

		_recruitmentProcessId = recruitmentProcessId;
	}

	public long getOriginalRecruitmentProcessId() {
		return _originalRecruitmentProcessId;
	}

	@JSON
	@Override
	public int getPayStatus() {
		return _payStatus;
	}

	@Override
	public void setPayStatus(int payStatus) {
		_columnBitmask |= PAYSTATUS_COLUMN_BITMASK;

		if (!_setOriginalPayStatus) {
			_setOriginalPayStatus = true;

			_originalPayStatus = _payStatus;
		}

		_payStatus = payStatus;
	}

	public int getOriginalPayStatus() {
		return _originalPayStatus;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SelectedCandidatePayStructure.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SelectedCandidatePayStructure toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SelectedCandidatePayStructure)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SelectedCandidatePayStructureImpl selectedCandidatePayStructureImpl = new SelectedCandidatePayStructureImpl();

		selectedCandidatePayStructureImpl.setCandidatePayStructureId(getCandidatePayStructureId());
		selectedCandidatePayStructureImpl.setPayComponentId(getPayComponentId());
		selectedCandidatePayStructureImpl.setComponentValue(getComponentValue());
		selectedCandidatePayStructureImpl.setRecruitmentProcessId(getRecruitmentProcessId());
		selectedCandidatePayStructureImpl.setPayStatus(getPayStatus());
		selectedCandidatePayStructureImpl.setCreateDate(getCreateDate());
		selectedCandidatePayStructureImpl.setModifiedDate(getModifiedDate());

		selectedCandidatePayStructureImpl.resetOriginalValues();

		return selectedCandidatePayStructureImpl;
	}

	@Override
	public int compareTo(
		SelectedCandidatePayStructure selectedCandidatePayStructure) {
		long primaryKey = selectedCandidatePayStructure.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SelectedCandidatePayStructure)) {
			return false;
		}

		SelectedCandidatePayStructure selectedCandidatePayStructure = (SelectedCandidatePayStructure)obj;

		long primaryKey = selectedCandidatePayStructure.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SelectedCandidatePayStructureModelImpl selectedCandidatePayStructureModelImpl =
			this;

		selectedCandidatePayStructureModelImpl._originalRecruitmentProcessId = selectedCandidatePayStructureModelImpl._recruitmentProcessId;

		selectedCandidatePayStructureModelImpl._setOriginalRecruitmentProcessId = false;

		selectedCandidatePayStructureModelImpl._originalPayStatus = selectedCandidatePayStructureModelImpl._payStatus;

		selectedCandidatePayStructureModelImpl._setOriginalPayStatus = false;

		selectedCandidatePayStructureModelImpl._setModifiedDate = false;

		selectedCandidatePayStructureModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SelectedCandidatePayStructure> toCacheModel() {
		SelectedCandidatePayStructureCacheModel selectedCandidatePayStructureCacheModel =
			new SelectedCandidatePayStructureCacheModel();

		selectedCandidatePayStructureCacheModel.candidatePayStructureId = getCandidatePayStructureId();

		selectedCandidatePayStructureCacheModel.payComponentId = getPayComponentId();

		selectedCandidatePayStructureCacheModel.componentValue = getComponentValue();

		selectedCandidatePayStructureCacheModel.recruitmentProcessId = getRecruitmentProcessId();

		selectedCandidatePayStructureCacheModel.payStatus = getPayStatus();

		Date createDate = getCreateDate();

		if (createDate != null) {
			selectedCandidatePayStructureCacheModel.createDate = createDate.getTime();
		}
		else {
			selectedCandidatePayStructureCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			selectedCandidatePayStructureCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			selectedCandidatePayStructureCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return selectedCandidatePayStructureCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{candidatePayStructureId=");
		sb.append(getCandidatePayStructureId());
		sb.append(", payComponentId=");
		sb.append(getPayComponentId());
		sb.append(", componentValue=");
		sb.append(getComponentValue());
		sb.append(", recruitmentProcessId=");
		sb.append(getRecruitmentProcessId());
		sb.append(", payStatus=");
		sb.append(getPayStatus());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append(
			"com.liferay.famocom.erpcloud.model.SelectedCandidatePayStructure");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>candidatePayStructureId</column-name><column-value><![CDATA[");
		sb.append(getCandidatePayStructureId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>payComponentId</column-name><column-value><![CDATA[");
		sb.append(getPayComponentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>componentValue</column-name><column-value><![CDATA[");
		sb.append(getComponentValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recruitmentProcessId</column-name><column-value><![CDATA[");
		sb.append(getRecruitmentProcessId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>payStatus</column-name><column-value><![CDATA[");
		sb.append(getPayStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SelectedCandidatePayStructure.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SelectedCandidatePayStructure.class, ModelWrapper.class
		};
	private long _candidatePayStructureId;
	private long _payComponentId;
	private double _componentValue;
	private long _recruitmentProcessId;
	private long _originalRecruitmentProcessId;
	private boolean _setOriginalRecruitmentProcessId;
	private int _payStatus;
	private int _originalPayStatus;
	private boolean _setOriginalPayStatus;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _columnBitmask;
	private SelectedCandidatePayStructure _escapedModel;
}