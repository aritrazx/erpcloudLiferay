/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.GoalDetails;
import com.liferay.famocom.erpcloud.model.GoalDetailsModel;
import com.liferay.famocom.erpcloud.model.GoalDetailsSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the GoalDetails service. Represents a row in the &quot;goalDetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link GoalDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GoalDetailsImpl}.
 * </p>
 *
 * @author Samaresh
 * @see GoalDetailsImpl
 * @see GoalDetails
 * @see GoalDetailsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class GoalDetailsModelImpl extends BaseModelImpl<GoalDetails>
	implements GoalDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a goal details model instance should use the {@link GoalDetails} interface instead.
	 */
	public static final String TABLE_NAME = "goalDetails";
	public static final Object[][] TABLE_COLUMNS = {
			{ "goaldetailId", Types.BIGINT },
			{ "goalId", Types.BIGINT },
			{ "evaluationId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "parameter", Types.VARCHAR },
			{ "scale", Types.VARCHAR },
			{ "addedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("goaldetailId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("goalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("evaluationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("parameter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("scale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table goalDetails (goaldetailId LONG not null primary key,goalId LONG,evaluationId LONG,companyId LONG,parameter VARCHAR(75) null,scale VARCHAR(75) null,addedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table goalDetails";
	public static final String ORDER_BY_JPQL = " ORDER BY goalDetails.goaldetailId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY goalDetails.goaldetailId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.GoalDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.GoalDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.GoalDetails"),
			true);
	public static final long GOALID_COLUMN_BITMASK = 1L;
	public static final long GOALDETAILID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static GoalDetails toModel(GoalDetailsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		GoalDetails model = new GoalDetailsImpl();

		model.setGoaldetailId(soapModel.getGoaldetailId());
		model.setGoalId(soapModel.getGoalId());
		model.setEvaluationId(soapModel.getEvaluationId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setParameter(soapModel.getParameter());
		model.setScale(soapModel.getScale());
		model.setAddedDate(soapModel.getAddedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<GoalDetails> toModels(GoalDetailsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<GoalDetails> models = new ArrayList<GoalDetails>(soapModels.length);

		for (GoalDetailsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.GoalDetails"));

	public GoalDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _goaldetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setGoaldetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _goaldetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return GoalDetails.class;
	}

	@Override
	public String getModelClassName() {
		return GoalDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("goaldetailId", getGoaldetailId());
		attributes.put("goalId", getGoalId());
		attributes.put("evaluationId", getEvaluationId());
		attributes.put("companyId", getCompanyId());
		attributes.put("parameter", getParameter());
		attributes.put("scale", getScale());
		attributes.put("addedDate", getAddedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long goaldetailId = (Long)attributes.get("goaldetailId");

		if (goaldetailId != null) {
			setGoaldetailId(goaldetailId);
		}

		Long goalId = (Long)attributes.get("goalId");

		if (goalId != null) {
			setGoalId(goalId);
		}

		Long evaluationId = (Long)attributes.get("evaluationId");

		if (evaluationId != null) {
			setEvaluationId(evaluationId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String parameter = (String)attributes.get("parameter");

		if (parameter != null) {
			setParameter(parameter);
		}

		String scale = (String)attributes.get("scale");

		if (scale != null) {
			setScale(scale);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}
	}

	@JSON
	@Override
	public long getGoaldetailId() {
		return _goaldetailId;
	}

	@Override
	public void setGoaldetailId(long goaldetailId) {
		_goaldetailId = goaldetailId;
	}

	@JSON
	@Override
	public long getGoalId() {
		return _goalId;
	}

	@Override
	public void setGoalId(long goalId) {
		_columnBitmask |= GOALID_COLUMN_BITMASK;

		if (!_setOriginalGoalId) {
			_setOriginalGoalId = true;

			_originalGoalId = _goalId;
		}

		_goalId = goalId;
	}

	public long getOriginalGoalId() {
		return _originalGoalId;
	}

	@JSON
	@Override
	public long getEvaluationId() {
		return _evaluationId;
	}

	@Override
	public void setEvaluationId(long evaluationId) {
		_evaluationId = evaluationId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public String getParameter() {
		if (_parameter == null) {
			return "";
		}
		else {
			return _parameter;
		}
	}

	@Override
	public void setParameter(String parameter) {
		_parameter = parameter;
	}

	@JSON
	@Override
	public String getScale() {
		if (_scale == null) {
			return "";
		}
		else {
			return _scale;
		}
	}

	@Override
	public void setScale(String scale) {
		_scale = scale;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			GoalDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public GoalDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (GoalDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GoalDetailsImpl goalDetailsImpl = new GoalDetailsImpl();

		goalDetailsImpl.setGoaldetailId(getGoaldetailId());
		goalDetailsImpl.setGoalId(getGoalId());
		goalDetailsImpl.setEvaluationId(getEvaluationId());
		goalDetailsImpl.setCompanyId(getCompanyId());
		goalDetailsImpl.setParameter(getParameter());
		goalDetailsImpl.setScale(getScale());
		goalDetailsImpl.setAddedDate(getAddedDate());

		goalDetailsImpl.resetOriginalValues();

		return goalDetailsImpl;
	}

	@Override
	public int compareTo(GoalDetails goalDetails) {
		long primaryKey = goalDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof GoalDetails)) {
			return false;
		}

		GoalDetails goalDetails = (GoalDetails)obj;

		long primaryKey = goalDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		GoalDetailsModelImpl goalDetailsModelImpl = this;

		goalDetailsModelImpl._originalGoalId = goalDetailsModelImpl._goalId;

		goalDetailsModelImpl._setOriginalGoalId = false;

		goalDetailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<GoalDetails> toCacheModel() {
		GoalDetailsCacheModel goalDetailsCacheModel = new GoalDetailsCacheModel();

		goalDetailsCacheModel.goaldetailId = getGoaldetailId();

		goalDetailsCacheModel.goalId = getGoalId();

		goalDetailsCacheModel.evaluationId = getEvaluationId();

		goalDetailsCacheModel.companyId = getCompanyId();

		goalDetailsCacheModel.parameter = getParameter();

		String parameter = goalDetailsCacheModel.parameter;

		if ((parameter != null) && (parameter.length() == 0)) {
			goalDetailsCacheModel.parameter = null;
		}

		goalDetailsCacheModel.scale = getScale();

		String scale = goalDetailsCacheModel.scale;

		if ((scale != null) && (scale.length() == 0)) {
			goalDetailsCacheModel.scale = null;
		}

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			goalDetailsCacheModel.addedDate = addedDate.getTime();
		}
		else {
			goalDetailsCacheModel.addedDate = Long.MIN_VALUE;
		}

		return goalDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{goaldetailId=");
		sb.append(getGoaldetailId());
		sb.append(", goalId=");
		sb.append(getGoalId());
		sb.append(", evaluationId=");
		sb.append(getEvaluationId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", parameter=");
		sb.append(getParameter());
		sb.append(", scale=");
		sb.append(getScale());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.GoalDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>goaldetailId</column-name><column-value><![CDATA[");
		sb.append(getGoaldetailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goalId</column-name><column-value><![CDATA[");
		sb.append(getGoalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>evaluationId</column-name><column-value><![CDATA[");
		sb.append(getEvaluationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parameter</column-name><column-value><![CDATA[");
		sb.append(getParameter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scale</column-name><column-value><![CDATA[");
		sb.append(getScale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = GoalDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			GoalDetails.class, ModelWrapper.class
		};
	private long _goaldetailId;
	private long _goalId;
	private long _originalGoalId;
	private boolean _setOriginalGoalId;
	private long _evaluationId;
	private long _companyId;
	private String _parameter;
	private String _scale;
	private Date _addedDate;
	private long _columnBitmask;
	private GoalDetails _escapedModel;
}