/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.Attendance;
import com.liferay.famocom.erpcloud.model.AttendanceModel;
import com.liferay.famocom.erpcloud.model.AttendanceSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Attendance service. Represents a row in the &quot;attendance&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AttendanceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AttendanceImpl}.
 * </p>
 *
 * @author Samaresh
 * @see AttendanceImpl
 * @see Attendance
 * @see AttendanceModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AttendanceModelImpl extends BaseModelImpl<Attendance>
	implements AttendanceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a attendance model instance should use the {@link Attendance} interface instead.
	 */
	public static final String TABLE_NAME = "attendance";
	public static final Object[][] TABLE_COLUMNS = {
			{ "attendanceId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "employeeCode", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "attDate", Types.TIMESTAMP },
			{ "inTimeHour", Types.VARCHAR },
			{ "inTimeMin", Types.VARCHAR },
			{ "outTimeHour", Types.VARCHAR },
			{ "outTimeMin", Types.VARCHAR },
			{ "inTime", Types.VARCHAR },
			{ "outTime", Types.VARCHAR },
			{ "inDatePc", Types.TIMESTAMP },
			{ "outDatePc", Types.TIMESTAMP },
			{ "total", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "ipPc", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("attendanceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeCode", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("attDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("inTimeHour", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inTimeMin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outTimeHour", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outTimeMin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inDatePc", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("outDatePc", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("total", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ipPc", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table attendance (attendanceId LONG not null primary key,companyId LONG,employeeCode LONG,employeeId LONG,attDate DATE null,inTimeHour VARCHAR(75) null,inTimeMin VARCHAR(75) null,outTimeHour VARCHAR(75) null,outTimeMin VARCHAR(75) null,inTime VARCHAR(75) null,outTime VARCHAR(75) null,inDatePc DATE null,outDatePc DATE null,total VARCHAR(75) null,status VARCHAR(75) null,ipPc VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table attendance";
	public static final String ORDER_BY_JPQL = " ORDER BY attendance.attendanceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY attendance.attendanceId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.Attendance"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.Attendance"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.Attendance"),
			true);
	public static final long ATTDATE_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long EMPLOYEEID_COLUMN_BITMASK = 4L;
	public static final long ATTENDANCEID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Attendance toModel(AttendanceSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Attendance model = new AttendanceImpl();

		model.setAttendanceId(soapModel.getAttendanceId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setEmployeeCode(soapModel.getEmployeeCode());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setAttDate(soapModel.getAttDate());
		model.setInTimeHour(soapModel.getInTimeHour());
		model.setInTimeMin(soapModel.getInTimeMin());
		model.setOutTimeHour(soapModel.getOutTimeHour());
		model.setOutTimeMin(soapModel.getOutTimeMin());
		model.setInTime(soapModel.getInTime());
		model.setOutTime(soapModel.getOutTime());
		model.setInDatePc(soapModel.getInDatePc());
		model.setOutDatePc(soapModel.getOutDatePc());
		model.setTotal(soapModel.getTotal());
		model.setStatus(soapModel.getStatus());
		model.setIpPc(soapModel.getIpPc());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Attendance> toModels(AttendanceSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Attendance> models = new ArrayList<Attendance>(soapModels.length);

		for (AttendanceSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.Attendance"));

	public AttendanceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _attendanceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAttendanceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _attendanceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Attendance.class;
	}

	@Override
	public String getModelClassName() {
		return Attendance.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("attendanceId", getAttendanceId());
		attributes.put("companyId", getCompanyId());
		attributes.put("employeeCode", getEmployeeCode());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("attDate", getAttDate());
		attributes.put("inTimeHour", getInTimeHour());
		attributes.put("inTimeMin", getInTimeMin());
		attributes.put("outTimeHour", getOutTimeHour());
		attributes.put("outTimeMin", getOutTimeMin());
		attributes.put("inTime", getInTime());
		attributes.put("outTime", getOutTime());
		attributes.put("inDatePc", getInDatePc());
		attributes.put("outDatePc", getOutDatePc());
		attributes.put("total", getTotal());
		attributes.put("status", getStatus());
		attributes.put("ipPc", getIpPc());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long attendanceId = (Long)attributes.get("attendanceId");

		if (attendanceId != null) {
			setAttendanceId(attendanceId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long employeeCode = (Long)attributes.get("employeeCode");

		if (employeeCode != null) {
			setEmployeeCode(employeeCode);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Date attDate = (Date)attributes.get("attDate");

		if (attDate != null) {
			setAttDate(attDate);
		}

		String inTimeHour = (String)attributes.get("inTimeHour");

		if (inTimeHour != null) {
			setInTimeHour(inTimeHour);
		}

		String inTimeMin = (String)attributes.get("inTimeMin");

		if (inTimeMin != null) {
			setInTimeMin(inTimeMin);
		}

		String outTimeHour = (String)attributes.get("outTimeHour");

		if (outTimeHour != null) {
			setOutTimeHour(outTimeHour);
		}

		String outTimeMin = (String)attributes.get("outTimeMin");

		if (outTimeMin != null) {
			setOutTimeMin(outTimeMin);
		}

		String inTime = (String)attributes.get("inTime");

		if (inTime != null) {
			setInTime(inTime);
		}

		String outTime = (String)attributes.get("outTime");

		if (outTime != null) {
			setOutTime(outTime);
		}

		Date inDatePc = (Date)attributes.get("inDatePc");

		if (inDatePc != null) {
			setInDatePc(inDatePc);
		}

		Date outDatePc = (Date)attributes.get("outDatePc");

		if (outDatePc != null) {
			setOutDatePc(outDatePc);
		}

		String total = (String)attributes.get("total");

		if (total != null) {
			setTotal(total);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String ipPc = (String)attributes.get("ipPc");

		if (ipPc != null) {
			setIpPc(ipPc);
		}
	}

	@JSON
	@Override
	public long getAttendanceId() {
		return _attendanceId;
	}

	@Override
	public void setAttendanceId(long attendanceId) {
		_attendanceId = attendanceId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getEmployeeCode() {
		return _employeeCode;
	}

	@Override
	public void setEmployeeCode(long employeeCode) {
		_employeeCode = employeeCode;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@JSON
	@Override
	public Date getAttDate() {
		return _attDate;
	}

	@Override
	public void setAttDate(Date attDate) {
		_columnBitmask |= ATTDATE_COLUMN_BITMASK;

		if (_originalAttDate == null) {
			_originalAttDate = _attDate;
		}

		_attDate = attDate;
	}

	public Date getOriginalAttDate() {
		return _originalAttDate;
	}

	@JSON
	@Override
	public String getInTimeHour() {
		if (_inTimeHour == null) {
			return "";
		}
		else {
			return _inTimeHour;
		}
	}

	@Override
	public void setInTimeHour(String inTimeHour) {
		_inTimeHour = inTimeHour;
	}

	@JSON
	@Override
	public String getInTimeMin() {
		if (_inTimeMin == null) {
			return "";
		}
		else {
			return _inTimeMin;
		}
	}

	@Override
	public void setInTimeMin(String inTimeMin) {
		_inTimeMin = inTimeMin;
	}

	@JSON
	@Override
	public String getOutTimeHour() {
		if (_outTimeHour == null) {
			return "";
		}
		else {
			return _outTimeHour;
		}
	}

	@Override
	public void setOutTimeHour(String outTimeHour) {
		_outTimeHour = outTimeHour;
	}

	@JSON
	@Override
	public String getOutTimeMin() {
		if (_outTimeMin == null) {
			return "";
		}
		else {
			return _outTimeMin;
		}
	}

	@Override
	public void setOutTimeMin(String outTimeMin) {
		_outTimeMin = outTimeMin;
	}

	@JSON
	@Override
	public String getInTime() {
		if (_inTime == null) {
			return "";
		}
		else {
			return _inTime;
		}
	}

	@Override
	public void setInTime(String inTime) {
		_inTime = inTime;
	}

	@JSON
	@Override
	public String getOutTime() {
		if (_outTime == null) {
			return "";
		}
		else {
			return _outTime;
		}
	}

	@Override
	public void setOutTime(String outTime) {
		_outTime = outTime;
	}

	@JSON
	@Override
	public Date getInDatePc() {
		return _inDatePc;
	}

	@Override
	public void setInDatePc(Date inDatePc) {
		_inDatePc = inDatePc;
	}

	@JSON
	@Override
	public Date getOutDatePc() {
		return _outDatePc;
	}

	@Override
	public void setOutDatePc(Date outDatePc) {
		_outDatePc = outDatePc;
	}

	@JSON
	@Override
	public String getTotal() {
		if (_total == null) {
			return "";
		}
		else {
			return _total;
		}
	}

	@Override
	public void setTotal(String total) {
		_total = total;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public String getIpPc() {
		if (_ipPc == null) {
			return "";
		}
		else {
			return _ipPc;
		}
	}

	@Override
	public void setIpPc(String ipPc) {
		_ipPc = ipPc;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Attendance.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Attendance toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Attendance)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AttendanceImpl attendanceImpl = new AttendanceImpl();

		attendanceImpl.setAttendanceId(getAttendanceId());
		attendanceImpl.setCompanyId(getCompanyId());
		attendanceImpl.setEmployeeCode(getEmployeeCode());
		attendanceImpl.setEmployeeId(getEmployeeId());
		attendanceImpl.setAttDate(getAttDate());
		attendanceImpl.setInTimeHour(getInTimeHour());
		attendanceImpl.setInTimeMin(getInTimeMin());
		attendanceImpl.setOutTimeHour(getOutTimeHour());
		attendanceImpl.setOutTimeMin(getOutTimeMin());
		attendanceImpl.setInTime(getInTime());
		attendanceImpl.setOutTime(getOutTime());
		attendanceImpl.setInDatePc(getInDatePc());
		attendanceImpl.setOutDatePc(getOutDatePc());
		attendanceImpl.setTotal(getTotal());
		attendanceImpl.setStatus(getStatus());
		attendanceImpl.setIpPc(getIpPc());

		attendanceImpl.resetOriginalValues();

		return attendanceImpl;
	}

	@Override
	public int compareTo(Attendance attendance) {
		long primaryKey = attendance.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Attendance)) {
			return false;
		}

		Attendance attendance = (Attendance)obj;

		long primaryKey = attendance.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AttendanceModelImpl attendanceModelImpl = this;

		attendanceModelImpl._originalCompanyId = attendanceModelImpl._companyId;

		attendanceModelImpl._setOriginalCompanyId = false;

		attendanceModelImpl._originalEmployeeId = attendanceModelImpl._employeeId;

		attendanceModelImpl._setOriginalEmployeeId = false;

		attendanceModelImpl._originalAttDate = attendanceModelImpl._attDate;

		attendanceModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Attendance> toCacheModel() {
		AttendanceCacheModel attendanceCacheModel = new AttendanceCacheModel();

		attendanceCacheModel.attendanceId = getAttendanceId();

		attendanceCacheModel.companyId = getCompanyId();

		attendanceCacheModel.employeeCode = getEmployeeCode();

		attendanceCacheModel.employeeId = getEmployeeId();

		Date attDate = getAttDate();

		if (attDate != null) {
			attendanceCacheModel.attDate = attDate.getTime();
		}
		else {
			attendanceCacheModel.attDate = Long.MIN_VALUE;
		}

		attendanceCacheModel.inTimeHour = getInTimeHour();

		String inTimeHour = attendanceCacheModel.inTimeHour;

		if ((inTimeHour != null) && (inTimeHour.length() == 0)) {
			attendanceCacheModel.inTimeHour = null;
		}

		attendanceCacheModel.inTimeMin = getInTimeMin();

		String inTimeMin = attendanceCacheModel.inTimeMin;

		if ((inTimeMin != null) && (inTimeMin.length() == 0)) {
			attendanceCacheModel.inTimeMin = null;
		}

		attendanceCacheModel.outTimeHour = getOutTimeHour();

		String outTimeHour = attendanceCacheModel.outTimeHour;

		if ((outTimeHour != null) && (outTimeHour.length() == 0)) {
			attendanceCacheModel.outTimeHour = null;
		}

		attendanceCacheModel.outTimeMin = getOutTimeMin();

		String outTimeMin = attendanceCacheModel.outTimeMin;

		if ((outTimeMin != null) && (outTimeMin.length() == 0)) {
			attendanceCacheModel.outTimeMin = null;
		}

		attendanceCacheModel.inTime = getInTime();

		String inTime = attendanceCacheModel.inTime;

		if ((inTime != null) && (inTime.length() == 0)) {
			attendanceCacheModel.inTime = null;
		}

		attendanceCacheModel.outTime = getOutTime();

		String outTime = attendanceCacheModel.outTime;

		if ((outTime != null) && (outTime.length() == 0)) {
			attendanceCacheModel.outTime = null;
		}

		Date inDatePc = getInDatePc();

		if (inDatePc != null) {
			attendanceCacheModel.inDatePc = inDatePc.getTime();
		}
		else {
			attendanceCacheModel.inDatePc = Long.MIN_VALUE;
		}

		Date outDatePc = getOutDatePc();

		if (outDatePc != null) {
			attendanceCacheModel.outDatePc = outDatePc.getTime();
		}
		else {
			attendanceCacheModel.outDatePc = Long.MIN_VALUE;
		}

		attendanceCacheModel.total = getTotal();

		String total = attendanceCacheModel.total;

		if ((total != null) && (total.length() == 0)) {
			attendanceCacheModel.total = null;
		}

		attendanceCacheModel.status = getStatus();

		String status = attendanceCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			attendanceCacheModel.status = null;
		}

		attendanceCacheModel.ipPc = getIpPc();

		String ipPc = attendanceCacheModel.ipPc;

		if ((ipPc != null) && (ipPc.length() == 0)) {
			attendanceCacheModel.ipPc = null;
		}

		return attendanceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{attendanceId=");
		sb.append(getAttendanceId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", employeeCode=");
		sb.append(getEmployeeCode());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", attDate=");
		sb.append(getAttDate());
		sb.append(", inTimeHour=");
		sb.append(getInTimeHour());
		sb.append(", inTimeMin=");
		sb.append(getInTimeMin());
		sb.append(", outTimeHour=");
		sb.append(getOutTimeHour());
		sb.append(", outTimeMin=");
		sb.append(getOutTimeMin());
		sb.append(", inTime=");
		sb.append(getInTime());
		sb.append(", outTime=");
		sb.append(getOutTime());
		sb.append(", inDatePc=");
		sb.append(getInDatePc());
		sb.append(", outDatePc=");
		sb.append(getOutDatePc());
		sb.append(", total=");
		sb.append(getTotal());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", ipPc=");
		sb.append(getIpPc());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.Attendance");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>attendanceId</column-name><column-value><![CDATA[");
		sb.append(getAttendanceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeCode</column-name><column-value><![CDATA[");
		sb.append(getEmployeeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attDate</column-name><column-value><![CDATA[");
		sb.append(getAttDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inTimeHour</column-name><column-value><![CDATA[");
		sb.append(getInTimeHour());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inTimeMin</column-name><column-value><![CDATA[");
		sb.append(getInTimeMin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outTimeHour</column-name><column-value><![CDATA[");
		sb.append(getOutTimeHour());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outTimeMin</column-name><column-value><![CDATA[");
		sb.append(getOutTimeMin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inTime</column-name><column-value><![CDATA[");
		sb.append(getInTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outTime</column-name><column-value><![CDATA[");
		sb.append(getOutTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inDatePc</column-name><column-value><![CDATA[");
		sb.append(getInDatePc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outDatePc</column-name><column-value><![CDATA[");
		sb.append(getOutDatePc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>total</column-name><column-value><![CDATA[");
		sb.append(getTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ipPc</column-name><column-value><![CDATA[");
		sb.append(getIpPc());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Attendance.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Attendance.class, ModelWrapper.class
		};
	private long _attendanceId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _employeeCode;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private Date _attDate;
	private Date _originalAttDate;
	private String _inTimeHour;
	private String _inTimeMin;
	private String _outTimeHour;
	private String _outTimeMin;
	private String _inTime;
	private String _outTime;
	private Date _inDatePc;
	private Date _outDatePc;
	private String _total;
	private String _status;
	private String _ipPc;
	private long _columnBitmask;
	private Attendance _escapedModel;
}