/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.WorksSchedules;
import com.liferay.famocom.erpcloud.model.WorksSchedulesModel;
import com.liferay.famocom.erpcloud.model.WorksSchedulesSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WorksSchedules service. Represents a row in the &quot;worksSchedules&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WorksSchedulesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorksSchedulesImpl}.
 * </p>
 *
 * @author Samaresh
 * @see WorksSchedulesImpl
 * @see WorksSchedules
 * @see WorksSchedulesModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class WorksSchedulesModelImpl extends BaseModelImpl<WorksSchedules>
	implements WorksSchedulesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a works schedules model instance should use the {@link WorksSchedules} interface instead.
	 */
	public static final String TABLE_NAME = "worksSchedules";
	public static final Object[][] TABLE_COLUMNS = {
			{ "worksSchedulesId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "fromDate", Types.TIMESTAMP },
			{ "toDate", Types.TIMESTAMP },
			{ "schedulesId", Types.BIGINT },
			{ "islock", Types.INTEGER },
			{ "status", Types.INTEGER },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "description", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("worksSchedulesId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fromDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("toDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("schedulesId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("islock", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table worksSchedules (worksSchedulesId LONG not null primary key,companyId LONG,employeeId LONG,fromDate DATE null,toDate DATE null,schedulesId LONG,islock INTEGER,status INTEGER,createDate DATE null,modifiedDate DATE null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table worksSchedules";
	public static final String ORDER_BY_JPQL = " ORDER BY worksSchedules.worksSchedulesId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY worksSchedules.worksSchedulesId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.WorksSchedules"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.WorksSchedules"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.WorksSchedules"),
			true);
	public static final long FROMDATE_COLUMN_BITMASK = 1L;
	public static final long SCHEDULESID_COLUMN_BITMASK = 2L;
	public static final long TODATE_COLUMN_BITMASK = 4L;
	public static final long WORKSSCHEDULESID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WorksSchedules toModel(WorksSchedulesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WorksSchedules model = new WorksSchedulesImpl();

		model.setWorksSchedulesId(soapModel.getWorksSchedulesId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setFromDate(soapModel.getFromDate());
		model.setToDate(soapModel.getToDate());
		model.setSchedulesId(soapModel.getSchedulesId());
		model.setIslock(soapModel.getIslock());
		model.setStatus(soapModel.getStatus());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WorksSchedules> toModels(WorksSchedulesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WorksSchedules> models = new ArrayList<WorksSchedules>(soapModels.length);

		for (WorksSchedulesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.WorksSchedules"));

	public WorksSchedulesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _worksSchedulesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorksSchedulesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _worksSchedulesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorksSchedules.class;
	}

	@Override
	public String getModelClassName() {
		return WorksSchedules.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("worksSchedulesId", getWorksSchedulesId());
		attributes.put("companyId", getCompanyId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("fromDate", getFromDate());
		attributes.put("toDate", getToDate());
		attributes.put("schedulesId", getSchedulesId());
		attributes.put("islock", getIslock());
		attributes.put("status", getStatus());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("description", getDescription());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long worksSchedulesId = (Long)attributes.get("worksSchedulesId");

		if (worksSchedulesId != null) {
			setWorksSchedulesId(worksSchedulesId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Date fromDate = (Date)attributes.get("fromDate");

		if (fromDate != null) {
			setFromDate(fromDate);
		}

		Date toDate = (Date)attributes.get("toDate");

		if (toDate != null) {
			setToDate(toDate);
		}

		Long schedulesId = (Long)attributes.get("schedulesId");

		if (schedulesId != null) {
			setSchedulesId(schedulesId);
		}

		Integer islock = (Integer)attributes.get("islock");

		if (islock != null) {
			setIslock(islock);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getWorksSchedulesId() {
		return _worksSchedulesId;
	}

	@Override
	public void setWorksSchedulesId(long worksSchedulesId) {
		_worksSchedulesId = worksSchedulesId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@JSON
	@Override
	public Date getFromDate() {
		return _fromDate;
	}

	@Override
	public void setFromDate(Date fromDate) {
		_columnBitmask |= FROMDATE_COLUMN_BITMASK;

		if (_originalFromDate == null) {
			_originalFromDate = _fromDate;
		}

		_fromDate = fromDate;
	}

	public Date getOriginalFromDate() {
		return _originalFromDate;
	}

	@JSON
	@Override
	public Date getToDate() {
		return _toDate;
	}

	@Override
	public void setToDate(Date toDate) {
		_columnBitmask |= TODATE_COLUMN_BITMASK;

		if (_originalToDate == null) {
			_originalToDate = _toDate;
		}

		_toDate = toDate;
	}

	public Date getOriginalToDate() {
		return _originalToDate;
	}

	@JSON
	@Override
	public long getSchedulesId() {
		return _schedulesId;
	}

	@Override
	public void setSchedulesId(long schedulesId) {
		_columnBitmask |= SCHEDULESID_COLUMN_BITMASK;

		if (!_setOriginalSchedulesId) {
			_setOriginalSchedulesId = true;

			_originalSchedulesId = _schedulesId;
		}

		_schedulesId = schedulesId;
	}

	public long getOriginalSchedulesId() {
		return _originalSchedulesId;
	}

	@JSON
	@Override
	public int getIslock() {
		return _islock;
	}

	@Override
	public void setIslock(int islock) {
		_islock = islock;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorksSchedules.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorksSchedules toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorksSchedules)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorksSchedulesImpl worksSchedulesImpl = new WorksSchedulesImpl();

		worksSchedulesImpl.setWorksSchedulesId(getWorksSchedulesId());
		worksSchedulesImpl.setCompanyId(getCompanyId());
		worksSchedulesImpl.setEmployeeId(getEmployeeId());
		worksSchedulesImpl.setFromDate(getFromDate());
		worksSchedulesImpl.setToDate(getToDate());
		worksSchedulesImpl.setSchedulesId(getSchedulesId());
		worksSchedulesImpl.setIslock(getIslock());
		worksSchedulesImpl.setStatus(getStatus());
		worksSchedulesImpl.setCreateDate(getCreateDate());
		worksSchedulesImpl.setModifiedDate(getModifiedDate());
		worksSchedulesImpl.setDescription(getDescription());

		worksSchedulesImpl.resetOriginalValues();

		return worksSchedulesImpl;
	}

	@Override
	public int compareTo(WorksSchedules worksSchedules) {
		long primaryKey = worksSchedules.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorksSchedules)) {
			return false;
		}

		WorksSchedules worksSchedules = (WorksSchedules)obj;

		long primaryKey = worksSchedules.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WorksSchedulesModelImpl worksSchedulesModelImpl = this;

		worksSchedulesModelImpl._originalFromDate = worksSchedulesModelImpl._fromDate;

		worksSchedulesModelImpl._originalToDate = worksSchedulesModelImpl._toDate;

		worksSchedulesModelImpl._originalSchedulesId = worksSchedulesModelImpl._schedulesId;

		worksSchedulesModelImpl._setOriginalSchedulesId = false;

		worksSchedulesModelImpl._setModifiedDate = false;

		worksSchedulesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WorksSchedules> toCacheModel() {
		WorksSchedulesCacheModel worksSchedulesCacheModel = new WorksSchedulesCacheModel();

		worksSchedulesCacheModel.worksSchedulesId = getWorksSchedulesId();

		worksSchedulesCacheModel.companyId = getCompanyId();

		worksSchedulesCacheModel.employeeId = getEmployeeId();

		Date fromDate = getFromDate();

		if (fromDate != null) {
			worksSchedulesCacheModel.fromDate = fromDate.getTime();
		}
		else {
			worksSchedulesCacheModel.fromDate = Long.MIN_VALUE;
		}

		Date toDate = getToDate();

		if (toDate != null) {
			worksSchedulesCacheModel.toDate = toDate.getTime();
		}
		else {
			worksSchedulesCacheModel.toDate = Long.MIN_VALUE;
		}

		worksSchedulesCacheModel.schedulesId = getSchedulesId();

		worksSchedulesCacheModel.islock = getIslock();

		worksSchedulesCacheModel.status = getStatus();

		Date createDate = getCreateDate();

		if (createDate != null) {
			worksSchedulesCacheModel.createDate = createDate.getTime();
		}
		else {
			worksSchedulesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			worksSchedulesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			worksSchedulesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		worksSchedulesCacheModel.description = getDescription();

		String description = worksSchedulesCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			worksSchedulesCacheModel.description = null;
		}

		return worksSchedulesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{worksSchedulesId=");
		sb.append(getWorksSchedulesId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", fromDate=");
		sb.append(getFromDate());
		sb.append(", toDate=");
		sb.append(getToDate());
		sb.append(", schedulesId=");
		sb.append(getSchedulesId());
		sb.append(", islock=");
		sb.append(getIslock());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.WorksSchedules");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>worksSchedulesId</column-name><column-value><![CDATA[");
		sb.append(getWorksSchedulesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fromDate</column-name><column-value><![CDATA[");
		sb.append(getFromDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toDate</column-name><column-value><![CDATA[");
		sb.append(getToDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedulesId</column-name><column-value><![CDATA[");
		sb.append(getSchedulesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>islock</column-name><column-value><![CDATA[");
		sb.append(getIslock());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WorksSchedules.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WorksSchedules.class, ModelWrapper.class
		};
	private long _worksSchedulesId;
	private long _companyId;
	private long _employeeId;
	private Date _fromDate;
	private Date _originalFromDate;
	private Date _toDate;
	private Date _originalToDate;
	private long _schedulesId;
	private long _originalSchedulesId;
	private boolean _setOriginalSchedulesId;
	private int _islock;
	private int _status;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _description;
	private long _columnBitmask;
	private WorksSchedules _escapedModel;
}