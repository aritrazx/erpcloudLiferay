/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.JobEvaluation;
import com.liferay.famocom.erpcloud.model.JobEvaluationModel;
import com.liferay.famocom.erpcloud.model.JobEvaluationSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the JobEvaluation service. Represents a row in the &quot;JobEvaluation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link JobEvaluationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JobEvaluationImpl}.
 * </p>
 *
 * @author Samaresh
 * @see JobEvaluationImpl
 * @see JobEvaluation
 * @see JobEvaluationModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class JobEvaluationModelImpl extends BaseModelImpl<JobEvaluation>
	implements JobEvaluationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a job evaluation model instance should use the {@link JobEvaluation} interface instead.
	 */
	public static final String TABLE_NAME = "JobEvaluation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "postEvaluationId", Types.BIGINT },
			{ "jobPostId", Types.BIGINT },
			{ "evaluationName", Types.VARCHAR },
			{ "evaluationDescription", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("postEvaluationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("jobPostId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("evaluationName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("evaluationDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table JobEvaluation (postEvaluationId LONG not null primary key,jobPostId LONG,evaluationName VARCHAR(75) null,evaluationDescription VARCHAR(75) null,createdDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table JobEvaluation";
	public static final String ORDER_BY_JPQL = " ORDER BY jobEvaluation.postEvaluationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JobEvaluation.postEvaluationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.JobEvaluation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.JobEvaluation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.JobEvaluation"),
			true);
	public static final long JOBPOSTID_COLUMN_BITMASK = 1L;
	public static final long POSTEVALUATIONID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static JobEvaluation toModel(JobEvaluationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		JobEvaluation model = new JobEvaluationImpl();

		model.setPostEvaluationId(soapModel.getPostEvaluationId());
		model.setJobPostId(soapModel.getJobPostId());
		model.setEvaluationName(soapModel.getEvaluationName());
		model.setEvaluationDescription(soapModel.getEvaluationDescription());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<JobEvaluation> toModels(JobEvaluationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<JobEvaluation> models = new ArrayList<JobEvaluation>(soapModels.length);

		for (JobEvaluationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.JobEvaluation"));

	public JobEvaluationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _postEvaluationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPostEvaluationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _postEvaluationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return JobEvaluation.class;
	}

	@Override
	public String getModelClassName() {
		return JobEvaluation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("postEvaluationId", getPostEvaluationId());
		attributes.put("jobPostId", getJobPostId());
		attributes.put("evaluationName", getEvaluationName());
		attributes.put("evaluationDescription", getEvaluationDescription());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long postEvaluationId = (Long)attributes.get("postEvaluationId");

		if (postEvaluationId != null) {
			setPostEvaluationId(postEvaluationId);
		}

		Long jobPostId = (Long)attributes.get("jobPostId");

		if (jobPostId != null) {
			setJobPostId(jobPostId);
		}

		String evaluationName = (String)attributes.get("evaluationName");

		if (evaluationName != null) {
			setEvaluationName(evaluationName);
		}

		String evaluationDescription = (String)attributes.get(
				"evaluationDescription");

		if (evaluationDescription != null) {
			setEvaluationDescription(evaluationDescription);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getPostEvaluationId() {
		return _postEvaluationId;
	}

	@Override
	public void setPostEvaluationId(long postEvaluationId) {
		_postEvaluationId = postEvaluationId;
	}

	@JSON
	@Override
	public long getJobPostId() {
		return _jobPostId;
	}

	@Override
	public void setJobPostId(long jobPostId) {
		_columnBitmask |= JOBPOSTID_COLUMN_BITMASK;

		if (!_setOriginalJobPostId) {
			_setOriginalJobPostId = true;

			_originalJobPostId = _jobPostId;
		}

		_jobPostId = jobPostId;
	}

	public long getOriginalJobPostId() {
		return _originalJobPostId;
	}

	@JSON
	@Override
	public String getEvaluationName() {
		if (_evaluationName == null) {
			return "";
		}
		else {
			return _evaluationName;
		}
	}

	@Override
	public void setEvaluationName(String evaluationName) {
		_evaluationName = evaluationName;
	}

	@JSON
	@Override
	public String getEvaluationDescription() {
		if (_evaluationDescription == null) {
			return "";
		}
		else {
			return _evaluationDescription;
		}
	}

	@Override
	public void setEvaluationDescription(String evaluationDescription) {
		_evaluationDescription = evaluationDescription;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			JobEvaluation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JobEvaluation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (JobEvaluation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JobEvaluationImpl jobEvaluationImpl = new JobEvaluationImpl();

		jobEvaluationImpl.setPostEvaluationId(getPostEvaluationId());
		jobEvaluationImpl.setJobPostId(getJobPostId());
		jobEvaluationImpl.setEvaluationName(getEvaluationName());
		jobEvaluationImpl.setEvaluationDescription(getEvaluationDescription());
		jobEvaluationImpl.setCreatedDate(getCreatedDate());
		jobEvaluationImpl.setModifiedDate(getModifiedDate());

		jobEvaluationImpl.resetOriginalValues();

		return jobEvaluationImpl;
	}

	@Override
	public int compareTo(JobEvaluation jobEvaluation) {
		long primaryKey = jobEvaluation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof JobEvaluation)) {
			return false;
		}

		JobEvaluation jobEvaluation = (JobEvaluation)obj;

		long primaryKey = jobEvaluation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		JobEvaluationModelImpl jobEvaluationModelImpl = this;

		jobEvaluationModelImpl._originalJobPostId = jobEvaluationModelImpl._jobPostId;

		jobEvaluationModelImpl._setOriginalJobPostId = false;

		jobEvaluationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<JobEvaluation> toCacheModel() {
		JobEvaluationCacheModel jobEvaluationCacheModel = new JobEvaluationCacheModel();

		jobEvaluationCacheModel.postEvaluationId = getPostEvaluationId();

		jobEvaluationCacheModel.jobPostId = getJobPostId();

		jobEvaluationCacheModel.evaluationName = getEvaluationName();

		String evaluationName = jobEvaluationCacheModel.evaluationName;

		if ((evaluationName != null) && (evaluationName.length() == 0)) {
			jobEvaluationCacheModel.evaluationName = null;
		}

		jobEvaluationCacheModel.evaluationDescription = getEvaluationDescription();

		String evaluationDescription = jobEvaluationCacheModel.evaluationDescription;

		if ((evaluationDescription != null) &&
				(evaluationDescription.length() == 0)) {
			jobEvaluationCacheModel.evaluationDescription = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			jobEvaluationCacheModel.createdDate = createdDate.getTime();
		}
		else {
			jobEvaluationCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jobEvaluationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jobEvaluationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return jobEvaluationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{postEvaluationId=");
		sb.append(getPostEvaluationId());
		sb.append(", jobPostId=");
		sb.append(getJobPostId());
		sb.append(", evaluationName=");
		sb.append(getEvaluationName());
		sb.append(", evaluationDescription=");
		sb.append(getEvaluationDescription());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.JobEvaluation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>postEvaluationId</column-name><column-value><![CDATA[");
		sb.append(getPostEvaluationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobPostId</column-name><column-value><![CDATA[");
		sb.append(getJobPostId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>evaluationName</column-name><column-value><![CDATA[");
		sb.append(getEvaluationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>evaluationDescription</column-name><column-value><![CDATA[");
		sb.append(getEvaluationDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = JobEvaluation.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			JobEvaluation.class, ModelWrapper.class
		};
	private long _postEvaluationId;
	private long _jobPostId;
	private long _originalJobPostId;
	private boolean _setOriginalJobPostId;
	private String _evaluationName;
	private String _evaluationDescription;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private JobEvaluation _escapedModel;
}