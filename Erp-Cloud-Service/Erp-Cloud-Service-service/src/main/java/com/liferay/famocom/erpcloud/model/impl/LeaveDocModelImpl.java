/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.LeaveDoc;
import com.liferay.famocom.erpcloud.model.LeaveDocModel;
import com.liferay.famocom.erpcloud.model.LeaveDocSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LeaveDoc service. Represents a row in the &quot;LeaveDoc&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link LeaveDocModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LeaveDocImpl}.
 * </p>
 *
 * @author Samaresh
 * @see LeaveDocImpl
 * @see LeaveDoc
 * @see LeaveDocModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class LeaveDocModelImpl extends BaseModelImpl<LeaveDoc>
	implements LeaveDocModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a leave doc model instance should use the {@link LeaveDoc} interface instead.
	 */
	public static final String TABLE_NAME = "LeaveDoc";
	public static final Object[][] TABLE_COLUMNS = {
			{ "leaveDocId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "leaveApplyId", Types.BIGINT },
			{ "fileEntryId", Types.BIGINT },
			{ "filePath", Types.VARCHAR },
			{ "addedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("leaveDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("leaveApplyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("filePath", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table LeaveDoc (leaveDocId LONG not null primary key,employeeId LONG,companyId LONG,leaveApplyId LONG,fileEntryId LONG,filePath VARCHAR(75) null,addedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table LeaveDoc";
	public static final String ORDER_BY_JPQL = " ORDER BY leaveDoc.leaveDocId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LeaveDoc.leaveDocId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.LeaveDoc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.LeaveDoc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LeaveDoc toModel(LeaveDocSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LeaveDoc model = new LeaveDocImpl();

		model.setLeaveDocId(soapModel.getLeaveDocId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setLeaveApplyId(soapModel.getLeaveApplyId());
		model.setFileEntryId(soapModel.getFileEntryId());
		model.setFilePath(soapModel.getFilePath());
		model.setAddedDate(soapModel.getAddedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LeaveDoc> toModels(LeaveDocSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LeaveDoc> models = new ArrayList<LeaveDoc>(soapModels.length);

		for (LeaveDocSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.LeaveDoc"));

	public LeaveDocModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _leaveDocId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLeaveDocId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _leaveDocId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LeaveDoc.class;
	}

	@Override
	public String getModelClassName() {
		return LeaveDoc.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("leaveDocId", getLeaveDocId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("leaveApplyId", getLeaveApplyId());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("filePath", getFilePath());
		attributes.put("addedDate", getAddedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long leaveDocId = (Long)attributes.get("leaveDocId");

		if (leaveDocId != null) {
			setLeaveDocId(leaveDocId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long leaveApplyId = (Long)attributes.get("leaveApplyId");

		if (leaveApplyId != null) {
			setLeaveApplyId(leaveApplyId);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		String filePath = (String)attributes.get("filePath");

		if (filePath != null) {
			setFilePath(filePath);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}
	}

	@JSON
	@Override
	public long getLeaveDocId() {
		return _leaveDocId;
	}

	@Override
	public void setLeaveDocId(long leaveDocId) {
		_leaveDocId = leaveDocId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getLeaveApplyId() {
		return _leaveApplyId;
	}

	@Override
	public void setLeaveApplyId(long leaveApplyId) {
		_leaveApplyId = leaveApplyId;
	}

	@JSON
	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@JSON
	@Override
	public String getFilePath() {
		if (_filePath == null) {
			return "";
		}
		else {
			return _filePath;
		}
	}

	@Override
	public void setFilePath(String filePath) {
		_filePath = filePath;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			LeaveDoc.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LeaveDoc toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LeaveDoc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LeaveDocImpl leaveDocImpl = new LeaveDocImpl();

		leaveDocImpl.setLeaveDocId(getLeaveDocId());
		leaveDocImpl.setEmployeeId(getEmployeeId());
		leaveDocImpl.setCompanyId(getCompanyId());
		leaveDocImpl.setLeaveApplyId(getLeaveApplyId());
		leaveDocImpl.setFileEntryId(getFileEntryId());
		leaveDocImpl.setFilePath(getFilePath());
		leaveDocImpl.setAddedDate(getAddedDate());

		leaveDocImpl.resetOriginalValues();

		return leaveDocImpl;
	}

	@Override
	public int compareTo(LeaveDoc leaveDoc) {
		long primaryKey = leaveDoc.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LeaveDoc)) {
			return false;
		}

		LeaveDoc leaveDoc = (LeaveDoc)obj;

		long primaryKey = leaveDoc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LeaveDoc> toCacheModel() {
		LeaveDocCacheModel leaveDocCacheModel = new LeaveDocCacheModel();

		leaveDocCacheModel.leaveDocId = getLeaveDocId();

		leaveDocCacheModel.employeeId = getEmployeeId();

		leaveDocCacheModel.companyId = getCompanyId();

		leaveDocCacheModel.leaveApplyId = getLeaveApplyId();

		leaveDocCacheModel.fileEntryId = getFileEntryId();

		leaveDocCacheModel.filePath = getFilePath();

		String filePath = leaveDocCacheModel.filePath;

		if ((filePath != null) && (filePath.length() == 0)) {
			leaveDocCacheModel.filePath = null;
		}

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			leaveDocCacheModel.addedDate = addedDate.getTime();
		}
		else {
			leaveDocCacheModel.addedDate = Long.MIN_VALUE;
		}

		return leaveDocCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{leaveDocId=");
		sb.append(getLeaveDocId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", leaveApplyId=");
		sb.append(getLeaveApplyId());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", filePath=");
		sb.append(getFilePath());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.LeaveDoc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>leaveDocId</column-name><column-value><![CDATA[");
		sb.append(getLeaveDocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveApplyId</column-name><column-value><![CDATA[");
		sb.append(getLeaveApplyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>filePath</column-name><column-value><![CDATA[");
		sb.append(getFilePath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = LeaveDoc.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			LeaveDoc.class, ModelWrapper.class
		};
	private long _leaveDocId;
	private long _employeeId;
	private long _companyId;
	private long _leaveApplyId;
	private long _fileEntryId;
	private String _filePath;
	private Date _addedDate;
	private LeaveDoc _escapedModel;
}