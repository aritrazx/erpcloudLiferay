/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.GoalMaster;
import com.liferay.famocom.erpcloud.model.GoalMasterModel;
import com.liferay.famocom.erpcloud.model.GoalMasterSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the GoalMaster service. Represents a row in the &quot;goalMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link GoalMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GoalMasterImpl}.
 * </p>
 *
 * @author Samaresh
 * @see GoalMasterImpl
 * @see GoalMaster
 * @see GoalMasterModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class GoalMasterModelImpl extends BaseModelImpl<GoalMaster>
	implements GoalMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a goal master model instance should use the {@link GoalMaster} interface instead.
	 */
	public static final String TABLE_NAME = "goalMaster";
	public static final Object[][] TABLE_COLUMNS = {
			{ "goalId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "projectId", Types.BIGINT },
			{ "goalName", Types.VARCHAR },
			{ "goalDescription", Types.VARCHAR },
			{ "addedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("goalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("projectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("goalName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("goalDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table goalMaster (goalId LONG not null primary key,employeeId LONG,projectId LONG,goalName VARCHAR(75) null,goalDescription VARCHAR(75) null,addedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table goalMaster";
	public static final String ORDER_BY_JPQL = " ORDER BY goalMaster.goalId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY goalMaster.goalId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.GoalMaster"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.GoalMaster"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static GoalMaster toModel(GoalMasterSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		GoalMaster model = new GoalMasterImpl();

		model.setGoalId(soapModel.getGoalId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setProjectId(soapModel.getProjectId());
		model.setGoalName(soapModel.getGoalName());
		model.setGoalDescription(soapModel.getGoalDescription());
		model.setAddedDate(soapModel.getAddedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<GoalMaster> toModels(GoalMasterSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<GoalMaster> models = new ArrayList<GoalMaster>(soapModels.length);

		for (GoalMasterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.GoalMaster"));

	public GoalMasterModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _goalId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setGoalId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _goalId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return GoalMaster.class;
	}

	@Override
	public String getModelClassName() {
		return GoalMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("goalId", getGoalId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("projectId", getProjectId());
		attributes.put("goalName", getGoalName());
		attributes.put("goalDescription", getGoalDescription());
		attributes.put("addedDate", getAddedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long goalId = (Long)attributes.get("goalId");

		if (goalId != null) {
			setGoalId(goalId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long projectId = (Long)attributes.get("projectId");

		if (projectId != null) {
			setProjectId(projectId);
		}

		String goalName = (String)attributes.get("goalName");

		if (goalName != null) {
			setGoalName(goalName);
		}

		String goalDescription = (String)attributes.get("goalDescription");

		if (goalDescription != null) {
			setGoalDescription(goalDescription);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}
	}

	@JSON
	@Override
	public long getGoalId() {
		return _goalId;
	}

	@Override
	public void setGoalId(long goalId) {
		_goalId = goalId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@JSON
	@Override
	public long getProjectId() {
		return _projectId;
	}

	@Override
	public void setProjectId(long projectId) {
		_projectId = projectId;
	}

	@JSON
	@Override
	public String getGoalName() {
		if (_goalName == null) {
			return "";
		}
		else {
			return _goalName;
		}
	}

	@Override
	public void setGoalName(String goalName) {
		_goalName = goalName;
	}

	@JSON
	@Override
	public String getGoalDescription() {
		if (_goalDescription == null) {
			return "";
		}
		else {
			return _goalDescription;
		}
	}

	@Override
	public void setGoalDescription(String goalDescription) {
		_goalDescription = goalDescription;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			GoalMaster.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public GoalMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (GoalMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GoalMasterImpl goalMasterImpl = new GoalMasterImpl();

		goalMasterImpl.setGoalId(getGoalId());
		goalMasterImpl.setEmployeeId(getEmployeeId());
		goalMasterImpl.setProjectId(getProjectId());
		goalMasterImpl.setGoalName(getGoalName());
		goalMasterImpl.setGoalDescription(getGoalDescription());
		goalMasterImpl.setAddedDate(getAddedDate());

		goalMasterImpl.resetOriginalValues();

		return goalMasterImpl;
	}

	@Override
	public int compareTo(GoalMaster goalMaster) {
		long primaryKey = goalMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof GoalMaster)) {
			return false;
		}

		GoalMaster goalMaster = (GoalMaster)obj;

		long primaryKey = goalMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<GoalMaster> toCacheModel() {
		GoalMasterCacheModel goalMasterCacheModel = new GoalMasterCacheModel();

		goalMasterCacheModel.goalId = getGoalId();

		goalMasterCacheModel.employeeId = getEmployeeId();

		goalMasterCacheModel.projectId = getProjectId();

		goalMasterCacheModel.goalName = getGoalName();

		String goalName = goalMasterCacheModel.goalName;

		if ((goalName != null) && (goalName.length() == 0)) {
			goalMasterCacheModel.goalName = null;
		}

		goalMasterCacheModel.goalDescription = getGoalDescription();

		String goalDescription = goalMasterCacheModel.goalDescription;

		if ((goalDescription != null) && (goalDescription.length() == 0)) {
			goalMasterCacheModel.goalDescription = null;
		}

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			goalMasterCacheModel.addedDate = addedDate.getTime();
		}
		else {
			goalMasterCacheModel.addedDate = Long.MIN_VALUE;
		}

		return goalMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{goalId=");
		sb.append(getGoalId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", projectId=");
		sb.append(getProjectId());
		sb.append(", goalName=");
		sb.append(getGoalName());
		sb.append(", goalDescription=");
		sb.append(getGoalDescription());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.GoalMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>goalId</column-name><column-value><![CDATA[");
		sb.append(getGoalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectId</column-name><column-value><![CDATA[");
		sb.append(getProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goalName</column-name><column-value><![CDATA[");
		sb.append(getGoalName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goalDescription</column-name><column-value><![CDATA[");
		sb.append(getGoalDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = GoalMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			GoalMaster.class, ModelWrapper.class
		};
	private long _goalId;
	private long _employeeId;
	private long _projectId;
	private String _goalName;
	private String _goalDescription;
	private Date _addedDate;
	private GoalMaster _escapedModel;
}