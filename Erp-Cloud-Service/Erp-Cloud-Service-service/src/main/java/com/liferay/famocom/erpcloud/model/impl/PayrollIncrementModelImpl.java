/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.PayrollIncrement;
import com.liferay.famocom.erpcloud.model.PayrollIncrementModel;
import com.liferay.famocom.erpcloud.model.PayrollIncrementSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PayrollIncrement service. Represents a row in the &quot;payrollIncrement&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PayrollIncrementModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PayrollIncrementImpl}.
 * </p>
 *
 * @author Samaresh
 * @see PayrollIncrementImpl
 * @see PayrollIncrement
 * @see PayrollIncrementModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class PayrollIncrementModelImpl extends BaseModelImpl<PayrollIncrement>
	implements PayrollIncrementModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payroll increment model instance should use the {@link PayrollIncrement} interface instead.
	 */
	public static final String TABLE_NAME = "payrollIncrement";
	public static final Object[][] TABLE_COLUMNS = {
			{ "payrollIncrementId", Types.BIGINT },
			{ "appraisalSettingId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "employeeCode", Types.BIGINT },
			{ "overallRatingMan", Types.BIGINT },
			{ "preCtc", Types.DOUBLE },
			{ "postCtc", Types.DOUBLE },
			{ "componentId", Types.BIGINT },
			{ "preHeadComponentVal", Types.DOUBLE },
			{ "postHeadComponentVal", Types.DOUBLE },
			{ "bonusVal", Types.DOUBLE },
			{ "financialYear", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("payrollIncrementId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("appraisalSettingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeCode", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("overallRatingMan", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("preCtc", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("postCtc", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("componentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("preHeadComponentVal", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("postHeadComponentVal", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("bonusVal", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("financialYear", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table payrollIncrement (payrollIncrementId LONG not null primary key,appraisalSettingId LONG,employeeId LONG,companyId LONG,employeeCode LONG,overallRatingMan LONG,preCtc DOUBLE,postCtc DOUBLE,componentId LONG,preHeadComponentVal DOUBLE,postHeadComponentVal DOUBLE,bonusVal DOUBLE,financialYear VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table payrollIncrement";
	public static final String ORDER_BY_JPQL = " ORDER BY payrollIncrement.payrollIncrementId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY payrollIncrement.payrollIncrementId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.PayrollIncrement"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.PayrollIncrement"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.PayrollIncrement"),
			true);
	public static final long APPRAISALSETTINGID_COLUMN_BITMASK = 1L;
	public static final long COMPONENTID_COLUMN_BITMASK = 2L;
	public static final long EMPLOYEEID_COLUMN_BITMASK = 4L;
	public static final long FINANCIALYEAR_COLUMN_BITMASK = 8L;
	public static final long PAYROLLINCREMENTID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PayrollIncrement toModel(PayrollIncrementSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PayrollIncrement model = new PayrollIncrementImpl();

		model.setPayrollIncrementId(soapModel.getPayrollIncrementId());
		model.setAppraisalSettingId(soapModel.getAppraisalSettingId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setEmployeeCode(soapModel.getEmployeeCode());
		model.setOverallRatingMan(soapModel.getOverallRatingMan());
		model.setPreCtc(soapModel.getPreCtc());
		model.setPostCtc(soapModel.getPostCtc());
		model.setComponentId(soapModel.getComponentId());
		model.setPreHeadComponentVal(soapModel.getPreHeadComponentVal());
		model.setPostHeadComponentVal(soapModel.getPostHeadComponentVal());
		model.setBonusVal(soapModel.getBonusVal());
		model.setFinancialYear(soapModel.getFinancialYear());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PayrollIncrement> toModels(
		PayrollIncrementSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PayrollIncrement> models = new ArrayList<PayrollIncrement>(soapModels.length);

		for (PayrollIncrementSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.PayrollIncrement"));

	public PayrollIncrementModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _payrollIncrementId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPayrollIncrementId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _payrollIncrementId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PayrollIncrement.class;
	}

	@Override
	public String getModelClassName() {
		return PayrollIncrement.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("payrollIncrementId", getPayrollIncrementId());
		attributes.put("appraisalSettingId", getAppraisalSettingId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("companyId", getCompanyId());
		attributes.put("employeeCode", getEmployeeCode());
		attributes.put("overallRatingMan", getOverallRatingMan());
		attributes.put("preCtc", getPreCtc());
		attributes.put("postCtc", getPostCtc());
		attributes.put("componentId", getComponentId());
		attributes.put("preHeadComponentVal", getPreHeadComponentVal());
		attributes.put("postHeadComponentVal", getPostHeadComponentVal());
		attributes.put("bonusVal", getBonusVal());
		attributes.put("financialYear", getFinancialYear());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long payrollIncrementId = (Long)attributes.get("payrollIncrementId");

		if (payrollIncrementId != null) {
			setPayrollIncrementId(payrollIncrementId);
		}

		Long appraisalSettingId = (Long)attributes.get("appraisalSettingId");

		if (appraisalSettingId != null) {
			setAppraisalSettingId(appraisalSettingId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long employeeCode = (Long)attributes.get("employeeCode");

		if (employeeCode != null) {
			setEmployeeCode(employeeCode);
		}

		Long overallRatingMan = (Long)attributes.get("overallRatingMan");

		if (overallRatingMan != null) {
			setOverallRatingMan(overallRatingMan);
		}

		Double preCtc = (Double)attributes.get("preCtc");

		if (preCtc != null) {
			setPreCtc(preCtc);
		}

		Double postCtc = (Double)attributes.get("postCtc");

		if (postCtc != null) {
			setPostCtc(postCtc);
		}

		Long componentId = (Long)attributes.get("componentId");

		if (componentId != null) {
			setComponentId(componentId);
		}

		Double preHeadComponentVal = (Double)attributes.get(
				"preHeadComponentVal");

		if (preHeadComponentVal != null) {
			setPreHeadComponentVal(preHeadComponentVal);
		}

		Double postHeadComponentVal = (Double)attributes.get(
				"postHeadComponentVal");

		if (postHeadComponentVal != null) {
			setPostHeadComponentVal(postHeadComponentVal);
		}

		Double bonusVal = (Double)attributes.get("bonusVal");

		if (bonusVal != null) {
			setBonusVal(bonusVal);
		}

		String financialYear = (String)attributes.get("financialYear");

		if (financialYear != null) {
			setFinancialYear(financialYear);
		}
	}

	@JSON
	@Override
	public long getPayrollIncrementId() {
		return _payrollIncrementId;
	}

	@Override
	public void setPayrollIncrementId(long payrollIncrementId) {
		_payrollIncrementId = payrollIncrementId;
	}

	@JSON
	@Override
	public long getAppraisalSettingId() {
		return _appraisalSettingId;
	}

	@Override
	public void setAppraisalSettingId(long appraisalSettingId) {
		_columnBitmask |= APPRAISALSETTINGID_COLUMN_BITMASK;

		if (!_setOriginalAppraisalSettingId) {
			_setOriginalAppraisalSettingId = true;

			_originalAppraisalSettingId = _appraisalSettingId;
		}

		_appraisalSettingId = appraisalSettingId;
	}

	public long getOriginalAppraisalSettingId() {
		return _originalAppraisalSettingId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getEmployeeCode() {
		return _employeeCode;
	}

	@Override
	public void setEmployeeCode(long employeeCode) {
		_employeeCode = employeeCode;
	}

	@JSON
	@Override
	public long getOverallRatingMan() {
		return _overallRatingMan;
	}

	@Override
	public void setOverallRatingMan(long overallRatingMan) {
		_overallRatingMan = overallRatingMan;
	}

	@JSON
	@Override
	public double getPreCtc() {
		return _preCtc;
	}

	@Override
	public void setPreCtc(double preCtc) {
		_preCtc = preCtc;
	}

	@JSON
	@Override
	public double getPostCtc() {
		return _postCtc;
	}

	@Override
	public void setPostCtc(double postCtc) {
		_postCtc = postCtc;
	}

	@JSON
	@Override
	public long getComponentId() {
		return _componentId;
	}

	@Override
	public void setComponentId(long componentId) {
		_columnBitmask |= COMPONENTID_COLUMN_BITMASK;

		if (!_setOriginalComponentId) {
			_setOriginalComponentId = true;

			_originalComponentId = _componentId;
		}

		_componentId = componentId;
	}

	public long getOriginalComponentId() {
		return _originalComponentId;
	}

	@JSON
	@Override
	public double getPreHeadComponentVal() {
		return _preHeadComponentVal;
	}

	@Override
	public void setPreHeadComponentVal(double preHeadComponentVal) {
		_preHeadComponentVal = preHeadComponentVal;
	}

	@JSON
	@Override
	public double getPostHeadComponentVal() {
		return _postHeadComponentVal;
	}

	@Override
	public void setPostHeadComponentVal(double postHeadComponentVal) {
		_postHeadComponentVal = postHeadComponentVal;
	}

	@JSON
	@Override
	public double getBonusVal() {
		return _bonusVal;
	}

	@Override
	public void setBonusVal(double bonusVal) {
		_bonusVal = bonusVal;
	}

	@JSON
	@Override
	public String getFinancialYear() {
		if (_financialYear == null) {
			return "";
		}
		else {
			return _financialYear;
		}
	}

	@Override
	public void setFinancialYear(String financialYear) {
		_columnBitmask |= FINANCIALYEAR_COLUMN_BITMASK;

		if (_originalFinancialYear == null) {
			_originalFinancialYear = _financialYear;
		}

		_financialYear = financialYear;
	}

	public String getOriginalFinancialYear() {
		return GetterUtil.getString(_originalFinancialYear);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PayrollIncrement.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PayrollIncrement toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PayrollIncrement)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PayrollIncrementImpl payrollIncrementImpl = new PayrollIncrementImpl();

		payrollIncrementImpl.setPayrollIncrementId(getPayrollIncrementId());
		payrollIncrementImpl.setAppraisalSettingId(getAppraisalSettingId());
		payrollIncrementImpl.setEmployeeId(getEmployeeId());
		payrollIncrementImpl.setCompanyId(getCompanyId());
		payrollIncrementImpl.setEmployeeCode(getEmployeeCode());
		payrollIncrementImpl.setOverallRatingMan(getOverallRatingMan());
		payrollIncrementImpl.setPreCtc(getPreCtc());
		payrollIncrementImpl.setPostCtc(getPostCtc());
		payrollIncrementImpl.setComponentId(getComponentId());
		payrollIncrementImpl.setPreHeadComponentVal(getPreHeadComponentVal());
		payrollIncrementImpl.setPostHeadComponentVal(getPostHeadComponentVal());
		payrollIncrementImpl.setBonusVal(getBonusVal());
		payrollIncrementImpl.setFinancialYear(getFinancialYear());

		payrollIncrementImpl.resetOriginalValues();

		return payrollIncrementImpl;
	}

	@Override
	public int compareTo(PayrollIncrement payrollIncrement) {
		long primaryKey = payrollIncrement.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PayrollIncrement)) {
			return false;
		}

		PayrollIncrement payrollIncrement = (PayrollIncrement)obj;

		long primaryKey = payrollIncrement.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PayrollIncrementModelImpl payrollIncrementModelImpl = this;

		payrollIncrementModelImpl._originalAppraisalSettingId = payrollIncrementModelImpl._appraisalSettingId;

		payrollIncrementModelImpl._setOriginalAppraisalSettingId = false;

		payrollIncrementModelImpl._originalEmployeeId = payrollIncrementModelImpl._employeeId;

		payrollIncrementModelImpl._setOriginalEmployeeId = false;

		payrollIncrementModelImpl._originalComponentId = payrollIncrementModelImpl._componentId;

		payrollIncrementModelImpl._setOriginalComponentId = false;

		payrollIncrementModelImpl._originalFinancialYear = payrollIncrementModelImpl._financialYear;

		payrollIncrementModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PayrollIncrement> toCacheModel() {
		PayrollIncrementCacheModel payrollIncrementCacheModel = new PayrollIncrementCacheModel();

		payrollIncrementCacheModel.payrollIncrementId = getPayrollIncrementId();

		payrollIncrementCacheModel.appraisalSettingId = getAppraisalSettingId();

		payrollIncrementCacheModel.employeeId = getEmployeeId();

		payrollIncrementCacheModel.companyId = getCompanyId();

		payrollIncrementCacheModel.employeeCode = getEmployeeCode();

		payrollIncrementCacheModel.overallRatingMan = getOverallRatingMan();

		payrollIncrementCacheModel.preCtc = getPreCtc();

		payrollIncrementCacheModel.postCtc = getPostCtc();

		payrollIncrementCacheModel.componentId = getComponentId();

		payrollIncrementCacheModel.preHeadComponentVal = getPreHeadComponentVal();

		payrollIncrementCacheModel.postHeadComponentVal = getPostHeadComponentVal();

		payrollIncrementCacheModel.bonusVal = getBonusVal();

		payrollIncrementCacheModel.financialYear = getFinancialYear();

		String financialYear = payrollIncrementCacheModel.financialYear;

		if ((financialYear != null) && (financialYear.length() == 0)) {
			payrollIncrementCacheModel.financialYear = null;
		}

		return payrollIncrementCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{payrollIncrementId=");
		sb.append(getPayrollIncrementId());
		sb.append(", appraisalSettingId=");
		sb.append(getAppraisalSettingId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", employeeCode=");
		sb.append(getEmployeeCode());
		sb.append(", overallRatingMan=");
		sb.append(getOverallRatingMan());
		sb.append(", preCtc=");
		sb.append(getPreCtc());
		sb.append(", postCtc=");
		sb.append(getPostCtc());
		sb.append(", componentId=");
		sb.append(getComponentId());
		sb.append(", preHeadComponentVal=");
		sb.append(getPreHeadComponentVal());
		sb.append(", postHeadComponentVal=");
		sb.append(getPostHeadComponentVal());
		sb.append(", bonusVal=");
		sb.append(getBonusVal());
		sb.append(", financialYear=");
		sb.append(getFinancialYear());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.PayrollIncrement");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>payrollIncrementId</column-name><column-value><![CDATA[");
		sb.append(getPayrollIncrementId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appraisalSettingId</column-name><column-value><![CDATA[");
		sb.append(getAppraisalSettingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeCode</column-name><column-value><![CDATA[");
		sb.append(getEmployeeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>overallRatingMan</column-name><column-value><![CDATA[");
		sb.append(getOverallRatingMan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preCtc</column-name><column-value><![CDATA[");
		sb.append(getPreCtc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postCtc</column-name><column-value><![CDATA[");
		sb.append(getPostCtc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>componentId</column-name><column-value><![CDATA[");
		sb.append(getComponentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>preHeadComponentVal</column-name><column-value><![CDATA[");
		sb.append(getPreHeadComponentVal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postHeadComponentVal</column-name><column-value><![CDATA[");
		sb.append(getPostHeadComponentVal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bonusVal</column-name><column-value><![CDATA[");
		sb.append(getBonusVal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>financialYear</column-name><column-value><![CDATA[");
		sb.append(getFinancialYear());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PayrollIncrement.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PayrollIncrement.class, ModelWrapper.class
		};
	private long _payrollIncrementId;
	private long _appraisalSettingId;
	private long _originalAppraisalSettingId;
	private boolean _setOriginalAppraisalSettingId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _companyId;
	private long _employeeCode;
	private long _overallRatingMan;
	private double _preCtc;
	private double _postCtc;
	private long _componentId;
	private long _originalComponentId;
	private boolean _setOriginalComponentId;
	private double _preHeadComponentVal;
	private double _postHeadComponentVal;
	private double _bonusVal;
	private String _financialYear;
	private String _originalFinancialYear;
	private long _columnBitmask;
	private PayrollIncrement _escapedModel;
}