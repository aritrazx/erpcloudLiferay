/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.famocom.erpcloud.model.ProjectReport;
import com.liferay.famocom.erpcloud.service.ProjectReportLocalService;
import com.liferay.famocom.erpcloud.service.persistence.AddTeamMemberPersistence;
import com.liferay.famocom.erpcloud.service.persistence.AttendancePersistence;
import com.liferay.famocom.erpcloud.service.persistence.EmailTemplatePersistence;
import com.liferay.famocom.erpcloud.service.persistence.EmployeePersistence;
import com.liferay.famocom.erpcloud.service.persistence.EmployeeTypePersistence;
import com.liferay.famocom.erpcloud.service.persistence.GoalDetailsPersistence;
import com.liferay.famocom.erpcloud.service.persistence.GoalMasterPersistence;
import com.liferay.famocom.erpcloud.service.persistence.HolidayCalenderManagementPersistence;
import com.liferay.famocom.erpcloud.service.persistence.LeaveApplyDtlPersistence;
import com.liferay.famocom.erpcloud.service.persistence.LeaveApplyPersistence;
import com.liferay.famocom.erpcloud.service.persistence.LeaveManagementPersistence;
import com.liferay.famocom.erpcloud.service.persistence.LeaveObPersistence;
import com.liferay.famocom.erpcloud.service.persistence.PerformanceMasterPersistence;
import com.liferay.famocom.erpcloud.service.persistence.ProjectMasterPersistence;
import com.liferay.famocom.erpcloud.service.persistence.ProjectReportPersistence;
import com.liferay.famocom.erpcloud.service.persistence.ProjectRolePersistence;
import com.liferay.famocom.erpcloud.service.persistence.ProjectStatusPersistence;
import com.liferay.famocom.erpcloud.service.persistence.RatingMasterPersistence;
import com.liferay.famocom.erpcloud.service.persistence.SchedulesMasterPersistence;
import com.liferay.famocom.erpcloud.service.persistence.TimeSheetEntryPersistence;
import com.liferay.famocom.erpcloud.service.persistence.WorksSchedulesPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the project report local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.famocom.erpcloud.service.impl.ProjectReportLocalServiceImpl}.
 * </p>
 *
 * @author Samaresh
 * @see com.liferay.famocom.erpcloud.service.impl.ProjectReportLocalServiceImpl
 * @see com.liferay.famocom.erpcloud.service.ProjectReportLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class ProjectReportLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements ProjectReportLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.famocom.erpcloud.service.ProjectReportLocalServiceUtil} to access the project report local service.
	 */

	/**
	 * Adds the project report to the database. Also notifies the appropriate model listeners.
	 *
	 * @param projectReport the project report
	 * @return the project report that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ProjectReport addProjectReport(ProjectReport projectReport) {
		projectReport.setNew(true);

		return projectReportPersistence.update(projectReport);
	}

	/**
	 * Creates a new project report with the primary key. Does not add the project report to the database.
	 *
	 * @param reportTemplateId the primary key for the new project report
	 * @return the new project report
	 */
	@Override
	public ProjectReport createProjectReport(long reportTemplateId) {
		return projectReportPersistence.create(reportTemplateId);
	}

	/**
	 * Deletes the project report with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param reportTemplateId the primary key of the project report
	 * @return the project report that was removed
	 * @throws PortalException if a project report with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ProjectReport deleteProjectReport(long reportTemplateId)
		throws PortalException {
		return projectReportPersistence.remove(reportTemplateId);
	}

	/**
	 * Deletes the project report from the database. Also notifies the appropriate model listeners.
	 *
	 * @param projectReport the project report
	 * @return the project report that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ProjectReport deleteProjectReport(ProjectReport projectReport) {
		return projectReportPersistence.remove(projectReport);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(ProjectReport.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return projectReportPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.famocom.erpcloud.model.impl.ProjectReportModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return projectReportPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.famocom.erpcloud.model.impl.ProjectReportModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return projectReportPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return projectReportPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return projectReportPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public ProjectReport fetchProjectReport(long reportTemplateId) {
		return projectReportPersistence.fetchByPrimaryKey(reportTemplateId);
	}

	/**
	 * Returns the project report with the primary key.
	 *
	 * @param reportTemplateId the primary key of the project report
	 * @return the project report
	 * @throws PortalException if a project report with the primary key could not be found
	 */
	@Override
	public ProjectReport getProjectReport(long reportTemplateId)
		throws PortalException {
		return projectReportPersistence.findByPrimaryKey(reportTemplateId);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(projectReportLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(ProjectReport.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("reportTemplateId");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(projectReportLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(ProjectReport.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName(
			"reportTemplateId");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(projectReportLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(ProjectReport.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("reportTemplateId");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return projectReportLocalService.deleteProjectReport((ProjectReport)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return projectReportPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the project reports.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.famocom.erpcloud.model.impl.ProjectReportModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of project reports
	 * @param end the upper bound of the range of project reports (not inclusive)
	 * @return the range of project reports
	 */
	@Override
	public List<ProjectReport> getProjectReports(int start, int end) {
		return projectReportPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of project reports.
	 *
	 * @return the number of project reports
	 */
	@Override
	public int getProjectReportsCount() {
		return projectReportPersistence.countAll();
	}

	/**
	 * Updates the project report in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param projectReport the project report
	 * @return the project report that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ProjectReport updateProjectReport(ProjectReport projectReport) {
		return projectReportPersistence.update(projectReport);
	}

	/**
	 * Returns the add team member local service.
	 *
	 * @return the add team member local service
	 */
	public com.liferay.famocom.erpcloud.service.AddTeamMemberLocalService getAddTeamMemberLocalService() {
		return addTeamMemberLocalService;
	}

	/**
	 * Sets the add team member local service.
	 *
	 * @param addTeamMemberLocalService the add team member local service
	 */
	public void setAddTeamMemberLocalService(
		com.liferay.famocom.erpcloud.service.AddTeamMemberLocalService addTeamMemberLocalService) {
		this.addTeamMemberLocalService = addTeamMemberLocalService;
	}

	/**
	 * Returns the add team member persistence.
	 *
	 * @return the add team member persistence
	 */
	public AddTeamMemberPersistence getAddTeamMemberPersistence() {
		return addTeamMemberPersistence;
	}

	/**
	 * Sets the add team member persistence.
	 *
	 * @param addTeamMemberPersistence the add team member persistence
	 */
	public void setAddTeamMemberPersistence(
		AddTeamMemberPersistence addTeamMemberPersistence) {
		this.addTeamMemberPersistence = addTeamMemberPersistence;
	}

	/**
	 * Returns the attendance local service.
	 *
	 * @return the attendance local service
	 */
	public com.liferay.famocom.erpcloud.service.AttendanceLocalService getAttendanceLocalService() {
		return attendanceLocalService;
	}

	/**
	 * Sets the attendance local service.
	 *
	 * @param attendanceLocalService the attendance local service
	 */
	public void setAttendanceLocalService(
		com.liferay.famocom.erpcloud.service.AttendanceLocalService attendanceLocalService) {
		this.attendanceLocalService = attendanceLocalService;
	}

	/**
	 * Returns the attendance persistence.
	 *
	 * @return the attendance persistence
	 */
	public AttendancePersistence getAttendancePersistence() {
		return attendancePersistence;
	}

	/**
	 * Sets the attendance persistence.
	 *
	 * @param attendancePersistence the attendance persistence
	 */
	public void setAttendancePersistence(
		AttendancePersistence attendancePersistence) {
		this.attendancePersistence = attendancePersistence;
	}

	/**
	 * Returns the email template local service.
	 *
	 * @return the email template local service
	 */
	public com.liferay.famocom.erpcloud.service.EmailTemplateLocalService getEmailTemplateLocalService() {
		return emailTemplateLocalService;
	}

	/**
	 * Sets the email template local service.
	 *
	 * @param emailTemplateLocalService the email template local service
	 */
	public void setEmailTemplateLocalService(
		com.liferay.famocom.erpcloud.service.EmailTemplateLocalService emailTemplateLocalService) {
		this.emailTemplateLocalService = emailTemplateLocalService;
	}

	/**
	 * Returns the email template persistence.
	 *
	 * @return the email template persistence
	 */
	public EmailTemplatePersistence getEmailTemplatePersistence() {
		return emailTemplatePersistence;
	}

	/**
	 * Sets the email template persistence.
	 *
	 * @param emailTemplatePersistence the email template persistence
	 */
	public void setEmailTemplatePersistence(
		EmailTemplatePersistence emailTemplatePersistence) {
		this.emailTemplatePersistence = emailTemplatePersistence;
	}

	/**
	 * Returns the employee local service.
	 *
	 * @return the employee local service
	 */
	public com.liferay.famocom.erpcloud.service.EmployeeLocalService getEmployeeLocalService() {
		return employeeLocalService;
	}

	/**
	 * Sets the employee local service.
	 *
	 * @param employeeLocalService the employee local service
	 */
	public void setEmployeeLocalService(
		com.liferay.famocom.erpcloud.service.EmployeeLocalService employeeLocalService) {
		this.employeeLocalService = employeeLocalService;
	}

	/**
	 * Returns the employee persistence.
	 *
	 * @return the employee persistence
	 */
	public EmployeePersistence getEmployeePersistence() {
		return employeePersistence;
	}

	/**
	 * Sets the employee persistence.
	 *
	 * @param employeePersistence the employee persistence
	 */
	public void setEmployeePersistence(EmployeePersistence employeePersistence) {
		this.employeePersistence = employeePersistence;
	}

	/**
	 * Returns the employee type local service.
	 *
	 * @return the employee type local service
	 */
	public com.liferay.famocom.erpcloud.service.EmployeeTypeLocalService getEmployeeTypeLocalService() {
		return employeeTypeLocalService;
	}

	/**
	 * Sets the employee type local service.
	 *
	 * @param employeeTypeLocalService the employee type local service
	 */
	public void setEmployeeTypeLocalService(
		com.liferay.famocom.erpcloud.service.EmployeeTypeLocalService employeeTypeLocalService) {
		this.employeeTypeLocalService = employeeTypeLocalService;
	}

	/**
	 * Returns the employee type persistence.
	 *
	 * @return the employee type persistence
	 */
	public EmployeeTypePersistence getEmployeeTypePersistence() {
		return employeeTypePersistence;
	}

	/**
	 * Sets the employee type persistence.
	 *
	 * @param employeeTypePersistence the employee type persistence
	 */
	public void setEmployeeTypePersistence(
		EmployeeTypePersistence employeeTypePersistence) {
		this.employeeTypePersistence = employeeTypePersistence;
	}

	/**
	 * Returns the goal details local service.
	 *
	 * @return the goal details local service
	 */
	public com.liferay.famocom.erpcloud.service.GoalDetailsLocalService getGoalDetailsLocalService() {
		return goalDetailsLocalService;
	}

	/**
	 * Sets the goal details local service.
	 *
	 * @param goalDetailsLocalService the goal details local service
	 */
	public void setGoalDetailsLocalService(
		com.liferay.famocom.erpcloud.service.GoalDetailsLocalService goalDetailsLocalService) {
		this.goalDetailsLocalService = goalDetailsLocalService;
	}

	/**
	 * Returns the goal details persistence.
	 *
	 * @return the goal details persistence
	 */
	public GoalDetailsPersistence getGoalDetailsPersistence() {
		return goalDetailsPersistence;
	}

	/**
	 * Sets the goal details persistence.
	 *
	 * @param goalDetailsPersistence the goal details persistence
	 */
	public void setGoalDetailsPersistence(
		GoalDetailsPersistence goalDetailsPersistence) {
		this.goalDetailsPersistence = goalDetailsPersistence;
	}

	/**
	 * Returns the goal master local service.
	 *
	 * @return the goal master local service
	 */
	public com.liferay.famocom.erpcloud.service.GoalMasterLocalService getGoalMasterLocalService() {
		return goalMasterLocalService;
	}

	/**
	 * Sets the goal master local service.
	 *
	 * @param goalMasterLocalService the goal master local service
	 */
	public void setGoalMasterLocalService(
		com.liferay.famocom.erpcloud.service.GoalMasterLocalService goalMasterLocalService) {
		this.goalMasterLocalService = goalMasterLocalService;
	}

	/**
	 * Returns the goal master persistence.
	 *
	 * @return the goal master persistence
	 */
	public GoalMasterPersistence getGoalMasterPersistence() {
		return goalMasterPersistence;
	}

	/**
	 * Sets the goal master persistence.
	 *
	 * @param goalMasterPersistence the goal master persistence
	 */
	public void setGoalMasterPersistence(
		GoalMasterPersistence goalMasterPersistence) {
		this.goalMasterPersistence = goalMasterPersistence;
	}

	/**
	 * Returns the holiday calender management local service.
	 *
	 * @return the holiday calender management local service
	 */
	public com.liferay.famocom.erpcloud.service.HolidayCalenderManagementLocalService getHolidayCalenderManagementLocalService() {
		return holidayCalenderManagementLocalService;
	}

	/**
	 * Sets the holiday calender management local service.
	 *
	 * @param holidayCalenderManagementLocalService the holiday calender management local service
	 */
	public void setHolidayCalenderManagementLocalService(
		com.liferay.famocom.erpcloud.service.HolidayCalenderManagementLocalService holidayCalenderManagementLocalService) {
		this.holidayCalenderManagementLocalService = holidayCalenderManagementLocalService;
	}

	/**
	 * Returns the holiday calender management persistence.
	 *
	 * @return the holiday calender management persistence
	 */
	public HolidayCalenderManagementPersistence getHolidayCalenderManagementPersistence() {
		return holidayCalenderManagementPersistence;
	}

	/**
	 * Sets the holiday calender management persistence.
	 *
	 * @param holidayCalenderManagementPersistence the holiday calender management persistence
	 */
	public void setHolidayCalenderManagementPersistence(
		HolidayCalenderManagementPersistence holidayCalenderManagementPersistence) {
		this.holidayCalenderManagementPersistence = holidayCalenderManagementPersistence;
	}

	/**
	 * Returns the leave apply local service.
	 *
	 * @return the leave apply local service
	 */
	public com.liferay.famocom.erpcloud.service.LeaveApplyLocalService getLeaveApplyLocalService() {
		return leaveApplyLocalService;
	}

	/**
	 * Sets the leave apply local service.
	 *
	 * @param leaveApplyLocalService the leave apply local service
	 */
	public void setLeaveApplyLocalService(
		com.liferay.famocom.erpcloud.service.LeaveApplyLocalService leaveApplyLocalService) {
		this.leaveApplyLocalService = leaveApplyLocalService;
	}

	/**
	 * Returns the leave apply persistence.
	 *
	 * @return the leave apply persistence
	 */
	public LeaveApplyPersistence getLeaveApplyPersistence() {
		return leaveApplyPersistence;
	}

	/**
	 * Sets the leave apply persistence.
	 *
	 * @param leaveApplyPersistence the leave apply persistence
	 */
	public void setLeaveApplyPersistence(
		LeaveApplyPersistence leaveApplyPersistence) {
		this.leaveApplyPersistence = leaveApplyPersistence;
	}

	/**
	 * Returns the leave apply dtl local service.
	 *
	 * @return the leave apply dtl local service
	 */
	public com.liferay.famocom.erpcloud.service.LeaveApplyDtlLocalService getLeaveApplyDtlLocalService() {
		return leaveApplyDtlLocalService;
	}

	/**
	 * Sets the leave apply dtl local service.
	 *
	 * @param leaveApplyDtlLocalService the leave apply dtl local service
	 */
	public void setLeaveApplyDtlLocalService(
		com.liferay.famocom.erpcloud.service.LeaveApplyDtlLocalService leaveApplyDtlLocalService) {
		this.leaveApplyDtlLocalService = leaveApplyDtlLocalService;
	}

	/**
	 * Returns the leave apply dtl persistence.
	 *
	 * @return the leave apply dtl persistence
	 */
	public LeaveApplyDtlPersistence getLeaveApplyDtlPersistence() {
		return leaveApplyDtlPersistence;
	}

	/**
	 * Sets the leave apply dtl persistence.
	 *
	 * @param leaveApplyDtlPersistence the leave apply dtl persistence
	 */
	public void setLeaveApplyDtlPersistence(
		LeaveApplyDtlPersistence leaveApplyDtlPersistence) {
		this.leaveApplyDtlPersistence = leaveApplyDtlPersistence;
	}

	/**
	 * Returns the leave management local service.
	 *
	 * @return the leave management local service
	 */
	public com.liferay.famocom.erpcloud.service.LeaveManagementLocalService getLeaveManagementLocalService() {
		return leaveManagementLocalService;
	}

	/**
	 * Sets the leave management local service.
	 *
	 * @param leaveManagementLocalService the leave management local service
	 */
	public void setLeaveManagementLocalService(
		com.liferay.famocom.erpcloud.service.LeaveManagementLocalService leaveManagementLocalService) {
		this.leaveManagementLocalService = leaveManagementLocalService;
	}

	/**
	 * Returns the leave management persistence.
	 *
	 * @return the leave management persistence
	 */
	public LeaveManagementPersistence getLeaveManagementPersistence() {
		return leaveManagementPersistence;
	}

	/**
	 * Sets the leave management persistence.
	 *
	 * @param leaveManagementPersistence the leave management persistence
	 */
	public void setLeaveManagementPersistence(
		LeaveManagementPersistence leaveManagementPersistence) {
		this.leaveManagementPersistence = leaveManagementPersistence;
	}

	/**
	 * Returns the leave ob local service.
	 *
	 * @return the leave ob local service
	 */
	public com.liferay.famocom.erpcloud.service.LeaveObLocalService getLeaveObLocalService() {
		return leaveObLocalService;
	}

	/**
	 * Sets the leave ob local service.
	 *
	 * @param leaveObLocalService the leave ob local service
	 */
	public void setLeaveObLocalService(
		com.liferay.famocom.erpcloud.service.LeaveObLocalService leaveObLocalService) {
		this.leaveObLocalService = leaveObLocalService;
	}

	/**
	 * Returns the leave ob persistence.
	 *
	 * @return the leave ob persistence
	 */
	public LeaveObPersistence getLeaveObPersistence() {
		return leaveObPersistence;
	}

	/**
	 * Sets the leave ob persistence.
	 *
	 * @param leaveObPersistence the leave ob persistence
	 */
	public void setLeaveObPersistence(LeaveObPersistence leaveObPersistence) {
		this.leaveObPersistence = leaveObPersistence;
	}

	/**
	 * Returns the performance master local service.
	 *
	 * @return the performance master local service
	 */
	public com.liferay.famocom.erpcloud.service.PerformanceMasterLocalService getPerformanceMasterLocalService() {
		return performanceMasterLocalService;
	}

	/**
	 * Sets the performance master local service.
	 *
	 * @param performanceMasterLocalService the performance master local service
	 */
	public void setPerformanceMasterLocalService(
		com.liferay.famocom.erpcloud.service.PerformanceMasterLocalService performanceMasterLocalService) {
		this.performanceMasterLocalService = performanceMasterLocalService;
	}

	/**
	 * Returns the performance master persistence.
	 *
	 * @return the performance master persistence
	 */
	public PerformanceMasterPersistence getPerformanceMasterPersistence() {
		return performanceMasterPersistence;
	}

	/**
	 * Sets the performance master persistence.
	 *
	 * @param performanceMasterPersistence the performance master persistence
	 */
	public void setPerformanceMasterPersistence(
		PerformanceMasterPersistence performanceMasterPersistence) {
		this.performanceMasterPersistence = performanceMasterPersistence;
	}

	/**
	 * Returns the project master local service.
	 *
	 * @return the project master local service
	 */
	public com.liferay.famocom.erpcloud.service.ProjectMasterLocalService getProjectMasterLocalService() {
		return projectMasterLocalService;
	}

	/**
	 * Sets the project master local service.
	 *
	 * @param projectMasterLocalService the project master local service
	 */
	public void setProjectMasterLocalService(
		com.liferay.famocom.erpcloud.service.ProjectMasterLocalService projectMasterLocalService) {
		this.projectMasterLocalService = projectMasterLocalService;
	}

	/**
	 * Returns the project master persistence.
	 *
	 * @return the project master persistence
	 */
	public ProjectMasterPersistence getProjectMasterPersistence() {
		return projectMasterPersistence;
	}

	/**
	 * Sets the project master persistence.
	 *
	 * @param projectMasterPersistence the project master persistence
	 */
	public void setProjectMasterPersistence(
		ProjectMasterPersistence projectMasterPersistence) {
		this.projectMasterPersistence = projectMasterPersistence;
	}

	/**
	 * Returns the project report local service.
	 *
	 * @return the project report local service
	 */
	public ProjectReportLocalService getProjectReportLocalService() {
		return projectReportLocalService;
	}

	/**
	 * Sets the project report local service.
	 *
	 * @param projectReportLocalService the project report local service
	 */
	public void setProjectReportLocalService(
		ProjectReportLocalService projectReportLocalService) {
		this.projectReportLocalService = projectReportLocalService;
	}

	/**
	 * Returns the project report persistence.
	 *
	 * @return the project report persistence
	 */
	public ProjectReportPersistence getProjectReportPersistence() {
		return projectReportPersistence;
	}

	/**
	 * Sets the project report persistence.
	 *
	 * @param projectReportPersistence the project report persistence
	 */
	public void setProjectReportPersistence(
		ProjectReportPersistence projectReportPersistence) {
		this.projectReportPersistence = projectReportPersistence;
	}

	/**
	 * Returns the project role local service.
	 *
	 * @return the project role local service
	 */
	public com.liferay.famocom.erpcloud.service.ProjectRoleLocalService getProjectRoleLocalService() {
		return projectRoleLocalService;
	}

	/**
	 * Sets the project role local service.
	 *
	 * @param projectRoleLocalService the project role local service
	 */
	public void setProjectRoleLocalService(
		com.liferay.famocom.erpcloud.service.ProjectRoleLocalService projectRoleLocalService) {
		this.projectRoleLocalService = projectRoleLocalService;
	}

	/**
	 * Returns the project role persistence.
	 *
	 * @return the project role persistence
	 */
	public ProjectRolePersistence getProjectRolePersistence() {
		return projectRolePersistence;
	}

	/**
	 * Sets the project role persistence.
	 *
	 * @param projectRolePersistence the project role persistence
	 */
	public void setProjectRolePersistence(
		ProjectRolePersistence projectRolePersistence) {
		this.projectRolePersistence = projectRolePersistence;
	}

	/**
	 * Returns the project status local service.
	 *
	 * @return the project status local service
	 */
	public com.liferay.famocom.erpcloud.service.ProjectStatusLocalService getProjectStatusLocalService() {
		return projectStatusLocalService;
	}

	/**
	 * Sets the project status local service.
	 *
	 * @param projectStatusLocalService the project status local service
	 */
	public void setProjectStatusLocalService(
		com.liferay.famocom.erpcloud.service.ProjectStatusLocalService projectStatusLocalService) {
		this.projectStatusLocalService = projectStatusLocalService;
	}

	/**
	 * Returns the project status persistence.
	 *
	 * @return the project status persistence
	 */
	public ProjectStatusPersistence getProjectStatusPersistence() {
		return projectStatusPersistence;
	}

	/**
	 * Sets the project status persistence.
	 *
	 * @param projectStatusPersistence the project status persistence
	 */
	public void setProjectStatusPersistence(
		ProjectStatusPersistence projectStatusPersistence) {
		this.projectStatusPersistence = projectStatusPersistence;
	}

	/**
	 * Returns the rating master local service.
	 *
	 * @return the rating master local service
	 */
	public com.liferay.famocom.erpcloud.service.RatingMasterLocalService getRatingMasterLocalService() {
		return ratingMasterLocalService;
	}

	/**
	 * Sets the rating master local service.
	 *
	 * @param ratingMasterLocalService the rating master local service
	 */
	public void setRatingMasterLocalService(
		com.liferay.famocom.erpcloud.service.RatingMasterLocalService ratingMasterLocalService) {
		this.ratingMasterLocalService = ratingMasterLocalService;
	}

	/**
	 * Returns the rating master persistence.
	 *
	 * @return the rating master persistence
	 */
	public RatingMasterPersistence getRatingMasterPersistence() {
		return ratingMasterPersistence;
	}

	/**
	 * Sets the rating master persistence.
	 *
	 * @param ratingMasterPersistence the rating master persistence
	 */
	public void setRatingMasterPersistence(
		RatingMasterPersistence ratingMasterPersistence) {
		this.ratingMasterPersistence = ratingMasterPersistence;
	}

	/**
	 * Returns the schedules master local service.
	 *
	 * @return the schedules master local service
	 */
	public com.liferay.famocom.erpcloud.service.SchedulesMasterLocalService getSchedulesMasterLocalService() {
		return schedulesMasterLocalService;
	}

	/**
	 * Sets the schedules master local service.
	 *
	 * @param schedulesMasterLocalService the schedules master local service
	 */
	public void setSchedulesMasterLocalService(
		com.liferay.famocom.erpcloud.service.SchedulesMasterLocalService schedulesMasterLocalService) {
		this.schedulesMasterLocalService = schedulesMasterLocalService;
	}

	/**
	 * Returns the schedules master persistence.
	 *
	 * @return the schedules master persistence
	 */
	public SchedulesMasterPersistence getSchedulesMasterPersistence() {
		return schedulesMasterPersistence;
	}

	/**
	 * Sets the schedules master persistence.
	 *
	 * @param schedulesMasterPersistence the schedules master persistence
	 */
	public void setSchedulesMasterPersistence(
		SchedulesMasterPersistence schedulesMasterPersistence) {
		this.schedulesMasterPersistence = schedulesMasterPersistence;
	}

	/**
	 * Returns the time sheet entry local service.
	 *
	 * @return the time sheet entry local service
	 */
	public com.liferay.famocom.erpcloud.service.TimeSheetEntryLocalService getTimeSheetEntryLocalService() {
		return timeSheetEntryLocalService;
	}

	/**
	 * Sets the time sheet entry local service.
	 *
	 * @param timeSheetEntryLocalService the time sheet entry local service
	 */
	public void setTimeSheetEntryLocalService(
		com.liferay.famocom.erpcloud.service.TimeSheetEntryLocalService timeSheetEntryLocalService) {
		this.timeSheetEntryLocalService = timeSheetEntryLocalService;
	}

	/**
	 * Returns the time sheet entry persistence.
	 *
	 * @return the time sheet entry persistence
	 */
	public TimeSheetEntryPersistence getTimeSheetEntryPersistence() {
		return timeSheetEntryPersistence;
	}

	/**
	 * Sets the time sheet entry persistence.
	 *
	 * @param timeSheetEntryPersistence the time sheet entry persistence
	 */
	public void setTimeSheetEntryPersistence(
		TimeSheetEntryPersistence timeSheetEntryPersistence) {
		this.timeSheetEntryPersistence = timeSheetEntryPersistence;
	}

	/**
	 * Returns the works schedules local service.
	 *
	 * @return the works schedules local service
	 */
	public com.liferay.famocom.erpcloud.service.WorksSchedulesLocalService getWorksSchedulesLocalService() {
		return worksSchedulesLocalService;
	}

	/**
	 * Sets the works schedules local service.
	 *
	 * @param worksSchedulesLocalService the works schedules local service
	 */
	public void setWorksSchedulesLocalService(
		com.liferay.famocom.erpcloud.service.WorksSchedulesLocalService worksSchedulesLocalService) {
		this.worksSchedulesLocalService = worksSchedulesLocalService;
	}

	/**
	 * Returns the works schedules persistence.
	 *
	 * @return the works schedules persistence
	 */
	public WorksSchedulesPersistence getWorksSchedulesPersistence() {
		return worksSchedulesPersistence;
	}

	/**
	 * Sets the works schedules persistence.
	 *
	 * @param worksSchedulesPersistence the works schedules persistence
	 */
	public void setWorksSchedulesPersistence(
		WorksSchedulesPersistence worksSchedulesPersistence) {
		this.worksSchedulesPersistence = worksSchedulesPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("com.liferay.famocom.erpcloud.model.ProjectReport",
			projectReportLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"com.liferay.famocom.erpcloud.model.ProjectReport");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return ProjectReportLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return ProjectReport.class;
	}

	protected String getModelClassName() {
		return ProjectReport.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = projectReportPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.famocom.erpcloud.service.AddTeamMemberLocalService.class)
	protected com.liferay.famocom.erpcloud.service.AddTeamMemberLocalService addTeamMemberLocalService;
	@BeanReference(type = AddTeamMemberPersistence.class)
	protected AddTeamMemberPersistence addTeamMemberPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.AttendanceLocalService.class)
	protected com.liferay.famocom.erpcloud.service.AttendanceLocalService attendanceLocalService;
	@BeanReference(type = AttendancePersistence.class)
	protected AttendancePersistence attendancePersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.EmailTemplateLocalService.class)
	protected com.liferay.famocom.erpcloud.service.EmailTemplateLocalService emailTemplateLocalService;
	@BeanReference(type = EmailTemplatePersistence.class)
	protected EmailTemplatePersistence emailTemplatePersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.EmployeeLocalService.class)
	protected com.liferay.famocom.erpcloud.service.EmployeeLocalService employeeLocalService;
	@BeanReference(type = EmployeePersistence.class)
	protected EmployeePersistence employeePersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.EmployeeTypeLocalService.class)
	protected com.liferay.famocom.erpcloud.service.EmployeeTypeLocalService employeeTypeLocalService;
	@BeanReference(type = EmployeeTypePersistence.class)
	protected EmployeeTypePersistence employeeTypePersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.GoalDetailsLocalService.class)
	protected com.liferay.famocom.erpcloud.service.GoalDetailsLocalService goalDetailsLocalService;
	@BeanReference(type = GoalDetailsPersistence.class)
	protected GoalDetailsPersistence goalDetailsPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.GoalMasterLocalService.class)
	protected com.liferay.famocom.erpcloud.service.GoalMasterLocalService goalMasterLocalService;
	@BeanReference(type = GoalMasterPersistence.class)
	protected GoalMasterPersistence goalMasterPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.HolidayCalenderManagementLocalService.class)
	protected com.liferay.famocom.erpcloud.service.HolidayCalenderManagementLocalService holidayCalenderManagementLocalService;
	@BeanReference(type = HolidayCalenderManagementPersistence.class)
	protected HolidayCalenderManagementPersistence holidayCalenderManagementPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.LeaveApplyLocalService.class)
	protected com.liferay.famocom.erpcloud.service.LeaveApplyLocalService leaveApplyLocalService;
	@BeanReference(type = LeaveApplyPersistence.class)
	protected LeaveApplyPersistence leaveApplyPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.LeaveApplyDtlLocalService.class)
	protected com.liferay.famocom.erpcloud.service.LeaveApplyDtlLocalService leaveApplyDtlLocalService;
	@BeanReference(type = LeaveApplyDtlPersistence.class)
	protected LeaveApplyDtlPersistence leaveApplyDtlPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.LeaveManagementLocalService.class)
	protected com.liferay.famocom.erpcloud.service.LeaveManagementLocalService leaveManagementLocalService;
	@BeanReference(type = LeaveManagementPersistence.class)
	protected LeaveManagementPersistence leaveManagementPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.LeaveObLocalService.class)
	protected com.liferay.famocom.erpcloud.service.LeaveObLocalService leaveObLocalService;
	@BeanReference(type = LeaveObPersistence.class)
	protected LeaveObPersistence leaveObPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.PerformanceMasterLocalService.class)
	protected com.liferay.famocom.erpcloud.service.PerformanceMasterLocalService performanceMasterLocalService;
	@BeanReference(type = PerformanceMasterPersistence.class)
	protected PerformanceMasterPersistence performanceMasterPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.ProjectMasterLocalService.class)
	protected com.liferay.famocom.erpcloud.service.ProjectMasterLocalService projectMasterLocalService;
	@BeanReference(type = ProjectMasterPersistence.class)
	protected ProjectMasterPersistence projectMasterPersistence;
	@BeanReference(type = ProjectReportLocalService.class)
	protected ProjectReportLocalService projectReportLocalService;
	@BeanReference(type = ProjectReportPersistence.class)
	protected ProjectReportPersistence projectReportPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.ProjectRoleLocalService.class)
	protected com.liferay.famocom.erpcloud.service.ProjectRoleLocalService projectRoleLocalService;
	@BeanReference(type = ProjectRolePersistence.class)
	protected ProjectRolePersistence projectRolePersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.ProjectStatusLocalService.class)
	protected com.liferay.famocom.erpcloud.service.ProjectStatusLocalService projectStatusLocalService;
	@BeanReference(type = ProjectStatusPersistence.class)
	protected ProjectStatusPersistence projectStatusPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.RatingMasterLocalService.class)
	protected com.liferay.famocom.erpcloud.service.RatingMasterLocalService ratingMasterLocalService;
	@BeanReference(type = RatingMasterPersistence.class)
	protected RatingMasterPersistence ratingMasterPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.SchedulesMasterLocalService.class)
	protected com.liferay.famocom.erpcloud.service.SchedulesMasterLocalService schedulesMasterLocalService;
	@BeanReference(type = SchedulesMasterPersistence.class)
	protected SchedulesMasterPersistence schedulesMasterPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.TimeSheetEntryLocalService.class)
	protected com.liferay.famocom.erpcloud.service.TimeSheetEntryLocalService timeSheetEntryLocalService;
	@BeanReference(type = TimeSheetEntryPersistence.class)
	protected TimeSheetEntryPersistence timeSheetEntryPersistence;
	@BeanReference(type = com.liferay.famocom.erpcloud.service.WorksSchedulesLocalService.class)
	protected com.liferay.famocom.erpcloud.service.WorksSchedulesLocalService worksSchedulesLocalService;
	@BeanReference(type = WorksSchedulesPersistence.class)
	protected WorksSchedulesPersistence worksSchedulesPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}