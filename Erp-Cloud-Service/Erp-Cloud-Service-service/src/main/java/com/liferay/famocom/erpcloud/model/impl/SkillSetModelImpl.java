/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.SkillSet;
import com.liferay.famocom.erpcloud.model.SkillSetModel;
import com.liferay.famocom.erpcloud.model.SkillSetSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SkillSet service. Represents a row in the &quot;SkillSet&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SkillSetModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SkillSetImpl}.
 * </p>
 *
 * @author Samaresh
 * @see SkillSetImpl
 * @see SkillSet
 * @see SkillSetModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SkillSetModelImpl extends BaseModelImpl<SkillSet>
	implements SkillSetModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a skill set model instance should use the {@link SkillSet} interface instead.
	 */
	public static final String TABLE_NAME = "SkillSet";
	public static final Object[][] TABLE_COLUMNS = {
			{ "SkillId", Types.BIGINT },
			{ "SkillName", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("SkillId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("SkillName", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table SkillSet (SkillId LONG not null primary key,SkillName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SkillSet";
	public static final String ORDER_BY_JPQL = " ORDER BY skillSet.SkillId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SkillSet.SkillId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.SkillSet"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.SkillSet"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SkillSet toModel(SkillSetSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SkillSet model = new SkillSetImpl();

		model.setSkillId(soapModel.getSkillId());
		model.setSkillName(soapModel.getSkillName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SkillSet> toModels(SkillSetSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SkillSet> models = new ArrayList<SkillSet>(soapModels.length);

		for (SkillSetSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.SkillSet"));

	public SkillSetModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _SkillId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSkillId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _SkillId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SkillSet.class;
	}

	@Override
	public String getModelClassName() {
		return SkillSet.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("SkillId", getSkillId());
		attributes.put("SkillName", getSkillName());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long SkillId = (Long)attributes.get("SkillId");

		if (SkillId != null) {
			setSkillId(SkillId);
		}

		String SkillName = (String)attributes.get("SkillName");

		if (SkillName != null) {
			setSkillName(SkillName);
		}
	}

	@JSON
	@Override
	public long getSkillId() {
		return _SkillId;
	}

	@Override
	public void setSkillId(long SkillId) {
		_SkillId = SkillId;
	}

	@JSON
	@Override
	public String getSkillName() {
		if (_SkillName == null) {
			return "";
		}
		else {
			return _SkillName;
		}
	}

	@Override
	public void setSkillName(String SkillName) {
		_SkillName = SkillName;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SkillSet.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SkillSet toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SkillSet)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SkillSetImpl skillSetImpl = new SkillSetImpl();

		skillSetImpl.setSkillId(getSkillId());
		skillSetImpl.setSkillName(getSkillName());

		skillSetImpl.resetOriginalValues();

		return skillSetImpl;
	}

	@Override
	public int compareTo(SkillSet skillSet) {
		long primaryKey = skillSet.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SkillSet)) {
			return false;
		}

		SkillSet skillSet = (SkillSet)obj;

		long primaryKey = skillSet.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SkillSet> toCacheModel() {
		SkillSetCacheModel skillSetCacheModel = new SkillSetCacheModel();

		skillSetCacheModel.SkillId = getSkillId();

		skillSetCacheModel.SkillName = getSkillName();

		String SkillName = skillSetCacheModel.SkillName;

		if ((SkillName != null) && (SkillName.length() == 0)) {
			skillSetCacheModel.SkillName = null;
		}

		return skillSetCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{SkillId=");
		sb.append(getSkillId());
		sb.append(", SkillName=");
		sb.append(getSkillName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.SkillSet");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>SkillId</column-name><column-value><![CDATA[");
		sb.append(getSkillId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SkillName</column-name><column-value><![CDATA[");
		sb.append(getSkillName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SkillSet.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SkillSet.class, ModelWrapper.class
		};
	private long _SkillId;
	private String _SkillName;
	private SkillSet _escapedModel;
}