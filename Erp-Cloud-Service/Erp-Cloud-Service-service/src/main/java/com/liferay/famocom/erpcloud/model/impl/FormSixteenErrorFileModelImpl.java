/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.FormSixteenErrorFile;
import com.liferay.famocom.erpcloud.model.FormSixteenErrorFileModel;
import com.liferay.famocom.erpcloud.model.FormSixteenErrorFileSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the FormSixteenErrorFile service. Represents a row in the &quot;FormSixteenErrorFile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link FormSixteenErrorFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FormSixteenErrorFileImpl}.
 * </p>
 *
 * @author Samaresh
 * @see FormSixteenErrorFileImpl
 * @see FormSixteenErrorFile
 * @see FormSixteenErrorFileModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class FormSixteenErrorFileModelImpl extends BaseModelImpl<FormSixteenErrorFile>
	implements FormSixteenErrorFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a form sixteen error file model instance should use the {@link FormSixteenErrorFile} interface instead.
	 */
	public static final String TABLE_NAME = "FormSixteenErrorFile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "errorId", Types.BIGINT },
			{ "fileName", Types.VARCHAR },
			{ "errorMsg", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("errorId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fileName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("errorMsg", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table FormSixteenErrorFile (errorId LONG not null primary key,fileName VARCHAR(75) null,errorMsg VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table FormSixteenErrorFile";
	public static final String ORDER_BY_JPQL = " ORDER BY formSixteenErrorFile.errorId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY FormSixteenErrorFile.errorId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.FormSixteenErrorFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.FormSixteenErrorFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FormSixteenErrorFile toModel(
		FormSixteenErrorFileSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		FormSixteenErrorFile model = new FormSixteenErrorFileImpl();

		model.setErrorId(soapModel.getErrorId());
		model.setFileName(soapModel.getFileName());
		model.setErrorMsg(soapModel.getErrorMsg());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FormSixteenErrorFile> toModels(
		FormSixteenErrorFileSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<FormSixteenErrorFile> models = new ArrayList<FormSixteenErrorFile>(soapModels.length);

		for (FormSixteenErrorFileSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.FormSixteenErrorFile"));

	public FormSixteenErrorFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _errorId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setErrorId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _errorId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FormSixteenErrorFile.class;
	}

	@Override
	public String getModelClassName() {
		return FormSixteenErrorFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("errorId", getErrorId());
		attributes.put("fileName", getFileName());
		attributes.put("errorMsg", getErrorMsg());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long errorId = (Long)attributes.get("errorId");

		if (errorId != null) {
			setErrorId(errorId);
		}

		String fileName = (String)attributes.get("fileName");

		if (fileName != null) {
			setFileName(fileName);
		}

		String errorMsg = (String)attributes.get("errorMsg");

		if (errorMsg != null) {
			setErrorMsg(errorMsg);
		}
	}

	@JSON
	@Override
	public long getErrorId() {
		return _errorId;
	}

	@Override
	public void setErrorId(long errorId) {
		_errorId = errorId;
	}

	@JSON
	@Override
	public String getFileName() {
		if (_fileName == null) {
			return "";
		}
		else {
			return _fileName;
		}
	}

	@Override
	public void setFileName(String fileName) {
		_fileName = fileName;
	}

	@JSON
	@Override
	public String getErrorMsg() {
		if (_errorMsg == null) {
			return "";
		}
		else {
			return _errorMsg;
		}
	}

	@Override
	public void setErrorMsg(String errorMsg) {
		_errorMsg = errorMsg;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FormSixteenErrorFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FormSixteenErrorFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FormSixteenErrorFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FormSixteenErrorFileImpl formSixteenErrorFileImpl = new FormSixteenErrorFileImpl();

		formSixteenErrorFileImpl.setErrorId(getErrorId());
		formSixteenErrorFileImpl.setFileName(getFileName());
		formSixteenErrorFileImpl.setErrorMsg(getErrorMsg());

		formSixteenErrorFileImpl.resetOriginalValues();

		return formSixteenErrorFileImpl;
	}

	@Override
	public int compareTo(FormSixteenErrorFile formSixteenErrorFile) {
		long primaryKey = formSixteenErrorFile.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FormSixteenErrorFile)) {
			return false;
		}

		FormSixteenErrorFile formSixteenErrorFile = (FormSixteenErrorFile)obj;

		long primaryKey = formSixteenErrorFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<FormSixteenErrorFile> toCacheModel() {
		FormSixteenErrorFileCacheModel formSixteenErrorFileCacheModel = new FormSixteenErrorFileCacheModel();

		formSixteenErrorFileCacheModel.errorId = getErrorId();

		formSixteenErrorFileCacheModel.fileName = getFileName();

		String fileName = formSixteenErrorFileCacheModel.fileName;

		if ((fileName != null) && (fileName.length() == 0)) {
			formSixteenErrorFileCacheModel.fileName = null;
		}

		formSixteenErrorFileCacheModel.errorMsg = getErrorMsg();

		String errorMsg = formSixteenErrorFileCacheModel.errorMsg;

		if ((errorMsg != null) && (errorMsg.length() == 0)) {
			formSixteenErrorFileCacheModel.errorMsg = null;
		}

		return formSixteenErrorFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{errorId=");
		sb.append(getErrorId());
		sb.append(", fileName=");
		sb.append(getFileName());
		sb.append(", errorMsg=");
		sb.append(getErrorMsg());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.FormSixteenErrorFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>errorId</column-name><column-value><![CDATA[");
		sb.append(getErrorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileName</column-name><column-value><![CDATA[");
		sb.append(getFileName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorMsg</column-name><column-value><![CDATA[");
		sb.append(getErrorMsg());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = FormSixteenErrorFile.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			FormSixteenErrorFile.class, ModelWrapper.class
		};
	private long _errorId;
	private String _fileName;
	private String _errorMsg;
	private FormSixteenErrorFile _escapedModel;
}