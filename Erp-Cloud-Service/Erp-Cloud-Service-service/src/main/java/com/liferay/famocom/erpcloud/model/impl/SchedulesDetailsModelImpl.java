/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.SchedulesDetails;
import com.liferay.famocom.erpcloud.model.SchedulesDetailsModel;
import com.liferay.famocom.erpcloud.model.SchedulesDetailsSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SchedulesDetails service. Represents a row in the &quot;SchedulesDetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SchedulesDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SchedulesDetailsImpl}.
 * </p>
 *
 * @author Samaresh
 * @see SchedulesDetailsImpl
 * @see SchedulesDetails
 * @see SchedulesDetailsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SchedulesDetailsModelImpl extends BaseModelImpl<SchedulesDetails>
	implements SchedulesDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a schedules details model instance should use the {@link SchedulesDetails} interface instead.
	 */
	public static final String TABLE_NAME = "SchedulesDetails";
	public static final Object[][] TABLE_COLUMNS = {
			{ "schedulesDetailsId", Types.BIGINT },
			{ "schedulesDate", Types.TIMESTAMP },
			{ "worksSchedulesId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "companyId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("schedulesDetailsId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("schedulesDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("worksSchedulesId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table SchedulesDetails (schedulesDetailsId LONG not null primary key,schedulesDate DATE null,worksSchedulesId LONG,employeeId LONG,companyId LONG)";
	public static final String TABLE_SQL_DROP = "drop table SchedulesDetails";
	public static final String ORDER_BY_JPQL = " ORDER BY schedulesDetails.schedulesDetailsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SchedulesDetails.schedulesDetailsId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.SchedulesDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.SchedulesDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.SchedulesDetails"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long EMPLOYEEID_COLUMN_BITMASK = 2L;
	public static final long SCHEDULESDATE_COLUMN_BITMASK = 4L;
	public static final long WORKSSCHEDULESID_COLUMN_BITMASK = 8L;
	public static final long SCHEDULESDETAILSID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SchedulesDetails toModel(SchedulesDetailsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SchedulesDetails model = new SchedulesDetailsImpl();

		model.setSchedulesDetailsId(soapModel.getSchedulesDetailsId());
		model.setSchedulesDate(soapModel.getSchedulesDate());
		model.setWorksSchedulesId(soapModel.getWorksSchedulesId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setCompanyId(soapModel.getCompanyId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SchedulesDetails> toModels(
		SchedulesDetailsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SchedulesDetails> models = new ArrayList<SchedulesDetails>(soapModels.length);

		for (SchedulesDetailsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.SchedulesDetails"));

	public SchedulesDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _schedulesDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSchedulesDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _schedulesDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SchedulesDetails.class;
	}

	@Override
	public String getModelClassName() {
		return SchedulesDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("schedulesDetailsId", getSchedulesDetailsId());
		attributes.put("schedulesDate", getSchedulesDate());
		attributes.put("worksSchedulesId", getWorksSchedulesId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("companyId", getCompanyId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long schedulesDetailsId = (Long)attributes.get("schedulesDetailsId");

		if (schedulesDetailsId != null) {
			setSchedulesDetailsId(schedulesDetailsId);
		}

		Date schedulesDate = (Date)attributes.get("schedulesDate");

		if (schedulesDate != null) {
			setSchedulesDate(schedulesDate);
		}

		Long worksSchedulesId = (Long)attributes.get("worksSchedulesId");

		if (worksSchedulesId != null) {
			setWorksSchedulesId(worksSchedulesId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}
	}

	@JSON
	@Override
	public long getSchedulesDetailsId() {
		return _schedulesDetailsId;
	}

	@Override
	public void setSchedulesDetailsId(long schedulesDetailsId) {
		_schedulesDetailsId = schedulesDetailsId;
	}

	@JSON
	@Override
	public Date getSchedulesDate() {
		return _schedulesDate;
	}

	@Override
	public void setSchedulesDate(Date schedulesDate) {
		_columnBitmask |= SCHEDULESDATE_COLUMN_BITMASK;

		if (_originalSchedulesDate == null) {
			_originalSchedulesDate = _schedulesDate;
		}

		_schedulesDate = schedulesDate;
	}

	public Date getOriginalSchedulesDate() {
		return _originalSchedulesDate;
	}

	@JSON
	@Override
	public long getWorksSchedulesId() {
		return _worksSchedulesId;
	}

	@Override
	public void setWorksSchedulesId(long worksSchedulesId) {
		_columnBitmask |= WORKSSCHEDULESID_COLUMN_BITMASK;

		if (!_setOriginalWorksSchedulesId) {
			_setOriginalWorksSchedulesId = true;

			_originalWorksSchedulesId = _worksSchedulesId;
		}

		_worksSchedulesId = worksSchedulesId;
	}

	public long getOriginalWorksSchedulesId() {
		return _originalWorksSchedulesId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SchedulesDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SchedulesDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SchedulesDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SchedulesDetailsImpl schedulesDetailsImpl = new SchedulesDetailsImpl();

		schedulesDetailsImpl.setSchedulesDetailsId(getSchedulesDetailsId());
		schedulesDetailsImpl.setSchedulesDate(getSchedulesDate());
		schedulesDetailsImpl.setWorksSchedulesId(getWorksSchedulesId());
		schedulesDetailsImpl.setEmployeeId(getEmployeeId());
		schedulesDetailsImpl.setCompanyId(getCompanyId());

		schedulesDetailsImpl.resetOriginalValues();

		return schedulesDetailsImpl;
	}

	@Override
	public int compareTo(SchedulesDetails schedulesDetails) {
		long primaryKey = schedulesDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SchedulesDetails)) {
			return false;
		}

		SchedulesDetails schedulesDetails = (SchedulesDetails)obj;

		long primaryKey = schedulesDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SchedulesDetailsModelImpl schedulesDetailsModelImpl = this;

		schedulesDetailsModelImpl._originalSchedulesDate = schedulesDetailsModelImpl._schedulesDate;

		schedulesDetailsModelImpl._originalWorksSchedulesId = schedulesDetailsModelImpl._worksSchedulesId;

		schedulesDetailsModelImpl._setOriginalWorksSchedulesId = false;

		schedulesDetailsModelImpl._originalEmployeeId = schedulesDetailsModelImpl._employeeId;

		schedulesDetailsModelImpl._setOriginalEmployeeId = false;

		schedulesDetailsModelImpl._originalCompanyId = schedulesDetailsModelImpl._companyId;

		schedulesDetailsModelImpl._setOriginalCompanyId = false;

		schedulesDetailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SchedulesDetails> toCacheModel() {
		SchedulesDetailsCacheModel schedulesDetailsCacheModel = new SchedulesDetailsCacheModel();

		schedulesDetailsCacheModel.schedulesDetailsId = getSchedulesDetailsId();

		Date schedulesDate = getSchedulesDate();

		if (schedulesDate != null) {
			schedulesDetailsCacheModel.schedulesDate = schedulesDate.getTime();
		}
		else {
			schedulesDetailsCacheModel.schedulesDate = Long.MIN_VALUE;
		}

		schedulesDetailsCacheModel.worksSchedulesId = getWorksSchedulesId();

		schedulesDetailsCacheModel.employeeId = getEmployeeId();

		schedulesDetailsCacheModel.companyId = getCompanyId();

		return schedulesDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{schedulesDetailsId=");
		sb.append(getSchedulesDetailsId());
		sb.append(", schedulesDate=");
		sb.append(getSchedulesDate());
		sb.append(", worksSchedulesId=");
		sb.append(getWorksSchedulesId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.SchedulesDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>schedulesDetailsId</column-name><column-value><![CDATA[");
		sb.append(getSchedulesDetailsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedulesDate</column-name><column-value><![CDATA[");
		sb.append(getSchedulesDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>worksSchedulesId</column-name><column-value><![CDATA[");
		sb.append(getWorksSchedulesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SchedulesDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SchedulesDetails.class, ModelWrapper.class
		};
	private long _schedulesDetailsId;
	private Date _schedulesDate;
	private Date _originalSchedulesDate;
	private long _worksSchedulesId;
	private long _originalWorksSchedulesId;
	private boolean _setOriginalWorksSchedulesId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _columnBitmask;
	private SchedulesDetails _escapedModel;
}