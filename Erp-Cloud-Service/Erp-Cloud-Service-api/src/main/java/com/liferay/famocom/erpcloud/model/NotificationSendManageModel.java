/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the NotificationSendManage service. Represents a row in the &quot;notificationSendManage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.famocom.erpcloud.model.impl.NotificationSendManageModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.famocom.erpcloud.model.impl.NotificationSendManageImpl}.
 * </p>
 *
 * @author Samaresh
 * @see NotificationSendManage
 * @see com.liferay.famocom.erpcloud.model.impl.NotificationSendManageImpl
 * @see com.liferay.famocom.erpcloud.model.impl.NotificationSendManageModelImpl
 * @generated
 */
@ProviderType
public interface NotificationSendManageModel extends BaseModel<NotificationSendManage> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a notification send manage model instance should use the {@link NotificationSendManage} interface instead.
	 */

	/**
	 * Returns the primary key of this notification send manage.
	 *
	 * @return the primary key of this notification send manage
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this notification send manage.
	 *
	 * @param primaryKey the primary key of this notification send manage
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the notify ID send ID of this notification send manage.
	 *
	 * @return the notify ID send ID of this notification send manage
	 */
	public long getNotifyIdSendId();

	/**
	 * Sets the notify ID send ID of this notification send manage.
	 *
	 * @param notifyIdSendId the notify ID send ID of this notification send manage
	 */
	public void setNotifyIdSendId(long notifyIdSendId);

	/**
	 * Returns the notification ID of this notification send manage.
	 *
	 * @return the notification ID of this notification send manage
	 */
	public long getNotificationId();

	/**
	 * Sets the notification ID of this notification send manage.
	 *
	 * @param notificationId the notification ID of this notification send manage
	 */
	public void setNotificationId(long notificationId);

	/**
	 * Returns the branch ID of this notification send manage.
	 *
	 * @return the branch ID of this notification send manage
	 */
	public long getBranchId();

	/**
	 * Sets the branch ID of this notification send manage.
	 *
	 * @param branchId the branch ID of this notification send manage
	 */
	public void setBranchId(long branchId);

	/**
	 * Returns the sending date of this notification send manage.
	 *
	 * @return the sending date of this notification send manage
	 */
	public Date getSendingDate();

	/**
	 * Sets the sending date of this notification send manage.
	 *
	 * @param sendingDate the sending date of this notification send manage
	 */
	public void setSendingDate(Date sendingDate);

	/**
	 * Returns the send by of this notification send manage.
	 *
	 * @return the send by of this notification send manage
	 */
	@AutoEscape
	public String getSendBy();

	/**
	 * Sets the send by of this notification send manage.
	 *
	 * @param sendBy the send by of this notification send manage
	 */
	public void setSendBy(String sendBy);

	/**
	 * Returns the is open of this notification send manage.
	 *
	 * @return the is open of this notification send manage
	 */
	public boolean getIsOpen();

	/**
	 * Returns <code>true</code> if this notification send manage is is open.
	 *
	 * @return <code>true</code> if this notification send manage is is open; <code>false</code> otherwise
	 */
	public boolean isIsOpen();

	/**
	 * Sets whether this notification send manage is is open.
	 *
	 * @param isOpen the is open of this notification send manage
	 */
	public void setIsOpen(boolean isOpen);

	/**
	 * Returns the open by of this notification send manage.
	 *
	 * @return the open by of this notification send manage
	 */
	@AutoEscape
	public String getOpenBy();

	/**
	 * Sets the open by of this notification send manage.
	 *
	 * @param openBy the open by of this notification send manage
	 */
	public void setOpenBy(String openBy);

	/**
	 * Returns the document ID of this notification send manage.
	 *
	 * @return the document ID of this notification send manage
	 */
	public long getDocumentId();

	/**
	 * Sets the document ID of this notification send manage.
	 *
	 * @param documentId the document ID of this notification send manage
	 */
	public void setDocumentId(long documentId);

	/**
	 * Returns the is approved of this notification send manage.
	 *
	 * @return the is approved of this notification send manage
	 */
	public int getIsApproved();

	/**
	 * Sets the is approved of this notification send manage.
	 *
	 * @param isApproved the is approved of this notification send manage
	 */
	public void setIsApproved(int isApproved);

	/**
	 * Returns the comment of this notification send manage.
	 *
	 * @return the comment of this notification send manage
	 */
	@AutoEscape
	public String getComment();

	/**
	 * Sets the comment of this notification send manage.
	 *
	 * @param comment the comment of this notification send manage
	 */
	public void setComment(String comment);

	/**
	 * Returns the document url of this notification send manage.
	 *
	 * @return the document url of this notification send manage
	 */
	@AutoEscape
	public String getDocumentUrl();

	/**
	 * Sets the document url of this notification send manage.
	 *
	 * @param documentUrl the document url of this notification send manage
	 */
	public void setDocumentUrl(String documentUrl);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(NotificationSendManage notificationSendManage);

	@Override
	public int hashCode();

	@Override
	public CacheModel<NotificationSendManage> toCacheModel();

	@Override
	public NotificationSendManage toEscapedModel();

	@Override
	public NotificationSendManage toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}