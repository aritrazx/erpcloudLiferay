/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ProjectMaster service. Represents a row in the &quot;projectMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.famocom.erpcloud.model.impl.ProjectMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.famocom.erpcloud.model.impl.ProjectMasterImpl}.
 * </p>
 *
 * @author Samaresh
 * @see ProjectMaster
 * @see com.liferay.famocom.erpcloud.model.impl.ProjectMasterImpl
 * @see com.liferay.famocom.erpcloud.model.impl.ProjectMasterModelImpl
 * @generated
 */
@ProviderType
public interface ProjectMasterModel extends BaseModel<ProjectMaster>,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a project master model instance should use the {@link ProjectMaster} interface instead.
	 */

	/**
	 * Returns the primary key of this project master.
	 *
	 * @return the primary key of this project master
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this project master.
	 *
	 * @param primaryKey the primary key of this project master
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the project ID of this project master.
	 *
	 * @return the project ID of this project master
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this project master.
	 *
	 * @param projectId the project ID of this project master
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the company ID of this project master.
	 *
	 * @return the company ID of this project master
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this project master.
	 *
	 * @param companyId the company ID of this project master
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the project name of this project master.
	 *
	 * @return the project name of this project master
	 */
	@AutoEscape
	public String getProjectName();

	/**
	 * Sets the project name of this project master.
	 *
	 * @param projectName the project name of this project master
	 */
	public void setProjectName(String projectName);

	/**
	 * Returns the client ID of this project master.
	 *
	 * @return the client ID of this project master
	 */
	public long getClientId();

	/**
	 * Sets the client ID of this project master.
	 *
	 * @param clientId the client ID of this project master
	 */
	public void setClientId(long clientId);

	/**
	 * Returns the employee ID of this project master.
	 *
	 * @return the employee ID of this project master
	 */
	public long getEmployeeId();

	/**
	 * Sets the employee ID of this project master.
	 *
	 * @param employeeId the employee ID of this project master
	 */
	public void setEmployeeId(long employeeId);

	/**
	 * Returns the project status of this project master.
	 *
	 * @return the project status of this project master
	 */
	public int getProjectStatus();

	/**
	 * Sets the project status of this project master.
	 *
	 * @param projectStatus the project status of this project master
	 */
	public void setProjectStatus(int projectStatus);

	/**
	 * Returns the project status ID of this project master.
	 *
	 * @return the project status ID of this project master
	 */
	public long getProjectStatusId();

	/**
	 * Sets the project status ID of this project master.
	 *
	 * @param projectStatusId the project status ID of this project master
	 */
	public void setProjectStatusId(long projectStatusId);

	/**
	 * Returns the project desc of this project master.
	 *
	 * @return the project desc of this project master
	 */
	@AutoEscape
	public String getProjectDesc();

	/**
	 * Sets the project desc of this project master.
	 *
	 * @param projectDesc the project desc of this project master
	 */
	public void setProjectDesc(String projectDesc);

	/**
	 * Returns the start date of this project master.
	 *
	 * @return the start date of this project master
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this project master.
	 *
	 * @param startDate the start date of this project master
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this project master.
	 *
	 * @return the end date of this project master
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this project master.
	 *
	 * @param endDate the end date of this project master
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the total amount of this project master.
	 *
	 * @return the total amount of this project master
	 */
	public double getTotalAmount();

	/**
	 * Sets the total amount of this project master.
	 *
	 * @param totalAmount the total amount of this project master
	 */
	public void setTotalAmount(double totalAmount);

	/**
	 * Returns the added date of this project master.
	 *
	 * @return the added date of this project master
	 */
	public Date getAddedDate();

	/**
	 * Sets the added date of this project master.
	 *
	 * @param addedDate the added date of this project master
	 */
	public void setAddedDate(Date addedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ProjectMaster projectMaster);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ProjectMaster> toCacheModel();

	@Override
	public ProjectMaster toEscapedModel();

	@Override
	public ProjectMaster toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}