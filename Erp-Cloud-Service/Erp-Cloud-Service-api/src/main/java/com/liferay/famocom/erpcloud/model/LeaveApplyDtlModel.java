/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the LeaveApplyDtl service. Represents a row in the &quot;leaveApplyDtl&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.famocom.erpcloud.model.impl.LeaveApplyDtlModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.famocom.erpcloud.model.impl.LeaveApplyDtlImpl}.
 * </p>
 *
 * @author Samaresh
 * @see LeaveApplyDtl
 * @see com.liferay.famocom.erpcloud.model.impl.LeaveApplyDtlImpl
 * @see com.liferay.famocom.erpcloud.model.impl.LeaveApplyDtlModelImpl
 * @generated
 */
@ProviderType
public interface LeaveApplyDtlModel extends BaseModel<LeaveApplyDtl>,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a leave apply dtl model instance should use the {@link LeaveApplyDtl} interface instead.
	 */

	/**
	 * Returns the primary key of this leave apply dtl.
	 *
	 * @return the primary key of this leave apply dtl
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this leave apply dtl.
	 *
	 * @param primaryKey the primary key of this leave apply dtl
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the leave apply dtl ID of this leave apply dtl.
	 *
	 * @return the leave apply dtl ID of this leave apply dtl
	 */
	public long getLeaveApplyDtlId();

	/**
	 * Sets the leave apply dtl ID of this leave apply dtl.
	 *
	 * @param leaveApplyDtlId the leave apply dtl ID of this leave apply dtl
	 */
	public void setLeaveApplyDtlId(long leaveApplyDtlId);

	/**
	 * Returns the leave apply ID of this leave apply dtl.
	 *
	 * @return the leave apply ID of this leave apply dtl
	 */
	public long getLeaveApplyId();

	/**
	 * Sets the leave apply ID of this leave apply dtl.
	 *
	 * @param leaveApplyId the leave apply ID of this leave apply dtl
	 */
	public void setLeaveApplyId(long leaveApplyId);

	/**
	 * Returns the employee ID of this leave apply dtl.
	 *
	 * @return the employee ID of this leave apply dtl
	 */
	public long getEmployeeId();

	/**
	 * Sets the employee ID of this leave apply dtl.
	 *
	 * @param employeeId the employee ID of this leave apply dtl
	 */
	public void setEmployeeId(long employeeId);

	/**
	 * Returns the company ID of this leave apply dtl.
	 *
	 * @return the company ID of this leave apply dtl
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this leave apply dtl.
	 *
	 * @param companyId the company ID of this leave apply dtl
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the leave type ID of this leave apply dtl.
	 *
	 * @return the leave type ID of this leave apply dtl
	 */
	public long getLeaveTypeId();

	/**
	 * Sets the leave type ID of this leave apply dtl.
	 *
	 * @param leaveTypeId the leave type ID of this leave apply dtl
	 */
	public void setLeaveTypeId(long leaveTypeId);

	/**
	 * Returns the leave date of this leave apply dtl.
	 *
	 * @return the leave date of this leave apply dtl
	 */
	public Date getLeaveDate();

	/**
	 * Sets the leave date of this leave apply dtl.
	 *
	 * @param leaveDate the leave date of this leave apply dtl
	 */
	public void setLeaveDate(Date leaveDate);

	/**
	 * Returns the session data of this leave apply dtl.
	 *
	 * @return the session data of this leave apply dtl
	 */
	@AutoEscape
	public String getSessionData();

	/**
	 * Sets the session data of this leave apply dtl.
	 *
	 * @param sessionData the session data of this leave apply dtl
	 */
	public void setSessionData(String sessionData);

	/**
	 * Returns the leave days of this leave apply dtl.
	 *
	 * @return the leave days of this leave apply dtl
	 */
	public double getLeaveDays();

	/**
	 * Sets the leave days of this leave apply dtl.
	 *
	 * @param leaveDays the leave days of this leave apply dtl
	 */
	public void setLeaveDays(double leaveDays);

	/**
	 * Returns the impect on salary of this leave apply dtl.
	 *
	 * @return the impect on salary of this leave apply dtl
	 */
	public int getImpectOnSalary();

	/**
	 * Sets the impect on salary of this leave apply dtl.
	 *
	 * @param impectOnSalary the impect on salary of this leave apply dtl
	 */
	public void setImpectOnSalary(int impectOnSalary);

	/**
	 * Returns the is approve of this leave apply dtl.
	 *
	 * @return the is approve of this leave apply dtl
	 */
	public int getIsApprove();

	/**
	 * Sets the is approve of this leave apply dtl.
	 *
	 * @param isApprove the is approve of this leave apply dtl
	 */
	public void setIsApprove(int isApprove);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LeaveApplyDtl leaveApplyDtl);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LeaveApplyDtl> toCacheModel();

	@Override
	public LeaveApplyDtl toEscapedModel();

	@Override
	public LeaveApplyDtl toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}