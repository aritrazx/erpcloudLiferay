/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.AppraisalPerformance;
import com.liferay.famocom.erpcloud.model.AppraisalPerformanceModel;
import com.liferay.famocom.erpcloud.model.AppraisalPerformanceSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AppraisalPerformance service. Represents a row in the &quot;appraisalPerformance&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AppraisalPerformanceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AppraisalPerformanceImpl}.
 * </p>
 *
 * @author Samaresh
 * @see AppraisalPerformanceImpl
 * @see AppraisalPerformance
 * @see AppraisalPerformanceModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AppraisalPerformanceModelImpl extends BaseModelImpl<AppraisalPerformance>
	implements AppraisalPerformanceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a appraisal performance model instance should use the {@link AppraisalPerformance} interface instead.
	 */
	public static final String TABLE_NAME = "appraisalPerformance";
	public static final Object[][] TABLE_COLUMNS = {
			{ "appraisalPerformanceId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "appraisalId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "appraisalSettingId", Types.BIGINT },
			{ "performanceId", Types.BIGINT },
			{ "performanceComm", Types.VARCHAR },
			{ "ratingIdEmp", Types.BIGINT },
			{ "ratingIdMan", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "createdBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("appraisalPerformanceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("appraisalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("appraisalSettingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("performanceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("performanceComm", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ratingIdEmp", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ratingIdMan", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table appraisalPerformance (appraisalPerformanceId LONG not null primary key,companyId LONG,appraisalId LONG,employeeId LONG,appraisalSettingId LONG,performanceId LONG,performanceComm VARCHAR(75) null,ratingIdEmp LONG,ratingIdMan LONG,createdDate DATE null,createdBy LONG,modifiedDate DATE null,modifiedBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table appraisalPerformance";
	public static final String ORDER_BY_JPQL = " ORDER BY appraisalPerformance.appraisalPerformanceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY appraisalPerformance.appraisalPerformanceId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.AppraisalPerformance"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.AppraisalPerformance"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.AppraisalPerformance"),
			true);
	public static final long APPRAISALID_COLUMN_BITMASK = 1L;
	public static final long APPRAISALSETTINGID_COLUMN_BITMASK = 2L;
	public static final long EMPLOYEEID_COLUMN_BITMASK = 4L;
	public static final long PERFORMANCEID_COLUMN_BITMASK = 8L;
	public static final long APPRAISALPERFORMANCEID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AppraisalPerformance toModel(
		AppraisalPerformanceSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AppraisalPerformance model = new AppraisalPerformanceImpl();

		model.setAppraisalPerformanceId(soapModel.getAppraisalPerformanceId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setAppraisalId(soapModel.getAppraisalId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setAppraisalSettingId(soapModel.getAppraisalSettingId());
		model.setPerformanceId(soapModel.getPerformanceId());
		model.setPerformanceComm(soapModel.getPerformanceComm());
		model.setRatingIdEmp(soapModel.getRatingIdEmp());
		model.setRatingIdMan(soapModel.getRatingIdMan());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setModifiedBy(soapModel.getModifiedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AppraisalPerformance> toModels(
		AppraisalPerformanceSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AppraisalPerformance> models = new ArrayList<AppraisalPerformance>(soapModels.length);

		for (AppraisalPerformanceSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.AppraisalPerformance"));

	public AppraisalPerformanceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _appraisalPerformanceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAppraisalPerformanceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _appraisalPerformanceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AppraisalPerformance.class;
	}

	@Override
	public String getModelClassName() {
		return AppraisalPerformance.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("appraisalPerformanceId", getAppraisalPerformanceId());
		attributes.put("companyId", getCompanyId());
		attributes.put("appraisalId", getAppraisalId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("appraisalSettingId", getAppraisalSettingId());
		attributes.put("performanceId", getPerformanceId());
		attributes.put("performanceComm", getPerformanceComm());
		attributes.put("ratingIdEmp", getRatingIdEmp());
		attributes.put("ratingIdMan", getRatingIdMan());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedBy", getModifiedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long appraisalPerformanceId = (Long)attributes.get(
				"appraisalPerformanceId");

		if (appraisalPerformanceId != null) {
			setAppraisalPerformanceId(appraisalPerformanceId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long appraisalId = (Long)attributes.get("appraisalId");

		if (appraisalId != null) {
			setAppraisalId(appraisalId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long appraisalSettingId = (Long)attributes.get("appraisalSettingId");

		if (appraisalSettingId != null) {
			setAppraisalSettingId(appraisalSettingId);
		}

		Long performanceId = (Long)attributes.get("performanceId");

		if (performanceId != null) {
			setPerformanceId(performanceId);
		}

		String performanceComm = (String)attributes.get("performanceComm");

		if (performanceComm != null) {
			setPerformanceComm(performanceComm);
		}

		Long ratingIdEmp = (Long)attributes.get("ratingIdEmp");

		if (ratingIdEmp != null) {
			setRatingIdEmp(ratingIdEmp);
		}

		Long ratingIdMan = (Long)attributes.get("ratingIdMan");

		if (ratingIdMan != null) {
			setRatingIdMan(ratingIdMan);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@JSON
	@Override
	public long getAppraisalPerformanceId() {
		return _appraisalPerformanceId;
	}

	@Override
	public void setAppraisalPerformanceId(long appraisalPerformanceId) {
		_appraisalPerformanceId = appraisalPerformanceId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getAppraisalId() {
		return _appraisalId;
	}

	@Override
	public void setAppraisalId(long appraisalId) {
		_columnBitmask |= APPRAISALID_COLUMN_BITMASK;

		if (!_setOriginalAppraisalId) {
			_setOriginalAppraisalId = true;

			_originalAppraisalId = _appraisalId;
		}

		_appraisalId = appraisalId;
	}

	public long getOriginalAppraisalId() {
		return _originalAppraisalId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@JSON
	@Override
	public long getAppraisalSettingId() {
		return _appraisalSettingId;
	}

	@Override
	public void setAppraisalSettingId(long appraisalSettingId) {
		_columnBitmask |= APPRAISALSETTINGID_COLUMN_BITMASK;

		if (!_setOriginalAppraisalSettingId) {
			_setOriginalAppraisalSettingId = true;

			_originalAppraisalSettingId = _appraisalSettingId;
		}

		_appraisalSettingId = appraisalSettingId;
	}

	public long getOriginalAppraisalSettingId() {
		return _originalAppraisalSettingId;
	}

	@JSON
	@Override
	public long getPerformanceId() {
		return _performanceId;
	}

	@Override
	public void setPerformanceId(long performanceId) {
		_columnBitmask |= PERFORMANCEID_COLUMN_BITMASK;

		if (!_setOriginalPerformanceId) {
			_setOriginalPerformanceId = true;

			_originalPerformanceId = _performanceId;
		}

		_performanceId = performanceId;
	}

	public long getOriginalPerformanceId() {
		return _originalPerformanceId;
	}

	@JSON
	@Override
	public String getPerformanceComm() {
		if (_performanceComm == null) {
			return "";
		}
		else {
			return _performanceComm;
		}
	}

	@Override
	public void setPerformanceComm(String performanceComm) {
		_performanceComm = performanceComm;
	}

	@JSON
	@Override
	public long getRatingIdEmp() {
		return _ratingIdEmp;
	}

	@Override
	public void setRatingIdEmp(long ratingIdEmp) {
		_ratingIdEmp = ratingIdEmp;
	}

	@JSON
	@Override
	public long getRatingIdMan() {
		return _ratingIdMan;
	}

	@Override
	public void setRatingIdMan(long ratingIdMan) {
		_ratingIdMan = ratingIdMan;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AppraisalPerformance.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AppraisalPerformance toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AppraisalPerformance)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AppraisalPerformanceImpl appraisalPerformanceImpl = new AppraisalPerformanceImpl();

		appraisalPerformanceImpl.setAppraisalPerformanceId(getAppraisalPerformanceId());
		appraisalPerformanceImpl.setCompanyId(getCompanyId());
		appraisalPerformanceImpl.setAppraisalId(getAppraisalId());
		appraisalPerformanceImpl.setEmployeeId(getEmployeeId());
		appraisalPerformanceImpl.setAppraisalSettingId(getAppraisalSettingId());
		appraisalPerformanceImpl.setPerformanceId(getPerformanceId());
		appraisalPerformanceImpl.setPerformanceComm(getPerformanceComm());
		appraisalPerformanceImpl.setRatingIdEmp(getRatingIdEmp());
		appraisalPerformanceImpl.setRatingIdMan(getRatingIdMan());
		appraisalPerformanceImpl.setCreatedDate(getCreatedDate());
		appraisalPerformanceImpl.setCreatedBy(getCreatedBy());
		appraisalPerformanceImpl.setModifiedDate(getModifiedDate());
		appraisalPerformanceImpl.setModifiedBy(getModifiedBy());

		appraisalPerformanceImpl.resetOriginalValues();

		return appraisalPerformanceImpl;
	}

	@Override
	public int compareTo(AppraisalPerformance appraisalPerformance) {
		long primaryKey = appraisalPerformance.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AppraisalPerformance)) {
			return false;
		}

		AppraisalPerformance appraisalPerformance = (AppraisalPerformance)obj;

		long primaryKey = appraisalPerformance.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AppraisalPerformanceModelImpl appraisalPerformanceModelImpl = this;

		appraisalPerformanceModelImpl._originalAppraisalId = appraisalPerformanceModelImpl._appraisalId;

		appraisalPerformanceModelImpl._setOriginalAppraisalId = false;

		appraisalPerformanceModelImpl._originalEmployeeId = appraisalPerformanceModelImpl._employeeId;

		appraisalPerformanceModelImpl._setOriginalEmployeeId = false;

		appraisalPerformanceModelImpl._originalAppraisalSettingId = appraisalPerformanceModelImpl._appraisalSettingId;

		appraisalPerformanceModelImpl._setOriginalAppraisalSettingId = false;

		appraisalPerformanceModelImpl._originalPerformanceId = appraisalPerformanceModelImpl._performanceId;

		appraisalPerformanceModelImpl._setOriginalPerformanceId = false;

		appraisalPerformanceModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AppraisalPerformance> toCacheModel() {
		AppraisalPerformanceCacheModel appraisalPerformanceCacheModel = new AppraisalPerformanceCacheModel();

		appraisalPerformanceCacheModel.appraisalPerformanceId = getAppraisalPerformanceId();

		appraisalPerformanceCacheModel.companyId = getCompanyId();

		appraisalPerformanceCacheModel.appraisalId = getAppraisalId();

		appraisalPerformanceCacheModel.employeeId = getEmployeeId();

		appraisalPerformanceCacheModel.appraisalSettingId = getAppraisalSettingId();

		appraisalPerformanceCacheModel.performanceId = getPerformanceId();

		appraisalPerformanceCacheModel.performanceComm = getPerformanceComm();

		String performanceComm = appraisalPerformanceCacheModel.performanceComm;

		if ((performanceComm != null) && (performanceComm.length() == 0)) {
			appraisalPerformanceCacheModel.performanceComm = null;
		}

		appraisalPerformanceCacheModel.ratingIdEmp = getRatingIdEmp();

		appraisalPerformanceCacheModel.ratingIdMan = getRatingIdMan();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			appraisalPerformanceCacheModel.createdDate = createdDate.getTime();
		}
		else {
			appraisalPerformanceCacheModel.createdDate = Long.MIN_VALUE;
		}

		appraisalPerformanceCacheModel.createdBy = getCreatedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			appraisalPerformanceCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			appraisalPerformanceCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		appraisalPerformanceCacheModel.modifiedBy = getModifiedBy();

		return appraisalPerformanceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{appraisalPerformanceId=");
		sb.append(getAppraisalPerformanceId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", appraisalId=");
		sb.append(getAppraisalId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", appraisalSettingId=");
		sb.append(getAppraisalSettingId());
		sb.append(", performanceId=");
		sb.append(getPerformanceId());
		sb.append(", performanceComm=");
		sb.append(getPerformanceComm());
		sb.append(", ratingIdEmp=");
		sb.append(getRatingIdEmp());
		sb.append(", ratingIdMan=");
		sb.append(getRatingIdMan());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.AppraisalPerformance");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>appraisalPerformanceId</column-name><column-value><![CDATA[");
		sb.append(getAppraisalPerformanceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appraisalId</column-name><column-value><![CDATA[");
		sb.append(getAppraisalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appraisalSettingId</column-name><column-value><![CDATA[");
		sb.append(getAppraisalSettingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performanceId</column-name><column-value><![CDATA[");
		sb.append(getPerformanceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performanceComm</column-name><column-value><![CDATA[");
		sb.append(getPerformanceComm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratingIdEmp</column-name><column-value><![CDATA[");
		sb.append(getRatingIdEmp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratingIdMan</column-name><column-value><![CDATA[");
		sb.append(getRatingIdMan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AppraisalPerformance.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AppraisalPerformance.class, ModelWrapper.class
		};
	private long _appraisalPerformanceId;
	private long _companyId;
	private long _appraisalId;
	private long _originalAppraisalId;
	private boolean _setOriginalAppraisalId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private long _appraisalSettingId;
	private long _originalAppraisalSettingId;
	private boolean _setOriginalAppraisalSettingId;
	private long _performanceId;
	private long _originalPerformanceId;
	private boolean _setOriginalPerformanceId;
	private String _performanceComm;
	private long _ratingIdEmp;
	private long _ratingIdMan;
	private Date _createdDate;
	private long _createdBy;
	private Date _modifiedDate;
	private long _modifiedBy;
	private long _columnBitmask;
	private AppraisalPerformance _escapedModel;
}