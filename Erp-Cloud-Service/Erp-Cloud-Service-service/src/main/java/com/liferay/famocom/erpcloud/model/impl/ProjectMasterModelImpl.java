/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.ProjectMaster;
import com.liferay.famocom.erpcloud.model.ProjectMasterModel;
import com.liferay.famocom.erpcloud.model.ProjectMasterSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ProjectMaster service. Represents a row in the &quot;projectMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ProjectMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProjectMasterImpl}.
 * </p>
 *
 * @author Samaresh
 * @see ProjectMasterImpl
 * @see ProjectMaster
 * @see ProjectMasterModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ProjectMasterModelImpl extends BaseModelImpl<ProjectMaster>
	implements ProjectMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a project master model instance should use the {@link ProjectMaster} interface instead.
	 */
	public static final String TABLE_NAME = "projectMaster";
	public static final Object[][] TABLE_COLUMNS = {
			{ "projectId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "projectName", Types.VARCHAR },
			{ "clientId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "projectStatus", Types.INTEGER },
			{ "projectStatusId", Types.BIGINT },
			{ "projectDesc", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "totalAmount", Types.DOUBLE },
			{ "addedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("projectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("projectName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("clientId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("projectStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("projectStatusId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("projectDesc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("startDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("totalAmount", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table projectMaster (projectId LONG not null primary key,companyId LONG,projectName VARCHAR(75) null,clientId LONG,employeeId LONG,projectStatus INTEGER,projectStatusId LONG,projectDesc VARCHAR(75) null,startDate DATE null,endDate DATE null,totalAmount DOUBLE,addedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table projectMaster";
	public static final String ORDER_BY_JPQL = " ORDER BY projectMaster.projectId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY projectMaster.projectId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.ProjectMaster"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.ProjectMaster"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.ProjectMaster"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long EMPLOYEEID_COLUMN_BITMASK = 2L;
	public static final long PROJECTID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ProjectMaster toModel(ProjectMasterSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ProjectMaster model = new ProjectMasterImpl();

		model.setProjectId(soapModel.getProjectId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setProjectName(soapModel.getProjectName());
		model.setClientId(soapModel.getClientId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setProjectStatus(soapModel.getProjectStatus());
		model.setProjectStatusId(soapModel.getProjectStatusId());
		model.setProjectDesc(soapModel.getProjectDesc());
		model.setStartDate(soapModel.getStartDate());
		model.setEndDate(soapModel.getEndDate());
		model.setTotalAmount(soapModel.getTotalAmount());
		model.setAddedDate(soapModel.getAddedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ProjectMaster> toModels(ProjectMasterSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ProjectMaster> models = new ArrayList<ProjectMaster>(soapModels.length);

		for (ProjectMasterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.ProjectMaster"));

	public ProjectMasterModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _projectId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProjectId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _projectId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProjectMaster.class;
	}

	@Override
	public String getModelClassName() {
		return ProjectMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("projectId", getProjectId());
		attributes.put("companyId", getCompanyId());
		attributes.put("projectName", getProjectName());
		attributes.put("clientId", getClientId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("projectStatus", getProjectStatus());
		attributes.put("projectStatusId", getProjectStatusId());
		attributes.put("projectDesc", getProjectDesc());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("totalAmount", getTotalAmount());
		attributes.put("addedDate", getAddedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long projectId = (Long)attributes.get("projectId");

		if (projectId != null) {
			setProjectId(projectId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String projectName = (String)attributes.get("projectName");

		if (projectName != null) {
			setProjectName(projectName);
		}

		Long clientId = (Long)attributes.get("clientId");

		if (clientId != null) {
			setClientId(clientId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Integer projectStatus = (Integer)attributes.get("projectStatus");

		if (projectStatus != null) {
			setProjectStatus(projectStatus);
		}

		Long projectStatusId = (Long)attributes.get("projectStatusId");

		if (projectStatusId != null) {
			setProjectStatusId(projectStatusId);
		}

		String projectDesc = (String)attributes.get("projectDesc");

		if (projectDesc != null) {
			setProjectDesc(projectDesc);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Double totalAmount = (Double)attributes.get("totalAmount");

		if (totalAmount != null) {
			setTotalAmount(totalAmount);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}
	}

	@JSON
	@Override
	public long getProjectId() {
		return _projectId;
	}

	@Override
	public void setProjectId(long projectId) {
		_projectId = projectId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public String getProjectName() {
		if (_projectName == null) {
			return "";
		}
		else {
			return _projectName;
		}
	}

	@Override
	public void setProjectName(String projectName) {
		_projectName = projectName;
	}

	@JSON
	@Override
	public long getClientId() {
		return _clientId;
	}

	@Override
	public void setClientId(long clientId) {
		_clientId = clientId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@JSON
	@Override
	public int getProjectStatus() {
		return _projectStatus;
	}

	@Override
	public void setProjectStatus(int projectStatus) {
		_projectStatus = projectStatus;
	}

	@JSON
	@Override
	public long getProjectStatusId() {
		return _projectStatusId;
	}

	@Override
	public void setProjectStatusId(long projectStatusId) {
		_projectStatusId = projectStatusId;
	}

	@JSON
	@Override
	public String getProjectDesc() {
		if (_projectDesc == null) {
			return "";
		}
		else {
			return _projectDesc;
		}
	}

	@Override
	public void setProjectDesc(String projectDesc) {
		_projectDesc = projectDesc;
	}

	@JSON
	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@JSON
	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@JSON
	@Override
	public double getTotalAmount() {
		return _totalAmount;
	}

	@Override
	public void setTotalAmount(double totalAmount) {
		_totalAmount = totalAmount;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ProjectMaster.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProjectMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ProjectMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProjectMasterImpl projectMasterImpl = new ProjectMasterImpl();

		projectMasterImpl.setProjectId(getProjectId());
		projectMasterImpl.setCompanyId(getCompanyId());
		projectMasterImpl.setProjectName(getProjectName());
		projectMasterImpl.setClientId(getClientId());
		projectMasterImpl.setEmployeeId(getEmployeeId());
		projectMasterImpl.setProjectStatus(getProjectStatus());
		projectMasterImpl.setProjectStatusId(getProjectStatusId());
		projectMasterImpl.setProjectDesc(getProjectDesc());
		projectMasterImpl.setStartDate(getStartDate());
		projectMasterImpl.setEndDate(getEndDate());
		projectMasterImpl.setTotalAmount(getTotalAmount());
		projectMasterImpl.setAddedDate(getAddedDate());

		projectMasterImpl.resetOriginalValues();

		return projectMasterImpl;
	}

	@Override
	public int compareTo(ProjectMaster projectMaster) {
		long primaryKey = projectMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProjectMaster)) {
			return false;
		}

		ProjectMaster projectMaster = (ProjectMaster)obj;

		long primaryKey = projectMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ProjectMasterModelImpl projectMasterModelImpl = this;

		projectMasterModelImpl._originalCompanyId = projectMasterModelImpl._companyId;

		projectMasterModelImpl._setOriginalCompanyId = false;

		projectMasterModelImpl._originalEmployeeId = projectMasterModelImpl._employeeId;

		projectMasterModelImpl._setOriginalEmployeeId = false;

		projectMasterModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ProjectMaster> toCacheModel() {
		ProjectMasterCacheModel projectMasterCacheModel = new ProjectMasterCacheModel();

		projectMasterCacheModel.projectId = getProjectId();

		projectMasterCacheModel.companyId = getCompanyId();

		projectMasterCacheModel.projectName = getProjectName();

		String projectName = projectMasterCacheModel.projectName;

		if ((projectName != null) && (projectName.length() == 0)) {
			projectMasterCacheModel.projectName = null;
		}

		projectMasterCacheModel.clientId = getClientId();

		projectMasterCacheModel.employeeId = getEmployeeId();

		projectMasterCacheModel.projectStatus = getProjectStatus();

		projectMasterCacheModel.projectStatusId = getProjectStatusId();

		projectMasterCacheModel.projectDesc = getProjectDesc();

		String projectDesc = projectMasterCacheModel.projectDesc;

		if ((projectDesc != null) && (projectDesc.length() == 0)) {
			projectMasterCacheModel.projectDesc = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			projectMasterCacheModel.startDate = startDate.getTime();
		}
		else {
			projectMasterCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			projectMasterCacheModel.endDate = endDate.getTime();
		}
		else {
			projectMasterCacheModel.endDate = Long.MIN_VALUE;
		}

		projectMasterCacheModel.totalAmount = getTotalAmount();

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			projectMasterCacheModel.addedDate = addedDate.getTime();
		}
		else {
			projectMasterCacheModel.addedDate = Long.MIN_VALUE;
		}

		return projectMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{projectId=");
		sb.append(getProjectId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", projectName=");
		sb.append(getProjectName());
		sb.append(", clientId=");
		sb.append(getClientId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", projectStatus=");
		sb.append(getProjectStatus());
		sb.append(", projectStatusId=");
		sb.append(getProjectStatusId());
		sb.append(", projectDesc=");
		sb.append(getProjectDesc());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", totalAmount=");
		sb.append(getTotalAmount());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.ProjectMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>projectId</column-name><column-value><![CDATA[");
		sb.append(getProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectName</column-name><column-value><![CDATA[");
		sb.append(getProjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientId</column-name><column-value><![CDATA[");
		sb.append(getClientId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectStatus</column-name><column-value><![CDATA[");
		sb.append(getProjectStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectStatusId</column-name><column-value><![CDATA[");
		sb.append(getProjectStatusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectDesc</column-name><column-value><![CDATA[");
		sb.append(getProjectDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalAmount</column-name><column-value><![CDATA[");
		sb.append(getTotalAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ProjectMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ProjectMaster.class, ModelWrapper.class
		};
	private long _projectId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private String _projectName;
	private long _clientId;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private int _projectStatus;
	private long _projectStatusId;
	private String _projectDesc;
	private Date _startDate;
	private Date _endDate;
	private double _totalAmount;
	private Date _addedDate;
	private long _columnBitmask;
	private ProjectMaster _escapedModel;
}