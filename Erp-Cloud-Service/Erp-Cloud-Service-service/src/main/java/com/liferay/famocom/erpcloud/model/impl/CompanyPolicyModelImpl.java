/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.CompanyPolicy;
import com.liferay.famocom.erpcloud.model.CompanyPolicyModel;
import com.liferay.famocom.erpcloud.model.CompanyPolicySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CompanyPolicy service. Represents a row in the &quot;companyPolicy&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CompanyPolicyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompanyPolicyImpl}.
 * </p>
 *
 * @author Samaresh
 * @see CompanyPolicyImpl
 * @see CompanyPolicy
 * @see CompanyPolicyModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class CompanyPolicyModelImpl extends BaseModelImpl<CompanyPolicy>
	implements CompanyPolicyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a company policy model instance should use the {@link CompanyPolicy} interface instead.
	 */
	public static final String TABLE_NAME = "companyPolicy";
	public static final Object[][] TABLE_COLUMNS = {
			{ "companyPolicyId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "daysLocking", Types.INTEGER },
			{ "checkStatus", Types.INTEGER },
			{ "addedDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("companyPolicyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("daysLocking", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("checkStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table companyPolicy (companyPolicyId LONG not null primary key,companyId LONG,daysLocking INTEGER,checkStatus INTEGER,addedDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table companyPolicy";
	public static final String ORDER_BY_JPQL = " ORDER BY companyPolicy.companyPolicyId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY companyPolicy.companyPolicyId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.CompanyPolicy"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.CompanyPolicy"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CompanyPolicy toModel(CompanyPolicySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CompanyPolicy model = new CompanyPolicyImpl();

		model.setCompanyPolicyId(soapModel.getCompanyPolicyId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setDaysLocking(soapModel.getDaysLocking());
		model.setCheckStatus(soapModel.getCheckStatus());
		model.setAddedDate(soapModel.getAddedDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CompanyPolicy> toModels(CompanyPolicySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CompanyPolicy> models = new ArrayList<CompanyPolicy>(soapModels.length);

		for (CompanyPolicySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.CompanyPolicy"));

	public CompanyPolicyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _companyPolicyId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCompanyPolicyId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _companyPolicyId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CompanyPolicy.class;
	}

	@Override
	public String getModelClassName() {
		return CompanyPolicy.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("companyPolicyId", getCompanyPolicyId());
		attributes.put("companyId", getCompanyId());
		attributes.put("daysLocking", getDaysLocking());
		attributes.put("checkStatus", getCheckStatus());
		attributes.put("addedDate", getAddedDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long companyPolicyId = (Long)attributes.get("companyPolicyId");

		if (companyPolicyId != null) {
			setCompanyPolicyId(companyPolicyId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Integer daysLocking = (Integer)attributes.get("daysLocking");

		if (daysLocking != null) {
			setDaysLocking(daysLocking);
		}

		Integer checkStatus = (Integer)attributes.get("checkStatus");

		if (checkStatus != null) {
			setCheckStatus(checkStatus);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getCompanyPolicyId() {
		return _companyPolicyId;
	}

	@Override
	public void setCompanyPolicyId(long companyPolicyId) {
		_companyPolicyId = companyPolicyId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public int getDaysLocking() {
		return _daysLocking;
	}

	@Override
	public void setDaysLocking(int daysLocking) {
		_daysLocking = daysLocking;
	}

	@JSON
	@Override
	public int getCheckStatus() {
		return _checkStatus;
	}

	@Override
	public void setCheckStatus(int checkStatus) {
		_checkStatus = checkStatus;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CompanyPolicy.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CompanyPolicy toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CompanyPolicy)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CompanyPolicyImpl companyPolicyImpl = new CompanyPolicyImpl();

		companyPolicyImpl.setCompanyPolicyId(getCompanyPolicyId());
		companyPolicyImpl.setCompanyId(getCompanyId());
		companyPolicyImpl.setDaysLocking(getDaysLocking());
		companyPolicyImpl.setCheckStatus(getCheckStatus());
		companyPolicyImpl.setAddedDate(getAddedDate());
		companyPolicyImpl.setModifiedDate(getModifiedDate());

		companyPolicyImpl.resetOriginalValues();

		return companyPolicyImpl;
	}

	@Override
	public int compareTo(CompanyPolicy companyPolicy) {
		long primaryKey = companyPolicy.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CompanyPolicy)) {
			return false;
		}

		CompanyPolicy companyPolicy = (CompanyPolicy)obj;

		long primaryKey = companyPolicy.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CompanyPolicy> toCacheModel() {
		CompanyPolicyCacheModel companyPolicyCacheModel = new CompanyPolicyCacheModel();

		companyPolicyCacheModel.companyPolicyId = getCompanyPolicyId();

		companyPolicyCacheModel.companyId = getCompanyId();

		companyPolicyCacheModel.daysLocking = getDaysLocking();

		companyPolicyCacheModel.checkStatus = getCheckStatus();

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			companyPolicyCacheModel.addedDate = addedDate.getTime();
		}
		else {
			companyPolicyCacheModel.addedDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			companyPolicyCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			companyPolicyCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return companyPolicyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{companyPolicyId=");
		sb.append(getCompanyPolicyId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", daysLocking=");
		sb.append(getDaysLocking());
		sb.append(", checkStatus=");
		sb.append(getCheckStatus());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.CompanyPolicy");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>companyPolicyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyPolicyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>daysLocking</column-name><column-value><![CDATA[");
		sb.append(getDaysLocking());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkStatus</column-name><column-value><![CDATA[");
		sb.append(getCheckStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CompanyPolicy.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CompanyPolicy.class, ModelWrapper.class
		};
	private long _companyPolicyId;
	private long _companyId;
	private int _daysLocking;
	private int _checkStatus;
	private Date _addedDate;
	private Date _modifiedDate;
	private CompanyPolicy _escapedModel;
}