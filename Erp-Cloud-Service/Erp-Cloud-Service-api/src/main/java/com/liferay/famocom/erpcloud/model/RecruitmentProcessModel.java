/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.WorkflowedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the RecruitmentProcess service. Represents a row in the &quot;RecruitmentProcess&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.famocom.erpcloud.model.impl.RecruitmentProcessModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.famocom.erpcloud.model.impl.RecruitmentProcessImpl}.
 * </p>
 *
 * @author Samaresh
 * @see RecruitmentProcess
 * @see com.liferay.famocom.erpcloud.model.impl.RecruitmentProcessImpl
 * @see com.liferay.famocom.erpcloud.model.impl.RecruitmentProcessModelImpl
 * @generated
 */
@ProviderType
public interface RecruitmentProcessModel extends BaseModel<RecruitmentProcess>,
	WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a recruitment process model instance should use the {@link RecruitmentProcess} interface instead.
	 */

	/**
	 * Returns the primary key of this recruitment process.
	 *
	 * @return the primary key of this recruitment process
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this recruitment process.
	 *
	 * @param primaryKey the primary key of this recruitment process
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the recruitment process ID of this recruitment process.
	 *
	 * @return the recruitment process ID of this recruitment process
	 */
	public long getRecruitmentProcessId();

	/**
	 * Sets the recruitment process ID of this recruitment process.
	 *
	 * @param recruitmentProcessId the recruitment process ID of this recruitment process
	 */
	public void setRecruitmentProcessId(long recruitmentProcessId);

	/**
	 * Returns the apply candidate ID of this recruitment process.
	 *
	 * @return the apply candidate ID of this recruitment process
	 */
	public long getApplyCandidateId();

	/**
	 * Sets the apply candidate ID of this recruitment process.
	 *
	 * @param applyCandidateId the apply candidate ID of this recruitment process
	 */
	public void setApplyCandidateId(long applyCandidateId);

	/**
	 * Returns the interview date of this recruitment process.
	 *
	 * @return the interview date of this recruitment process
	 */
	public Date getInterviewDate();

	/**
	 * Sets the interview date of this recruitment process.
	 *
	 * @param interviewDate the interview date of this recruitment process
	 */
	public void setInterviewDate(Date interviewDate);

	/**
	 * Returns the interview time of this recruitment process.
	 *
	 * @return the interview time of this recruitment process
	 */
	@AutoEscape
	public String getInterviewTime();

	/**
	 * Sets the interview time of this recruitment process.
	 *
	 * @param interviewTime the interview time of this recruitment process
	 */
	public void setInterviewTime(String interviewTime);

	/**
	 * Returns the file entry ID of this recruitment process.
	 *
	 * @return the file entry ID of this recruitment process
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this recruitment process.
	 *
	 * @param fileEntryId the file entry ID of this recruitment process
	 */
	public void setFileEntryId(long fileEntryId);

	/**
	 * Returns the create date of this recruitment process.
	 *
	 * @return the create date of this recruitment process
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this recruitment process.
	 *
	 * @param createDate the create date of this recruitment process
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this recruitment process.
	 *
	 * @return the modified date of this recruitment process
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this recruitment process.
	 *
	 * @param modifiedDate the modified date of this recruitment process
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the interviewer remarks of this recruitment process.
	 *
	 * @return the interviewer remarks of this recruitment process
	 */
	@AutoEscape
	public String getInterviewerRemarks();

	/**
	 * Sets the interviewer remarks of this recruitment process.
	 *
	 * @param interviewerRemarks the interviewer remarks of this recruitment process
	 */
	public void setInterviewerRemarks(String interviewerRemarks);

	/**
	 * Returns the hr remarks of this recruitment process.
	 *
	 * @return the hr remarks of this recruitment process
	 */
	@AutoEscape
	public String getHrRemarks();

	/**
	 * Sets the hr remarks of this recruitment process.
	 *
	 * @param hrRemarks the hr remarks of this recruitment process
	 */
	public void setHrRemarks(String hrRemarks);

	/**
	 * Returns the is selected of this recruitment process.
	 *
	 * @return the is selected of this recruitment process
	 */
	public boolean getIsSelected();

	/**
	 * Returns <code>true</code> if this recruitment process is is selected.
	 *
	 * @return <code>true</code> if this recruitment process is is selected; <code>false</code> otherwise
	 */
	public boolean isIsSelected();

	/**
	 * Sets whether this recruitment process is is selected.
	 *
	 * @param isSelected the is selected of this recruitment process
	 */
	public void setIsSelected(boolean isSelected);

	/**
	 * Returns the interviewer ID of this recruitment process.
	 *
	 * @return the interviewer ID of this recruitment process
	 */
	public long getInterviewerId();

	/**
	 * Sets the interviewer ID of this recruitment process.
	 *
	 * @param interviewerId the interviewer ID of this recruitment process
	 */
	public void setInterviewerId(long interviewerId);

	/**
	 * Returns the created by of this recruitment process.
	 *
	 * @return the created by of this recruitment process
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this recruitment process.
	 *
	 * @param createdBy the created by of this recruitment process
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the job post ID of this recruitment process.
	 *
	 * @return the job post ID of this recruitment process
	 */
	public long getJobPostId();

	/**
	 * Sets the job post ID of this recruitment process.
	 *
	 * @param jobPostId the job post ID of this recruitment process
	 */
	public void setJobPostId(long jobPostId);

	/**
	 * Returns the group ID of this recruitment process.
	 *
	 * @return the group ID of this recruitment process
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this recruitment process.
	 *
	 * @param groupId the group ID of this recruitment process
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the status of this recruitment process.
	 *
	 * @return the status of this recruitment process
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this recruitment process.
	 *
	 * @param status the status of this recruitment process
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this recruitment process.
	 *
	 * @return the status by user ID of this recruitment process
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this recruitment process.
	 *
	 * @param statusByUserId the status by user ID of this recruitment process
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this recruitment process.
	 *
	 * @return the status by user uuid of this recruitment process
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this recruitment process.
	 *
	 * @param statusByUserUuid the status by user uuid of this recruitment process
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this recruitment process.
	 *
	 * @return the status by user name of this recruitment process
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this recruitment process.
	 *
	 * @param statusByUserName the status by user name of this recruitment process
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this recruitment process.
	 *
	 * @return the status date of this recruitment process
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this recruitment process.
	 *
	 * @param statusDate the status date of this recruitment process
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the user ID of this recruitment process.
	 *
	 * @return the user ID of this recruitment process
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this recruitment process.
	 *
	 * @param userId the user ID of this recruitment process
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this recruitment process.
	 *
	 * @return the user uuid of this recruitment process
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this recruitment process.
	 *
	 * @param userUuid the user uuid of this recruitment process
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns <code>true</code> if this recruitment process is approved.
	 *
	 * @return <code>true</code> if this recruitment process is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this recruitment process is denied.
	 *
	 * @return <code>true</code> if this recruitment process is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this recruitment process is a draft.
	 *
	 * @return <code>true</code> if this recruitment process is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this recruitment process is expired.
	 *
	 * @return <code>true</code> if this recruitment process is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this recruitment process is inactive.
	 *
	 * @return <code>true</code> if this recruitment process is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this recruitment process is incomplete.
	 *
	 * @return <code>true</code> if this recruitment process is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this recruitment process is pending.
	 *
	 * @return <code>true</code> if this recruitment process is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this recruitment process is scheduled.
	 *
	 * @return <code>true</code> if this recruitment process is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(RecruitmentProcess recruitmentProcess);

	@Override
	public int hashCode();

	@Override
	public CacheModel<RecruitmentProcess> toCacheModel();

	@Override
	public RecruitmentProcess toEscapedModel();

	@Override
	public RecruitmentProcess toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}