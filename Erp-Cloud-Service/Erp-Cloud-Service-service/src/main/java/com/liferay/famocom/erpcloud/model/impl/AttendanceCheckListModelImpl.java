/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.AttendanceCheckList;
import com.liferay.famocom.erpcloud.model.AttendanceCheckListModel;
import com.liferay.famocom.erpcloud.model.AttendanceCheckListSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AttendanceCheckList service. Represents a row in the &quot;AttendanceCheckList&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AttendanceCheckListModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AttendanceCheckListImpl}.
 * </p>
 *
 * @author Samaresh
 * @see AttendanceCheckListImpl
 * @see AttendanceCheckList
 * @see AttendanceCheckListModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AttendanceCheckListModelImpl extends BaseModelImpl<AttendanceCheckList>
	implements AttendanceCheckListModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a attendance check list model instance should use the {@link AttendanceCheckList} interface instead.
	 */
	public static final String TABLE_NAME = "AttendanceCheckList";
	public static final Object[][] TABLE_COLUMNS = {
			{ "attendanceCheckListId", Types.BIGINT },
			{ "attDate", Types.TIMESTAMP },
			{ "employeeCode", Types.BIGINT },
			{ "fullName", Types.VARCHAR },
			{ "inTimeHour", Types.VARCHAR },
			{ "inTimeMin", Types.VARCHAR },
			{ "outTimeHour", Types.VARCHAR },
			{ "outTimeMin", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "msg", Types.VARCHAR },
			{ "indexNumber", Types.INTEGER },
			{ "pcDateAndTime", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("attendanceCheckListId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("attDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("employeeCode", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fullName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inTimeHour", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inTimeMin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outTimeHour", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outTimeMin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("msg", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("indexNumber", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("pcDateAndTime", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table AttendanceCheckList (attendanceCheckListId LONG not null primary key,attDate DATE null,employeeCode LONG,fullName VARCHAR(75) null,inTimeHour VARCHAR(75) null,inTimeMin VARCHAR(75) null,outTimeHour VARCHAR(75) null,outTimeMin VARCHAR(75) null,status VARCHAR(75) null,msg VARCHAR(75) null,indexNumber INTEGER,pcDateAndTime DATE null)";
	public static final String TABLE_SQL_DROP = "drop table AttendanceCheckList";
	public static final String ORDER_BY_JPQL = " ORDER BY attendanceCheckList.attendanceCheckListId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AttendanceCheckList.attendanceCheckListId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.AttendanceCheckList"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.AttendanceCheckList"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AttendanceCheckList toModel(AttendanceCheckListSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AttendanceCheckList model = new AttendanceCheckListImpl();

		model.setAttendanceCheckListId(soapModel.getAttendanceCheckListId());
		model.setAttDate(soapModel.getAttDate());
		model.setEmployeeCode(soapModel.getEmployeeCode());
		model.setFullName(soapModel.getFullName());
		model.setInTimeHour(soapModel.getInTimeHour());
		model.setInTimeMin(soapModel.getInTimeMin());
		model.setOutTimeHour(soapModel.getOutTimeHour());
		model.setOutTimeMin(soapModel.getOutTimeMin());
		model.setStatus(soapModel.getStatus());
		model.setMsg(soapModel.getMsg());
		model.setIndexNumber(soapModel.getIndexNumber());
		model.setPcDateAndTime(soapModel.getPcDateAndTime());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AttendanceCheckList> toModels(
		AttendanceCheckListSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AttendanceCheckList> models = new ArrayList<AttendanceCheckList>(soapModels.length);

		for (AttendanceCheckListSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.AttendanceCheckList"));

	public AttendanceCheckListModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _attendanceCheckListId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAttendanceCheckListId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _attendanceCheckListId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AttendanceCheckList.class;
	}

	@Override
	public String getModelClassName() {
		return AttendanceCheckList.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("attendanceCheckListId", getAttendanceCheckListId());
		attributes.put("attDate", getAttDate());
		attributes.put("employeeCode", getEmployeeCode());
		attributes.put("fullName", getFullName());
		attributes.put("inTimeHour", getInTimeHour());
		attributes.put("inTimeMin", getInTimeMin());
		attributes.put("outTimeHour", getOutTimeHour());
		attributes.put("outTimeMin", getOutTimeMin());
		attributes.put("status", getStatus());
		attributes.put("msg", getMsg());
		attributes.put("indexNumber", getIndexNumber());
		attributes.put("pcDateAndTime", getPcDateAndTime());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long attendanceCheckListId = (Long)attributes.get(
				"attendanceCheckListId");

		if (attendanceCheckListId != null) {
			setAttendanceCheckListId(attendanceCheckListId);
		}

		Date attDate = (Date)attributes.get("attDate");

		if (attDate != null) {
			setAttDate(attDate);
		}

		Long employeeCode = (Long)attributes.get("employeeCode");

		if (employeeCode != null) {
			setEmployeeCode(employeeCode);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		String inTimeHour = (String)attributes.get("inTimeHour");

		if (inTimeHour != null) {
			setInTimeHour(inTimeHour);
		}

		String inTimeMin = (String)attributes.get("inTimeMin");

		if (inTimeMin != null) {
			setInTimeMin(inTimeMin);
		}

		String outTimeHour = (String)attributes.get("outTimeHour");

		if (outTimeHour != null) {
			setOutTimeHour(outTimeHour);
		}

		String outTimeMin = (String)attributes.get("outTimeMin");

		if (outTimeMin != null) {
			setOutTimeMin(outTimeMin);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String msg = (String)attributes.get("msg");

		if (msg != null) {
			setMsg(msg);
		}

		Integer indexNumber = (Integer)attributes.get("indexNumber");

		if (indexNumber != null) {
			setIndexNumber(indexNumber);
		}

		Date pcDateAndTime = (Date)attributes.get("pcDateAndTime");

		if (pcDateAndTime != null) {
			setPcDateAndTime(pcDateAndTime);
		}
	}

	@JSON
	@Override
	public long getAttendanceCheckListId() {
		return _attendanceCheckListId;
	}

	@Override
	public void setAttendanceCheckListId(long attendanceCheckListId) {
		_attendanceCheckListId = attendanceCheckListId;
	}

	@JSON
	@Override
	public Date getAttDate() {
		return _attDate;
	}

	@Override
	public void setAttDate(Date attDate) {
		_attDate = attDate;
	}

	@JSON
	@Override
	public long getEmployeeCode() {
		return _employeeCode;
	}

	@Override
	public void setEmployeeCode(long employeeCode) {
		_employeeCode = employeeCode;
	}

	@JSON
	@Override
	public String getFullName() {
		if (_fullName == null) {
			return "";
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	@Override
	public String getInTimeHour() {
		if (_inTimeHour == null) {
			return "";
		}
		else {
			return _inTimeHour;
		}
	}

	@Override
	public void setInTimeHour(String inTimeHour) {
		_inTimeHour = inTimeHour;
	}

	@JSON
	@Override
	public String getInTimeMin() {
		if (_inTimeMin == null) {
			return "";
		}
		else {
			return _inTimeMin;
		}
	}

	@Override
	public void setInTimeMin(String inTimeMin) {
		_inTimeMin = inTimeMin;
	}

	@JSON
	@Override
	public String getOutTimeHour() {
		if (_outTimeHour == null) {
			return "";
		}
		else {
			return _outTimeHour;
		}
	}

	@Override
	public void setOutTimeHour(String outTimeHour) {
		_outTimeHour = outTimeHour;
	}

	@JSON
	@Override
	public String getOutTimeMin() {
		if (_outTimeMin == null) {
			return "";
		}
		else {
			return _outTimeMin;
		}
	}

	@Override
	public void setOutTimeMin(String outTimeMin) {
		_outTimeMin = outTimeMin;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public String getMsg() {
		if (_msg == null) {
			return "";
		}
		else {
			return _msg;
		}
	}

	@Override
	public void setMsg(String msg) {
		_msg = msg;
	}

	@JSON
	@Override
	public int getIndexNumber() {
		return _indexNumber;
	}

	@Override
	public void setIndexNumber(int indexNumber) {
		_indexNumber = indexNumber;
	}

	@JSON
	@Override
	public Date getPcDateAndTime() {
		return _pcDateAndTime;
	}

	@Override
	public void setPcDateAndTime(Date pcDateAndTime) {
		_pcDateAndTime = pcDateAndTime;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AttendanceCheckList.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AttendanceCheckList toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AttendanceCheckList)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AttendanceCheckListImpl attendanceCheckListImpl = new AttendanceCheckListImpl();

		attendanceCheckListImpl.setAttendanceCheckListId(getAttendanceCheckListId());
		attendanceCheckListImpl.setAttDate(getAttDate());
		attendanceCheckListImpl.setEmployeeCode(getEmployeeCode());
		attendanceCheckListImpl.setFullName(getFullName());
		attendanceCheckListImpl.setInTimeHour(getInTimeHour());
		attendanceCheckListImpl.setInTimeMin(getInTimeMin());
		attendanceCheckListImpl.setOutTimeHour(getOutTimeHour());
		attendanceCheckListImpl.setOutTimeMin(getOutTimeMin());
		attendanceCheckListImpl.setStatus(getStatus());
		attendanceCheckListImpl.setMsg(getMsg());
		attendanceCheckListImpl.setIndexNumber(getIndexNumber());
		attendanceCheckListImpl.setPcDateAndTime(getPcDateAndTime());

		attendanceCheckListImpl.resetOriginalValues();

		return attendanceCheckListImpl;
	}

	@Override
	public int compareTo(AttendanceCheckList attendanceCheckList) {
		long primaryKey = attendanceCheckList.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AttendanceCheckList)) {
			return false;
		}

		AttendanceCheckList attendanceCheckList = (AttendanceCheckList)obj;

		long primaryKey = attendanceCheckList.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<AttendanceCheckList> toCacheModel() {
		AttendanceCheckListCacheModel attendanceCheckListCacheModel = new AttendanceCheckListCacheModel();

		attendanceCheckListCacheModel.attendanceCheckListId = getAttendanceCheckListId();

		Date attDate = getAttDate();

		if (attDate != null) {
			attendanceCheckListCacheModel.attDate = attDate.getTime();
		}
		else {
			attendanceCheckListCacheModel.attDate = Long.MIN_VALUE;
		}

		attendanceCheckListCacheModel.employeeCode = getEmployeeCode();

		attendanceCheckListCacheModel.fullName = getFullName();

		String fullName = attendanceCheckListCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			attendanceCheckListCacheModel.fullName = null;
		}

		attendanceCheckListCacheModel.inTimeHour = getInTimeHour();

		String inTimeHour = attendanceCheckListCacheModel.inTimeHour;

		if ((inTimeHour != null) && (inTimeHour.length() == 0)) {
			attendanceCheckListCacheModel.inTimeHour = null;
		}

		attendanceCheckListCacheModel.inTimeMin = getInTimeMin();

		String inTimeMin = attendanceCheckListCacheModel.inTimeMin;

		if ((inTimeMin != null) && (inTimeMin.length() == 0)) {
			attendanceCheckListCacheModel.inTimeMin = null;
		}

		attendanceCheckListCacheModel.outTimeHour = getOutTimeHour();

		String outTimeHour = attendanceCheckListCacheModel.outTimeHour;

		if ((outTimeHour != null) && (outTimeHour.length() == 0)) {
			attendanceCheckListCacheModel.outTimeHour = null;
		}

		attendanceCheckListCacheModel.outTimeMin = getOutTimeMin();

		String outTimeMin = attendanceCheckListCacheModel.outTimeMin;

		if ((outTimeMin != null) && (outTimeMin.length() == 0)) {
			attendanceCheckListCacheModel.outTimeMin = null;
		}

		attendanceCheckListCacheModel.status = getStatus();

		String status = attendanceCheckListCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			attendanceCheckListCacheModel.status = null;
		}

		attendanceCheckListCacheModel.msg = getMsg();

		String msg = attendanceCheckListCacheModel.msg;

		if ((msg != null) && (msg.length() == 0)) {
			attendanceCheckListCacheModel.msg = null;
		}

		attendanceCheckListCacheModel.indexNumber = getIndexNumber();

		Date pcDateAndTime = getPcDateAndTime();

		if (pcDateAndTime != null) {
			attendanceCheckListCacheModel.pcDateAndTime = pcDateAndTime.getTime();
		}
		else {
			attendanceCheckListCacheModel.pcDateAndTime = Long.MIN_VALUE;
		}

		return attendanceCheckListCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{attendanceCheckListId=");
		sb.append(getAttendanceCheckListId());
		sb.append(", attDate=");
		sb.append(getAttDate());
		sb.append(", employeeCode=");
		sb.append(getEmployeeCode());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", inTimeHour=");
		sb.append(getInTimeHour());
		sb.append(", inTimeMin=");
		sb.append(getInTimeMin());
		sb.append(", outTimeHour=");
		sb.append(getOutTimeHour());
		sb.append(", outTimeMin=");
		sb.append(getOutTimeMin());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", msg=");
		sb.append(getMsg());
		sb.append(", indexNumber=");
		sb.append(getIndexNumber());
		sb.append(", pcDateAndTime=");
		sb.append(getPcDateAndTime());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.AttendanceCheckList");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>attendanceCheckListId</column-name><column-value><![CDATA[");
		sb.append(getAttendanceCheckListId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attDate</column-name><column-value><![CDATA[");
		sb.append(getAttDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeCode</column-name><column-value><![CDATA[");
		sb.append(getEmployeeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inTimeHour</column-name><column-value><![CDATA[");
		sb.append(getInTimeHour());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inTimeMin</column-name><column-value><![CDATA[");
		sb.append(getInTimeMin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outTimeHour</column-name><column-value><![CDATA[");
		sb.append(getOutTimeHour());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outTimeMin</column-name><column-value><![CDATA[");
		sb.append(getOutTimeMin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>msg</column-name><column-value><![CDATA[");
		sb.append(getMsg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indexNumber</column-name><column-value><![CDATA[");
		sb.append(getIndexNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pcDateAndTime</column-name><column-value><![CDATA[");
		sb.append(getPcDateAndTime());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AttendanceCheckList.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AttendanceCheckList.class, ModelWrapper.class
		};
	private long _attendanceCheckListId;
	private Date _attDate;
	private long _employeeCode;
	private String _fullName;
	private String _inTimeHour;
	private String _inTimeMin;
	private String _outTimeHour;
	private String _outTimeMin;
	private String _status;
	private String _msg;
	private int _indexNumber;
	private Date _pcDateAndTime;
	private AttendanceCheckList _escapedModel;
}