/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the BankMaster service. Represents a row in the &quot;bankMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.famocom.erpcloud.model.impl.BankMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.famocom.erpcloud.model.impl.BankMasterImpl}.
 * </p>
 *
 * @author Samaresh
 * @see BankMaster
 * @see com.liferay.famocom.erpcloud.model.impl.BankMasterImpl
 * @see com.liferay.famocom.erpcloud.model.impl.BankMasterModelImpl
 * @generated
 */
@ProviderType
public interface BankMasterModel extends BaseModel<BankMaster> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a bank master model instance should use the {@link BankMaster} interface instead.
	 */

	/**
	 * Returns the primary key of this bank master.
	 *
	 * @return the primary key of this bank master
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this bank master.
	 *
	 * @param primaryKey the primary key of this bank master
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the bank ID of this bank master.
	 *
	 * @return the bank ID of this bank master
	 */
	public long getBankId();

	/**
	 * Sets the bank ID of this bank master.
	 *
	 * @param bankId the bank ID of this bank master
	 */
	public void setBankId(long bankId);

	/**
	 * Returns the bank name of this bank master.
	 *
	 * @return the bank name of this bank master
	 */
	@AutoEscape
	public String getBankName();

	/**
	 * Sets the bank name of this bank master.
	 *
	 * @param bankName the bank name of this bank master
	 */
	public void setBankName(String bankName);

	/**
	 * Returns the branch name of this bank master.
	 *
	 * @return the branch name of this bank master
	 */
	@AutoEscape
	public String getBranchName();

	/**
	 * Sets the branch name of this bank master.
	 *
	 * @param branchName the branch name of this bank master
	 */
	public void setBranchName(String branchName);

	/**
	 * Returns the address of this bank master.
	 *
	 * @return the address of this bank master
	 */
	@AutoEscape
	public String getAddress();

	/**
	 * Sets the address of this bank master.
	 *
	 * @param address the address of this bank master
	 */
	public void setAddress(String address);

	/**
	 * Returns the ifsc code of this bank master.
	 *
	 * @return the ifsc code of this bank master
	 */
	@AutoEscape
	public String getIfscCode();

	/**
	 * Sets the ifsc code of this bank master.
	 *
	 * @param ifscCode the ifsc code of this bank master
	 */
	public void setIfscCode(String ifscCode);

	/**
	 * Returns the status of this bank master.
	 *
	 * @return the status of this bank master
	 */
	public int getStatus();

	/**
	 * Sets the status of this bank master.
	 *
	 * @param status the status of this bank master
	 */
	public void setStatus(int status);

	/**
	 * Returns the bank type of this bank master.
	 *
	 * @return the bank type of this bank master
	 */
	public int getBankType();

	/**
	 * Sets the bank type of this bank master.
	 *
	 * @param bankType the bank type of this bank master
	 */
	public void setBankType(int bankType);

	/**
	 * Returns the created by of this bank master.
	 *
	 * @return the created by of this bank master
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this bank master.
	 *
	 * @param createdBy the created by of this bank master
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the create date of this bank master.
	 *
	 * @return the create date of this bank master
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this bank master.
	 *
	 * @param createDate the create date of this bank master
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this bank master.
	 *
	 * @return the modified date of this bank master
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this bank master.
	 *
	 * @param modifiedDate the modified date of this bank master
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(BankMaster bankMaster);

	@Override
	public int hashCode();

	@Override
	public CacheModel<BankMaster> toCacheModel();

	@Override
	public BankMaster toEscapedModel();

	@Override
	public BankMaster toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}