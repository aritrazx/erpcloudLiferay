/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.famocom.erpcloud.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.famocom.erpcloud.model.FormSixteen;
import com.liferay.famocom.erpcloud.model.FormSixteenModel;
import com.liferay.famocom.erpcloud.model.FormSixteenSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the FormSixteen service. Represents a row in the &quot;FormSixteen&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link FormSixteenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FormSixteenImpl}.
 * </p>
 *
 * @author Samaresh
 * @see FormSixteenImpl
 * @see FormSixteen
 * @see FormSixteenModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class FormSixteenModelImpl extends BaseModelImpl<FormSixteen>
	implements FormSixteenModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a form sixteen model instance should use the {@link FormSixteen} interface instead.
	 */
	public static final String TABLE_NAME = "FormSixteen";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "financialYear", Types.VARCHAR },
			{ "fileEnteryId", Types.BIGINT },
			{ "addedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("financialYear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fileEnteryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("addedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table FormSixteen (id_ LONG not null primary key,employeeId LONG,financialYear VARCHAR(75) null,fileEnteryId LONG,addedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table FormSixteen";
	public static final String ORDER_BY_JPQL = " ORDER BY formSixteen.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY FormSixteen.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.famocom.erpcloud.model.FormSixteen"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.famocom.erpcloud.model.FormSixteen"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.famocom.erpcloud.model.FormSixteen"),
			true);
	public static final long EMPLOYEEID_COLUMN_BITMASK = 1L;
	public static final long FINANCIALYEAR_COLUMN_BITMASK = 2L;
	public static final long ID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FormSixteen toModel(FormSixteenSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		FormSixteen model = new FormSixteenImpl();

		model.setId(soapModel.getId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setFinancialYear(soapModel.getFinancialYear());
		model.setFileEnteryId(soapModel.getFileEnteryId());
		model.setAddedDate(soapModel.getAddedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FormSixteen> toModels(FormSixteenSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<FormSixteen> models = new ArrayList<FormSixteen>(soapModels.length);

		for (FormSixteenSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.famocom.erpcloud.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.famocom.erpcloud.model.FormSixteen"));

	public FormSixteenModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FormSixteen.class;
	}

	@Override
	public String getModelClassName() {
		return FormSixteen.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("financialYear", getFinancialYear());
		attributes.put("fileEnteryId", getFileEnteryId());
		attributes.put("addedDate", getAddedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		String financialYear = (String)attributes.get("financialYear");

		if (financialYear != null) {
			setFinancialYear(financialYear);
		}

		Long fileEnteryId = (Long)attributes.get("fileEnteryId");

		if (fileEnteryId != null) {
			setFileEnteryId(fileEnteryId);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@JSON
	@Override
	public String getFinancialYear() {
		if (_financialYear == null) {
			return "";
		}
		else {
			return _financialYear;
		}
	}

	@Override
	public void setFinancialYear(String financialYear) {
		_columnBitmask |= FINANCIALYEAR_COLUMN_BITMASK;

		if (_originalFinancialYear == null) {
			_originalFinancialYear = _financialYear;
		}

		_financialYear = financialYear;
	}

	public String getOriginalFinancialYear() {
		return GetterUtil.getString(_originalFinancialYear);
	}

	@JSON
	@Override
	public long getFileEnteryId() {
		return _fileEnteryId;
	}

	@Override
	public void setFileEnteryId(long fileEnteryId) {
		_fileEnteryId = fileEnteryId;
	}

	@JSON
	@Override
	public Date getAddedDate() {
		return _addedDate;
	}

	@Override
	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FormSixteen.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FormSixteen toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FormSixteen)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FormSixteenImpl formSixteenImpl = new FormSixteenImpl();

		formSixteenImpl.setId(getId());
		formSixteenImpl.setEmployeeId(getEmployeeId());
		formSixteenImpl.setFinancialYear(getFinancialYear());
		formSixteenImpl.setFileEnteryId(getFileEnteryId());
		formSixteenImpl.setAddedDate(getAddedDate());

		formSixteenImpl.resetOriginalValues();

		return formSixteenImpl;
	}

	@Override
	public int compareTo(FormSixteen formSixteen) {
		long primaryKey = formSixteen.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FormSixteen)) {
			return false;
		}

		FormSixteen formSixteen = (FormSixteen)obj;

		long primaryKey = formSixteen.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		FormSixteenModelImpl formSixteenModelImpl = this;

		formSixteenModelImpl._originalEmployeeId = formSixteenModelImpl._employeeId;

		formSixteenModelImpl._setOriginalEmployeeId = false;

		formSixteenModelImpl._originalFinancialYear = formSixteenModelImpl._financialYear;

		formSixteenModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FormSixteen> toCacheModel() {
		FormSixteenCacheModel formSixteenCacheModel = new FormSixteenCacheModel();

		formSixteenCacheModel.id = getId();

		formSixteenCacheModel.employeeId = getEmployeeId();

		formSixteenCacheModel.financialYear = getFinancialYear();

		String financialYear = formSixteenCacheModel.financialYear;

		if ((financialYear != null) && (financialYear.length() == 0)) {
			formSixteenCacheModel.financialYear = null;
		}

		formSixteenCacheModel.fileEnteryId = getFileEnteryId();

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			formSixteenCacheModel.addedDate = addedDate.getTime();
		}
		else {
			formSixteenCacheModel.addedDate = Long.MIN_VALUE;
		}

		return formSixteenCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", financialYear=");
		sb.append(getFinancialYear());
		sb.append(", fileEnteryId=");
		sb.append(getFileEnteryId());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.liferay.famocom.erpcloud.model.FormSixteen");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>financialYear</column-name><column-value><![CDATA[");
		sb.append(getFinancialYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEnteryId</column-name><column-value><![CDATA[");
		sb.append(getFileEnteryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = FormSixteen.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			FormSixteen.class, ModelWrapper.class
		};
	private long _id;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private String _financialYear;
	private String _originalFinancialYear;
	private long _fileEnteryId;
	private Date _addedDate;
	private long _columnBitmask;
	private FormSixteen _escapedModel;
}